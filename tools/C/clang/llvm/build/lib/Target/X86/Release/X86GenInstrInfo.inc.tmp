/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Enum Values                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace X86 {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    AAA	= 17,
    AAD8i8	= 18,
    AAM8i8	= 19,
    AAS	= 20,
    ABS_F	= 21,
    ABS_Fp32	= 22,
    ABS_Fp64	= 23,
    ABS_Fp80	= 24,
    ACQUIRE_MOV16rm	= 25,
    ACQUIRE_MOV32rm	= 26,
    ACQUIRE_MOV64rm	= 27,
    ACQUIRE_MOV8rm	= 28,
    ADC16i16	= 29,
    ADC16mi	= 30,
    ADC16mi8	= 31,
    ADC16mr	= 32,
    ADC16ri	= 33,
    ADC16ri8	= 34,
    ADC16rm	= 35,
    ADC16rr	= 36,
    ADC16rr_REV	= 37,
    ADC32i32	= 38,
    ADC32mi	= 39,
    ADC32mi8	= 40,
    ADC32mr	= 41,
    ADC32ri	= 42,
    ADC32ri8	= 43,
    ADC32rm	= 44,
    ADC32rr	= 45,
    ADC32rr_REV	= 46,
    ADC64i32	= 47,
    ADC64mi32	= 48,
    ADC64mi8	= 49,
    ADC64mr	= 50,
    ADC64ri32	= 51,
    ADC64ri8	= 52,
    ADC64rm	= 53,
    ADC64rr	= 54,
    ADC64rr_REV	= 55,
    ADC8i8	= 56,
    ADC8mi	= 57,
    ADC8mr	= 58,
    ADC8ri	= 59,
    ADC8rm	= 60,
    ADC8rr	= 61,
    ADC8rr_REV	= 62,
    ADCX32rm	= 63,
    ADCX32rr	= 64,
    ADCX64rm	= 65,
    ADCX64rr	= 66,
    ADD16i16	= 67,
    ADD16mi	= 68,
    ADD16mi8	= 69,
    ADD16mr	= 70,
    ADD16ri	= 71,
    ADD16ri8	= 72,
    ADD16ri8_DB	= 73,
    ADD16ri_DB	= 74,
    ADD16rm	= 75,
    ADD16rr	= 76,
    ADD16rr_DB	= 77,
    ADD16rr_REV	= 78,
    ADD32i32	= 79,
    ADD32mi	= 80,
    ADD32mi8	= 81,
    ADD32mr	= 82,
    ADD32ri	= 83,
    ADD32ri8	= 84,
    ADD32ri8_DB	= 85,
    ADD32ri_DB	= 86,
    ADD32rm	= 87,
    ADD32rr	= 88,
    ADD32rr_DB	= 89,
    ADD32rr_REV	= 90,
    ADD64i32	= 91,
    ADD64mi32	= 92,
    ADD64mi8	= 93,
    ADD64mr	= 94,
    ADD64ri32	= 95,
    ADD64ri32_DB	= 96,
    ADD64ri8	= 97,
    ADD64ri8_DB	= 98,
    ADD64rm	= 99,
    ADD64rr	= 100,
    ADD64rr_DB	= 101,
    ADD64rr_REV	= 102,
    ADD8i8	= 103,
    ADD8mi	= 104,
    ADD8mr	= 105,
    ADD8ri	= 106,
    ADD8rm	= 107,
    ADD8rr	= 108,
    ADD8rr_REV	= 109,
    ADDPDrm	= 110,
    ADDPDrr	= 111,
    ADDPSrm	= 112,
    ADDPSrr	= 113,
    ADDSDrm	= 114,
    ADDSDrm_Int	= 115,
    ADDSDrr	= 116,
    ADDSDrr_Int	= 117,
    ADDSSrm	= 118,
    ADDSSrm_Int	= 119,
    ADDSSrr	= 120,
    ADDSSrr_Int	= 121,
    ADDSUBPDrm	= 122,
    ADDSUBPDrr	= 123,
    ADDSUBPSrm	= 124,
    ADDSUBPSrr	= 125,
    ADD_F32m	= 126,
    ADD_F64m	= 127,
    ADD_FI16m	= 128,
    ADD_FI32m	= 129,
    ADD_FPrST0	= 130,
    ADD_FST0r	= 131,
    ADD_Fp32	= 132,
    ADD_Fp32m	= 133,
    ADD_Fp64	= 134,
    ADD_Fp64m	= 135,
    ADD_Fp64m32	= 136,
    ADD_Fp80	= 137,
    ADD_Fp80m32	= 138,
    ADD_Fp80m64	= 139,
    ADD_FpI16m32	= 140,
    ADD_FpI16m64	= 141,
    ADD_FpI16m80	= 142,
    ADD_FpI32m32	= 143,
    ADD_FpI32m64	= 144,
    ADD_FpI32m80	= 145,
    ADD_FrST0	= 146,
    ADJCALLSTACKDOWN32	= 147,
    ADJCALLSTACKDOWN64	= 148,
    ADJCALLSTACKUP32	= 149,
    ADJCALLSTACKUP64	= 150,
    ADOX32rm	= 151,
    ADOX32rr	= 152,
    ADOX64rm	= 153,
    ADOX64rr	= 154,
    AESDECLASTrm	= 155,
    AESDECLASTrr	= 156,
    AESDECrm	= 157,
    AESDECrr	= 158,
    AESENCLASTrm	= 159,
    AESENCLASTrr	= 160,
    AESENCrm	= 161,
    AESENCrr	= 162,
    AESIMCrm	= 163,
    AESIMCrr	= 164,
    AESKEYGENASSIST128rm	= 165,
    AESKEYGENASSIST128rr	= 166,
    AND16i16	= 167,
    AND16mi	= 168,
    AND16mi8	= 169,
    AND16mr	= 170,
    AND16ri	= 171,
    AND16ri8	= 172,
    AND16rm	= 173,
    AND16rr	= 174,
    AND16rr_REV	= 175,
    AND32i32	= 176,
    AND32mi	= 177,
    AND32mi8	= 178,
    AND32mr	= 179,
    AND32ri	= 180,
    AND32ri8	= 181,
    AND32rm	= 182,
    AND32rr	= 183,
    AND32rr_REV	= 184,
    AND64i32	= 185,
    AND64mi32	= 186,
    AND64mi8	= 187,
    AND64mr	= 188,
    AND64ri32	= 189,
    AND64ri8	= 190,
    AND64rm	= 191,
    AND64rr	= 192,
    AND64rr_REV	= 193,
    AND8i8	= 194,
    AND8mi	= 195,
    AND8mr	= 196,
    AND8ri	= 197,
    AND8rm	= 198,
    AND8rr	= 199,
    AND8rr_REV	= 200,
    ANDN32rm	= 201,
    ANDN32rr	= 202,
    ANDN64rm	= 203,
    ANDN64rr	= 204,
    ANDNPDrm	= 205,
    ANDNPDrr	= 206,
    ANDNPSrm	= 207,
    ANDNPSrr	= 208,
    ANDPDrm	= 209,
    ANDPDrr	= 210,
    ANDPSrm	= 211,
    ANDPSrr	= 212,
    ARPL16mr	= 213,
    ARPL16rr	= 214,
    ATOMADD6432	= 215,
    ATOMAND16	= 216,
    ATOMAND32	= 217,
    ATOMAND64	= 218,
    ATOMAND6432	= 219,
    ATOMAND8	= 220,
    ATOMMAX16	= 221,
    ATOMMAX32	= 222,
    ATOMMAX64	= 223,
    ATOMMAX6432	= 224,
    ATOMMAX8	= 225,
    ATOMMIN16	= 226,
    ATOMMIN32	= 227,
    ATOMMIN64	= 228,
    ATOMMIN6432	= 229,
    ATOMMIN8	= 230,
    ATOMNAND16	= 231,
    ATOMNAND32	= 232,
    ATOMNAND64	= 233,
    ATOMNAND6432	= 234,
    ATOMNAND8	= 235,
    ATOMOR16	= 236,
    ATOMOR32	= 237,
    ATOMOR64	= 238,
    ATOMOR6432	= 239,
    ATOMOR8	= 240,
    ATOMSUB6432	= 241,
    ATOMSWAP6432	= 242,
    ATOMUMAX16	= 243,
    ATOMUMAX32	= 244,
    ATOMUMAX64	= 245,
    ATOMUMAX6432	= 246,
    ATOMUMAX8	= 247,
    ATOMUMIN16	= 248,
    ATOMUMIN32	= 249,
    ATOMUMIN64	= 250,
    ATOMUMIN6432	= 251,
    ATOMUMIN8	= 252,
    ATOMXOR16	= 253,
    ATOMXOR32	= 254,
    ATOMXOR64	= 255,
    ATOMXOR6432	= 256,
    ATOMXOR8	= 257,
    AVX2_SETALLONES	= 258,
    AVX_SET0	= 259,
    BEXTR32rm	= 260,
    BEXTR32rr	= 261,
    BEXTR64rm	= 262,
    BEXTR64rr	= 263,
    BLENDPDrmi	= 264,
    BLENDPDrri	= 265,
    BLENDPSrmi	= 266,
    BLENDPSrri	= 267,
    BLENDVPDrm0	= 268,
    BLENDVPDrr0	= 269,
    BLENDVPSrm0	= 270,
    BLENDVPSrr0	= 271,
    BLSI32rm	= 272,
    BLSI32rr	= 273,
    BLSI64rm	= 274,
    BLSI64rr	= 275,
    BLSMSK32rm	= 276,
    BLSMSK32rr	= 277,
    BLSMSK64rm	= 278,
    BLSMSK64rr	= 279,
    BLSR32rm	= 280,
    BLSR32rr	= 281,
    BLSR64rm	= 282,
    BLSR64rr	= 283,
    BOUNDS16rm	= 284,
    BOUNDS32rm	= 285,
    BSF16rm	= 286,
    BSF16rr	= 287,
    BSF32rm	= 288,
    BSF32rr	= 289,
    BSF64rm	= 290,
    BSF64rr	= 291,
    BSR16rm	= 292,
    BSR16rr	= 293,
    BSR32rm	= 294,
    BSR32rr	= 295,
    BSR64rm	= 296,
    BSR64rr	= 297,
    BSWAP32r	= 298,
    BSWAP64r	= 299,
    BT16mi8	= 300,
    BT16mr	= 301,
    BT16ri8	= 302,
    BT16rr	= 303,
    BT32mi8	= 304,
    BT32mr	= 305,
    BT32ri8	= 306,
    BT32rr	= 307,
    BT64mi8	= 308,
    BT64mr	= 309,
    BT64ri8	= 310,
    BT64rr	= 311,
    BTC16mi8	= 312,
    BTC16mr	= 313,
    BTC16ri8	= 314,
    BTC16rr	= 315,
    BTC32mi8	= 316,
    BTC32mr	= 317,
    BTC32ri8	= 318,
    BTC32rr	= 319,
    BTC64mi8	= 320,
    BTC64mr	= 321,
    BTC64ri8	= 322,
    BTC64rr	= 323,
    BTR16mi8	= 324,
    BTR16mr	= 325,
    BTR16ri8	= 326,
    BTR16rr	= 327,
    BTR32mi8	= 328,
    BTR32mr	= 329,
    BTR32ri8	= 330,
    BTR32rr	= 331,
    BTR64mi8	= 332,
    BTR64mr	= 333,
    BTR64ri8	= 334,
    BTR64rr	= 335,
    BTS16mi8	= 336,
    BTS16mr	= 337,
    BTS16ri8	= 338,
    BTS16rr	= 339,
    BTS32mi8	= 340,
    BTS32mr	= 341,
    BTS32ri8	= 342,
    BTS32rr	= 343,
    BTS64mi8	= 344,
    BTS64mr	= 345,
    BTS64ri8	= 346,
    BTS64rr	= 347,
    BZHI32rm	= 348,
    BZHI32rr	= 349,
    BZHI64rm	= 350,
    BZHI64rr	= 351,
    CALL32m	= 352,
    CALL32r	= 353,
    CALL64m	= 354,
    CALL64pcrel32	= 355,
    CALL64r	= 356,
    CALLpcrel16	= 357,
    CALLpcrel32	= 358,
    CBW	= 359,
    CDQ	= 360,
    CDQE	= 361,
    CHS_F	= 362,
    CHS_Fp32	= 363,
    CHS_Fp64	= 364,
    CHS_Fp80	= 365,
    CLAC	= 366,
    CLC	= 367,
    CLD	= 368,
    CLFLUSH	= 369,
    CLGI	= 370,
    CLI	= 371,
    CLTS	= 372,
    CMC	= 373,
    CMOVA16rm	= 374,
    CMOVA16rr	= 375,
    CMOVA32rm	= 376,
    CMOVA32rr	= 377,
    CMOVA64rm	= 378,
    CMOVA64rr	= 379,
    CMOVAE16rm	= 380,
    CMOVAE16rr	= 381,
    CMOVAE32rm	= 382,
    CMOVAE32rr	= 383,
    CMOVAE64rm	= 384,
    CMOVAE64rr	= 385,
    CMOVB16rm	= 386,
    CMOVB16rr	= 387,
    CMOVB32rm	= 388,
    CMOVB32rr	= 389,
    CMOVB64rm	= 390,
    CMOVB64rr	= 391,
    CMOVBE16rm	= 392,
    CMOVBE16rr	= 393,
    CMOVBE32rm	= 394,
    CMOVBE32rr	= 395,
    CMOVBE64rm	= 396,
    CMOVBE64rr	= 397,
    CMOVBE_F	= 398,
    CMOVBE_Fp32	= 399,
    CMOVBE_Fp64	= 400,
    CMOVBE_Fp80	= 401,
    CMOVB_F	= 402,
    CMOVB_Fp32	= 403,
    CMOVB_Fp64	= 404,
    CMOVB_Fp80	= 405,
    CMOVE16rm	= 406,
    CMOVE16rr	= 407,
    CMOVE32rm	= 408,
    CMOVE32rr	= 409,
    CMOVE64rm	= 410,
    CMOVE64rr	= 411,
    CMOVE_F	= 412,
    CMOVE_Fp32	= 413,
    CMOVE_Fp64	= 414,
    CMOVE_Fp80	= 415,
    CMOVG16rm	= 416,
    CMOVG16rr	= 417,
    CMOVG32rm	= 418,
    CMOVG32rr	= 419,
    CMOVG64rm	= 420,
    CMOVG64rr	= 421,
    CMOVGE16rm	= 422,
    CMOVGE16rr	= 423,
    CMOVGE32rm	= 424,
    CMOVGE32rr	= 425,
    CMOVGE64rm	= 426,
    CMOVGE64rr	= 427,
    CMOVL16rm	= 428,
    CMOVL16rr	= 429,
    CMOVL32rm	= 430,
    CMOVL32rr	= 431,
    CMOVL64rm	= 432,
    CMOVL64rr	= 433,
    CMOVLE16rm	= 434,
    CMOVLE16rr	= 435,
    CMOVLE32rm	= 436,
    CMOVLE32rr	= 437,
    CMOVLE64rm	= 438,
    CMOVLE64rr	= 439,
    CMOVNBE_F	= 440,
    CMOVNBE_Fp32	= 441,
    CMOVNBE_Fp64	= 442,
    CMOVNBE_Fp80	= 443,
    CMOVNB_F	= 444,
    CMOVNB_Fp32	= 445,
    CMOVNB_Fp64	= 446,
    CMOVNB_Fp80	= 447,
    CMOVNE16rm	= 448,
    CMOVNE16rr	= 449,
    CMOVNE32rm	= 450,
    CMOVNE32rr	= 451,
    CMOVNE64rm	= 452,
    CMOVNE64rr	= 453,
    CMOVNE_F	= 454,
    CMOVNE_Fp32	= 455,
    CMOVNE_Fp64	= 456,
    CMOVNE_Fp80	= 457,
    CMOVNO16rm	= 458,
    CMOVNO16rr	= 459,
    CMOVNO32rm	= 460,
    CMOVNO32rr	= 461,
    CMOVNO64rm	= 462,
    CMOVNO64rr	= 463,
    CMOVNP16rm	= 464,
    CMOVNP16rr	= 465,
    CMOVNP32rm	= 466,
    CMOVNP32rr	= 467,
    CMOVNP64rm	= 468,
    CMOVNP64rr	= 469,
    CMOVNP_F	= 470,
    CMOVNP_Fp32	= 471,
    CMOVNP_Fp64	= 472,
    CMOVNP_Fp80	= 473,
    CMOVNS16rm	= 474,
    CMOVNS16rr	= 475,
    CMOVNS32rm	= 476,
    CMOVNS32rr	= 477,
    CMOVNS64rm	= 478,
    CMOVNS64rr	= 479,
    CMOVO16rm	= 480,
    CMOVO16rr	= 481,
    CMOVO32rm	= 482,
    CMOVO32rr	= 483,
    CMOVO64rm	= 484,
    CMOVO64rr	= 485,
    CMOVP16rm	= 486,
    CMOVP16rr	= 487,
    CMOVP32rm	= 488,
    CMOVP32rr	= 489,
    CMOVP64rm	= 490,
    CMOVP64rr	= 491,
    CMOVP_F	= 492,
    CMOVP_Fp32	= 493,
    CMOVP_Fp64	= 494,
    CMOVP_Fp80	= 495,
    CMOVS16rm	= 496,
    CMOVS16rr	= 497,
    CMOVS32rm	= 498,
    CMOVS32rr	= 499,
    CMOVS64rm	= 500,
    CMOVS64rr	= 501,
    CMOV_FR32	= 502,
    CMOV_FR64	= 503,
    CMOV_GR16	= 504,
    CMOV_GR32	= 505,
    CMOV_GR8	= 506,
    CMOV_RFP32	= 507,
    CMOV_RFP64	= 508,
    CMOV_RFP80	= 509,
    CMOV_V2F64	= 510,
    CMOV_V2I64	= 511,
    CMOV_V4F32	= 512,
    CMOV_V4F64	= 513,
    CMOV_V4I64	= 514,
    CMOV_V8F32	= 515,
    CMP16i16	= 516,
    CMP16mi	= 517,
    CMP16mi8	= 518,
    CMP16mr	= 519,
    CMP16ri	= 520,
    CMP16ri8	= 521,
    CMP16rm	= 522,
    CMP16rr	= 523,
    CMP16rr_REV	= 524,
    CMP32i32	= 525,
    CMP32mi	= 526,
    CMP32mi8	= 527,
    CMP32mr	= 528,
    CMP32ri	= 529,
    CMP32ri8	= 530,
    CMP32rm	= 531,
    CMP32rr	= 532,
    CMP32rr_REV	= 533,
    CMP64i32	= 534,
    CMP64mi32	= 535,
    CMP64mi8	= 536,
    CMP64mr	= 537,
    CMP64ri32	= 538,
    CMP64ri8	= 539,
    CMP64rm	= 540,
    CMP64rr	= 541,
    CMP64rr_REV	= 542,
    CMP8i8	= 543,
    CMP8mi	= 544,
    CMP8mr	= 545,
    CMP8ri	= 546,
    CMP8rm	= 547,
    CMP8rr	= 548,
    CMP8rr_REV	= 549,
    CMPPDrmi	= 550,
    CMPPDrmi_alt	= 551,
    CMPPDrri	= 552,
    CMPPDrri_alt	= 553,
    CMPPSrmi	= 554,
    CMPPSrmi_alt	= 555,
    CMPPSrri	= 556,
    CMPPSrri_alt	= 557,
    CMPS16	= 558,
    CMPS32	= 559,
    CMPS64	= 560,
    CMPS8	= 561,
    CMPSDrm	= 562,
    CMPSDrm_alt	= 563,
    CMPSDrr	= 564,
    CMPSDrr_alt	= 565,
    CMPSSrm	= 566,
    CMPSSrm_alt	= 567,
    CMPSSrr	= 568,
    CMPSSrr_alt	= 569,
    CMPXCHG16B	= 570,
    CMPXCHG16rm	= 571,
    CMPXCHG16rr	= 572,
    CMPXCHG32rm	= 573,
    CMPXCHG32rr	= 574,
    CMPXCHG64rm	= 575,
    CMPXCHG64rr	= 576,
    CMPXCHG8B	= 577,
    CMPXCHG8rm	= 578,
    CMPXCHG8rr	= 579,
    COMISDrm	= 580,
    COMISDrr	= 581,
    COMISSrm	= 582,
    COMISSrr	= 583,
    COMP_FST0r	= 584,
    COM_FIPr	= 585,
    COM_FIr	= 586,
    COM_FST0r	= 587,
    COS_F	= 588,
    COS_Fp32	= 589,
    COS_Fp64	= 590,
    COS_Fp80	= 591,
    CPUID	= 592,
    CQO	= 593,
    CRC32r32m16	= 594,
    CRC32r32m32	= 595,
    CRC32r32m8	= 596,
    CRC32r32r16	= 597,
    CRC32r32r32	= 598,
    CRC32r32r8	= 599,
    CRC32r64m64	= 600,
    CRC32r64m8	= 601,
    CRC32r64r64	= 602,
    CRC32r64r8	= 603,
    CS_PREFIX	= 604,
    CVTDQ2PDrm	= 605,
    CVTDQ2PDrr	= 606,
    CVTDQ2PSrm	= 607,
    CVTDQ2PSrr	= 608,
    CVTPD2DQrm	= 609,
    CVTPD2DQrr	= 610,
    CVTPD2PSrm	= 611,
    CVTPD2PSrr	= 612,
    CVTPS2DQrm	= 613,
    CVTPS2DQrr	= 614,
    CVTPS2PDrm	= 615,
    CVTPS2PDrr	= 616,
    CVTSD2SI64rm	= 617,
    CVTSD2SI64rr	= 618,
    CVTSD2SIrm	= 619,
    CVTSD2SIrr	= 620,
    CVTSD2SSrm	= 621,
    CVTSD2SSrr	= 622,
    CVTSI2SD64rm	= 623,
    CVTSI2SD64rr	= 624,
    CVTSI2SDrm	= 625,
    CVTSI2SDrr	= 626,
    CVTSI2SS64rm	= 627,
    CVTSI2SS64rr	= 628,
    CVTSI2SSrm	= 629,
    CVTSI2SSrr	= 630,
    CVTSS2SDrm	= 631,
    CVTSS2SDrr	= 632,
    CVTSS2SI64rm	= 633,
    CVTSS2SI64rr	= 634,
    CVTSS2SIrm	= 635,
    CVTSS2SIrr	= 636,
    CVTTPD2DQrm	= 637,
    CVTTPD2DQrr	= 638,
    CVTTPS2DQrm	= 639,
    CVTTPS2DQrr	= 640,
    CVTTSD2SI64rm	= 641,
    CVTTSD2SI64rr	= 642,
    CVTTSD2SIrm	= 643,
    CVTTSD2SIrr	= 644,
    CVTTSS2SI64rm	= 645,
    CVTTSS2SI64rr	= 646,
    CVTTSS2SIrm	= 647,
    CVTTSS2SIrr	= 648,
    CWD	= 649,
    CWDE	= 650,
    DAA	= 651,
    DAS	= 652,
    DATA16_PREFIX	= 653,
    DEC16m	= 654,
    DEC16r	= 655,
    DEC32m	= 656,
    DEC32r	= 657,
    DEC64_16m	= 658,
    DEC64_16r	= 659,
    DEC64_32m	= 660,
    DEC64_32r	= 661,
    DEC64m	= 662,
    DEC64r	= 663,
    DEC8m	= 664,
    DEC8r	= 665,
    DIV16m	= 666,
    DIV16r	= 667,
    DIV32m	= 668,
    DIV32r	= 669,
    DIV64m	= 670,
    DIV64r	= 671,
    DIV8m	= 672,
    DIV8r	= 673,
    DIVPDrm	= 674,
    DIVPDrr	= 675,
    DIVPSrm	= 676,
    DIVPSrr	= 677,
    DIVR_F32m	= 678,
    DIVR_F64m	= 679,
    DIVR_FI16m	= 680,
    DIVR_FI32m	= 681,
    DIVR_FPrST0	= 682,
    DIVR_FST0r	= 683,
    DIVR_Fp32m	= 684,
    DIVR_Fp64m	= 685,
    DIVR_Fp64m32	= 686,
    DIVR_Fp80m32	= 687,
    DIVR_Fp80m64	= 688,
    DIVR_FpI16m32	= 689,
    DIVR_FpI16m64	= 690,
    DIVR_FpI16m80	= 691,
    DIVR_FpI32m32	= 692,
    DIVR_FpI32m64	= 693,
    DIVR_FpI32m80	= 694,
    DIVR_FrST0	= 695,
    DIVSDrm	= 696,
    DIVSDrm_Int	= 697,
    DIVSDrr	= 698,
    DIVSDrr_Int	= 699,
    DIVSSrm	= 700,
    DIVSSrm_Int	= 701,
    DIVSSrr	= 702,
    DIVSSrr_Int	= 703,
    DIV_F32m	= 704,
    DIV_F64m	= 705,
    DIV_FI16m	= 706,
    DIV_FI32m	= 707,
    DIV_FPrST0	= 708,
    DIV_FST0r	= 709,
    DIV_Fp32	= 710,
    DIV_Fp32m	= 711,
    DIV_Fp64	= 712,
    DIV_Fp64m	= 713,
    DIV_Fp64m32	= 714,
    DIV_Fp80	= 715,
    DIV_Fp80m32	= 716,
    DIV_Fp80m64	= 717,
    DIV_FpI16m32	= 718,
    DIV_FpI16m64	= 719,
    DIV_FpI16m80	= 720,
    DIV_FpI32m32	= 721,
    DIV_FpI32m64	= 722,
    DIV_FpI32m80	= 723,
    DIV_FrST0	= 724,
    DPPDrmi	= 725,
    DPPDrri	= 726,
    DPPSrmi	= 727,
    DPPSrri	= 728,
    DS_PREFIX	= 729,
    EH_RETURN	= 730,
    EH_RETURN64	= 731,
    EH_SjLj_LongJmp32	= 732,
    EH_SjLj_LongJmp64	= 733,
    EH_SjLj_SetJmp32	= 734,
    EH_SjLj_SetJmp64	= 735,
    EH_SjLj_Setup	= 736,
    ENTER	= 737,
    ES_PREFIX	= 738,
    EXTRACTPSmr	= 739,
    EXTRACTPSrr	= 740,
    EXTRQ	= 741,
    EXTRQI	= 742,
    F2XM1	= 743,
    FARCALL16i	= 744,
    FARCALL16m	= 745,
    FARCALL32i	= 746,
    FARCALL32m	= 747,
    FARCALL64	= 748,
    FARJMP16i	= 749,
    FARJMP16m	= 750,
    FARJMP32i	= 751,
    FARJMP32m	= 752,
    FARJMP64	= 753,
    FBLDm	= 754,
    FBSTPm	= 755,
    FCOM32m	= 756,
    FCOM64m	= 757,
    FCOMP32m	= 758,
    FCOMP64m	= 759,
    FCOMPP	= 760,
    FDECSTP	= 761,
    FEMMS	= 762,
    FFREE	= 763,
    FICOM16m	= 764,
    FICOM32m	= 765,
    FICOMP16m	= 766,
    FICOMP32m	= 767,
    FINCSTP	= 768,
    FLDCW16m	= 769,
    FLDENVm	= 770,
    FLDL2E	= 771,
    FLDL2T	= 772,
    FLDLG2	= 773,
    FLDLN2	= 774,
    FLDPI	= 775,
    FNCLEX	= 776,
    FNINIT	= 777,
    FNOP	= 778,
    FNSTCW16m	= 779,
    FNSTSW16r	= 780,
    FNSTSWm	= 781,
    FP32_TO_INT16_IN_MEM	= 782,
    FP32_TO_INT32_IN_MEM	= 783,
    FP32_TO_INT64_IN_MEM	= 784,
    FP64_TO_INT16_IN_MEM	= 785,
    FP64_TO_INT32_IN_MEM	= 786,
    FP64_TO_INT64_IN_MEM	= 787,
    FP80_TO_INT16_IN_MEM	= 788,
    FP80_TO_INT32_IN_MEM	= 789,
    FP80_TO_INT64_IN_MEM	= 790,
    FPATAN	= 791,
    FPREM	= 792,
    FPREM1	= 793,
    FPTAN	= 794,
    FRNDINT	= 795,
    FRSTORm	= 796,
    FSAVEm	= 797,
    FSCALE	= 798,
    FSINCOS	= 799,
    FSTENVm	= 800,
    FS_PREFIX	= 801,
    FXAM	= 802,
    FXRSTOR	= 803,
    FXRSTOR64	= 804,
    FXSAVE	= 805,
    FXSAVE64	= 806,
    FXTRACT	= 807,
    FYL2X	= 808,
    FYL2XP1	= 809,
    FpPOP_RETVAL	= 810,
    FsANDNPDrm	= 811,
    FsANDNPDrr	= 812,
    FsANDNPSrm	= 813,
    FsANDNPSrr	= 814,
    FsANDPDrm	= 815,
    FsANDPDrr	= 816,
    FsANDPSrm	= 817,
    FsANDPSrr	= 818,
    FsFLD0SD	= 819,
    FsFLD0SS	= 820,
    FsMOVAPDrm	= 821,
    FsMOVAPDrr	= 822,
    FsMOVAPSrm	= 823,
    FsMOVAPSrr	= 824,
    FsORPDrm	= 825,
    FsORPDrr	= 826,
    FsORPSrm	= 827,
    FsORPSrr	= 828,
    FsVMOVAPDrm	= 829,
    FsVMOVAPDrr	= 830,
    FsVMOVAPSrm	= 831,
    FsVMOVAPSrr	= 832,
    FsXORPDrm	= 833,
    FsXORPDrr	= 834,
    FsXORPSrm	= 835,
    FsXORPSrr	= 836,
    GS_PREFIX	= 837,
    HADDPDrm	= 838,
    HADDPDrr	= 839,
    HADDPSrm	= 840,
    HADDPSrr	= 841,
    HLT	= 842,
    HSUBPDrm	= 843,
    HSUBPDrr	= 844,
    HSUBPSrm	= 845,
    HSUBPSrr	= 846,
    IDIV16m	= 847,
    IDIV16r	= 848,
    IDIV32m	= 849,
    IDIV32r	= 850,
    IDIV64m	= 851,
    IDIV64r	= 852,
    IDIV8m	= 853,
    IDIV8r	= 854,
    ILD_F16m	= 855,
    ILD_F32m	= 856,
    ILD_F64m	= 857,
    ILD_Fp16m32	= 858,
    ILD_Fp16m64	= 859,
    ILD_Fp16m80	= 860,
    ILD_Fp32m32	= 861,
    ILD_Fp32m64	= 862,
    ILD_Fp32m80	= 863,
    ILD_Fp64m32	= 864,
    ILD_Fp64m64	= 865,
    ILD_Fp64m80	= 866,
    IMUL16m	= 867,
    IMUL16r	= 868,
    IMUL16rm	= 869,
    IMUL16rmi	= 870,
    IMUL16rmi8	= 871,
    IMUL16rr	= 872,
    IMUL16rri	= 873,
    IMUL16rri8	= 874,
    IMUL32m	= 875,
    IMUL32r	= 876,
    IMUL32rm	= 877,
    IMUL32rmi	= 878,
    IMUL32rmi8	= 879,
    IMUL32rr	= 880,
    IMUL32rri	= 881,
    IMUL32rri8	= 882,
    IMUL64m	= 883,
    IMUL64r	= 884,
    IMUL64rm	= 885,
    IMUL64rmi32	= 886,
    IMUL64rmi8	= 887,
    IMUL64rr	= 888,
    IMUL64rri32	= 889,
    IMUL64rri8	= 890,
    IMUL8m	= 891,
    IMUL8r	= 892,
    IN16	= 893,
    IN16ri	= 894,
    IN16rr	= 895,
    IN32	= 896,
    IN32ri	= 897,
    IN32rr	= 898,
    IN8	= 899,
    IN8ri	= 900,
    IN8rr	= 901,
    INC16m	= 902,
    INC16r	= 903,
    INC32m	= 904,
    INC32r	= 905,
    INC64_16m	= 906,
    INC64_16r	= 907,
    INC64_32m	= 908,
    INC64_32r	= 909,
    INC64m	= 910,
    INC64r	= 911,
    INC8m	= 912,
    INC8r	= 913,
    INSERTPSrm	= 914,
    INSERTPSrr	= 915,
    INSERTQ	= 916,
    INSERTQI	= 917,
    INT	= 918,
    INT3	= 919,
    INTO	= 920,
    INVD	= 921,
    INVEPT32	= 922,
    INVEPT64	= 923,
    INVLPG	= 924,
    INVLPGA32	= 925,
    INVLPGA64	= 926,
    INVPCID32	= 927,
    INVPCID64	= 928,
    INVVPID32	= 929,
    INVVPID64	= 930,
    IRET16	= 931,
    IRET32	= 932,
    IRET64	= 933,
    ISTT_FP16m	= 934,
    ISTT_FP32m	= 935,
    ISTT_FP64m	= 936,
    ISTT_Fp16m32	= 937,
    ISTT_Fp16m64	= 938,
    ISTT_Fp16m80	= 939,
    ISTT_Fp32m32	= 940,
    ISTT_Fp32m64	= 941,
    ISTT_Fp32m80	= 942,
    ISTT_Fp64m32	= 943,
    ISTT_Fp64m64	= 944,
    ISTT_Fp64m80	= 945,
    IST_F16m	= 946,
    IST_F32m	= 947,
    IST_FP16m	= 948,
    IST_FP32m	= 949,
    IST_FP64m	= 950,
    IST_Fp16m32	= 951,
    IST_Fp16m64	= 952,
    IST_Fp16m80	= 953,
    IST_Fp32m32	= 954,
    IST_Fp32m64	= 955,
    IST_Fp32m80	= 956,
    IST_Fp64m32	= 957,
    IST_Fp64m64	= 958,
    IST_Fp64m80	= 959,
    Int_CMPSDrm	= 960,
    Int_CMPSDrr	= 961,
    Int_CMPSSrm	= 962,
    Int_CMPSSrr	= 963,
    Int_COMISDrm	= 964,
    Int_COMISDrr	= 965,
    Int_COMISSrm	= 966,
    Int_COMISSrr	= 967,
    Int_CVTSD2SSrm	= 968,
    Int_CVTSD2SSrr	= 969,
    Int_CVTSI2SD64rm	= 970,
    Int_CVTSI2SD64rr	= 971,
    Int_CVTSI2SDrm	= 972,
    Int_CVTSI2SDrr	= 973,
    Int_CVTSI2SS64rm	= 974,
    Int_CVTSI2SS64rr	= 975,
    Int_CVTSI2SSrm	= 976,
    Int_CVTSI2SSrr	= 977,
    Int_CVTSS2SDrm	= 978,
    Int_CVTSS2SDrr	= 979,
    Int_CVTTSD2SI64rm	= 980,
    Int_CVTTSD2SI64rr	= 981,
    Int_CVTTSD2SIrm	= 982,
    Int_CVTTSD2SIrr	= 983,
    Int_CVTTSS2SI64rm	= 984,
    Int_CVTTSS2SI64rr	= 985,
    Int_CVTTSS2SIrm	= 986,
    Int_CVTTSS2SIrr	= 987,
    Int_MemBarrier	= 988,
    Int_UCOMISDrm	= 989,
    Int_UCOMISDrr	= 990,
    Int_UCOMISSrm	= 991,
    Int_UCOMISSrr	= 992,
    Int_VCMPSDrm	= 993,
    Int_VCMPSDrr	= 994,
    Int_VCMPSSrm	= 995,
    Int_VCMPSSrr	= 996,
    Int_VCOMISDrm	= 997,
    Int_VCOMISDrr	= 998,
    Int_VCOMISSrm	= 999,
    Int_VCOMISSrr	= 1000,
    Int_VCVTSD2SSrm	= 1001,
    Int_VCVTSD2SSrr	= 1002,
    Int_VCVTSI2SD64rm	= 1003,
    Int_VCVTSI2SD64rr	= 1004,
    Int_VCVTSI2SDrm	= 1005,
    Int_VCVTSI2SDrr	= 1006,
    Int_VCVTSI2SS64rm	= 1007,
    Int_VCVTSI2SS64rr	= 1008,
    Int_VCVTSI2SSrm	= 1009,
    Int_VCVTSI2SSrr	= 1010,
    Int_VCVTSS2SDrm	= 1011,
    Int_VCVTSS2SDrr	= 1012,
    Int_VCVTTSD2SI64rm	= 1013,
    Int_VCVTTSD2SI64rr	= 1014,
    Int_VCVTTSD2SIrm	= 1015,
    Int_VCVTTSD2SIrr	= 1016,
    Int_VCVTTSS2SI64rm	= 1017,
    Int_VCVTTSS2SI64rr	= 1018,
    Int_VCVTTSS2SIrm	= 1019,
    Int_VCVTTSS2SIrr	= 1020,
    Int_VUCOMISDrm	= 1021,
    Int_VUCOMISDrr	= 1022,
    Int_VUCOMISSrm	= 1023,
    Int_VUCOMISSrr	= 1024,
    JAE_1	= 1025,
    JAE_4	= 1026,
    JA_1	= 1027,
    JA_4	= 1028,
    JBE_1	= 1029,
    JBE_4	= 1030,
    JB_1	= 1031,
    JB_4	= 1032,
    JCXZ	= 1033,
    JECXZ_32	= 1034,
    JECXZ_64	= 1035,
    JE_1	= 1036,
    JE_4	= 1037,
    JGE_1	= 1038,
    JGE_4	= 1039,
    JG_1	= 1040,
    JG_4	= 1041,
    JLE_1	= 1042,
    JLE_4	= 1043,
    JL_1	= 1044,
    JL_4	= 1045,
    JMP32m	= 1046,
    JMP32r	= 1047,
    JMP64m	= 1048,
    JMP64pcrel32	= 1049,
    JMP64r	= 1050,
    JMP_1	= 1051,
    JMP_4	= 1052,
    JNE_1	= 1053,
    JNE_4	= 1054,
    JNO_1	= 1055,
    JNO_4	= 1056,
    JNP_1	= 1057,
    JNP_4	= 1058,
    JNS_1	= 1059,
    JNS_4	= 1060,
    JO_1	= 1061,
    JO_4	= 1062,
    JP_1	= 1063,
    JP_4	= 1064,
    JRCXZ	= 1065,
    JS_1	= 1066,
    JS_4	= 1067,
    KADDWrr	= 1068,
    KANDNWrr	= 1069,
    KANDWrr	= 1070,
    KMOVWkk	= 1071,
    KMOVWkm	= 1072,
    KMOVWkr	= 1073,
    KMOVWmk	= 1074,
    KMOVWrk	= 1075,
    KNOTWrr	= 1076,
    KORTESTWrr	= 1077,
    KORWrr	= 1078,
    KSET0B	= 1079,
    KSET0W	= 1080,
    KSET1B	= 1081,
    KSET1W	= 1082,
    KSHIFTLWri	= 1083,
    KSHIFTRWri	= 1084,
    KTESTWrr	= 1085,
    KUNPCKBWrr	= 1086,
    KXNORWrr	= 1087,
    KXORWrr	= 1088,
    LAHF	= 1089,
    LAR16rm	= 1090,
    LAR16rr	= 1091,
    LAR32rm	= 1092,
    LAR32rr	= 1093,
    LAR64rm	= 1094,
    LAR64rr	= 1095,
    LCMPXCHG16	= 1096,
    LCMPXCHG16B	= 1097,
    LCMPXCHG32	= 1098,
    LCMPXCHG64	= 1099,
    LCMPXCHG8	= 1100,
    LCMPXCHG8B	= 1101,
    LDDQUrm	= 1102,
    LDMXCSR	= 1103,
    LDS16rm	= 1104,
    LDS32rm	= 1105,
    LD_F0	= 1106,
    LD_F1	= 1107,
    LD_F32m	= 1108,
    LD_F64m	= 1109,
    LD_F80m	= 1110,
    LD_Fp032	= 1111,
    LD_Fp064	= 1112,
    LD_Fp080	= 1113,
    LD_Fp132	= 1114,
    LD_Fp164	= 1115,
    LD_Fp180	= 1116,
    LD_Fp32m	= 1117,
    LD_Fp32m64	= 1118,
    LD_Fp32m80	= 1119,
    LD_Fp64m	= 1120,
    LD_Fp64m80	= 1121,
    LD_Fp80m	= 1122,
    LD_Frr	= 1123,
    LEA16r	= 1124,
    LEA32r	= 1125,
    LEA64_32r	= 1126,
    LEA64r	= 1127,
    LEAVE	= 1128,
    LEAVE64	= 1129,
    LES16rm	= 1130,
    LES32rm	= 1131,
    LFENCE	= 1132,
    LFS16rm	= 1133,
    LFS32rm	= 1134,
    LFS64rm	= 1135,
    LGDT16m	= 1136,
    LGDTm	= 1137,
    LGS16rm	= 1138,
    LGS32rm	= 1139,
    LGS64rm	= 1140,
    LIDT16m	= 1141,
    LIDTm	= 1142,
    LLDT16m	= 1143,
    LLDT16r	= 1144,
    LMSW16m	= 1145,
    LMSW16r	= 1146,
    LOCK_ADD16mi	= 1147,
    LOCK_ADD16mi8	= 1148,
    LOCK_ADD16mr	= 1149,
    LOCK_ADD32mi	= 1150,
    LOCK_ADD32mi8	= 1151,
    LOCK_ADD32mr	= 1152,
    LOCK_ADD64mi32	= 1153,
    LOCK_ADD64mi8	= 1154,
    LOCK_ADD64mr	= 1155,
    LOCK_ADD8mi	= 1156,
    LOCK_ADD8mr	= 1157,
    LOCK_AND16mi	= 1158,
    LOCK_AND16mi8	= 1159,
    LOCK_AND16mr	= 1160,
    LOCK_AND32mi	= 1161,
    LOCK_AND32mi8	= 1162,
    LOCK_AND32mr	= 1163,
    LOCK_AND64mi32	= 1164,
    LOCK_AND64mi8	= 1165,
    LOCK_AND64mr	= 1166,
    LOCK_AND8mi	= 1167,
    LOCK_AND8mr	= 1168,
    LOCK_DEC16m	= 1169,
    LOCK_DEC32m	= 1170,
    LOCK_DEC64m	= 1171,
    LOCK_DEC8m	= 1172,
    LOCK_INC16m	= 1173,
    LOCK_INC32m	= 1174,
    LOCK_INC64m	= 1175,
    LOCK_INC8m	= 1176,
    LOCK_OR16mi	= 1177,
    LOCK_OR16mi8	= 1178,
    LOCK_OR16mr	= 1179,
    LOCK_OR32mi	= 1180,
    LOCK_OR32mi8	= 1181,
    LOCK_OR32mr	= 1182,
    LOCK_OR64mi32	= 1183,
    LOCK_OR64mi8	= 1184,
    LOCK_OR64mr	= 1185,
    LOCK_OR8mi	= 1186,
    LOCK_OR8mr	= 1187,
    LOCK_PREFIX	= 1188,
    LOCK_SUB16mi	= 1189,
    LOCK_SUB16mi8	= 1190,
    LOCK_SUB16mr	= 1191,
    LOCK_SUB32mi	= 1192,
    LOCK_SUB32mi8	= 1193,
    LOCK_SUB32mr	= 1194,
    LOCK_SUB64mi32	= 1195,
    LOCK_SUB64mi8	= 1196,
    LOCK_SUB64mr	= 1197,
    LOCK_SUB8mi	= 1198,
    LOCK_SUB8mr	= 1199,
    LOCK_XOR16mi	= 1200,
    LOCK_XOR16mi8	= 1201,
    LOCK_XOR16mr	= 1202,
    LOCK_XOR32mi	= 1203,
    LOCK_XOR32mi8	= 1204,
    LOCK_XOR32mr	= 1205,
    LOCK_XOR64mi32	= 1206,
    LOCK_XOR64mi8	= 1207,
    LOCK_XOR64mr	= 1208,
    LOCK_XOR8mi	= 1209,
    LOCK_XOR8mr	= 1210,
    LODSB	= 1211,
    LODSD	= 1212,
    LODSQ	= 1213,
    LODSW	= 1214,
    LOOP	= 1215,
    LOOPE	= 1216,
    LOOPNE	= 1217,
    LRETI	= 1218,
    LRETIW	= 1219,
    LRETL	= 1220,
    LRETQ	= 1221,
    LRETW	= 1222,
    LSL16rm	= 1223,
    LSL16rr	= 1224,
    LSL32rm	= 1225,
    LSL32rr	= 1226,
    LSL64rm	= 1227,
    LSL64rr	= 1228,
    LSS16rm	= 1229,
    LSS32rm	= 1230,
    LSS64rm	= 1231,
    LTRm	= 1232,
    LTRr	= 1233,
    LXADD16	= 1234,
    LXADD32	= 1235,
    LXADD64	= 1236,
    LXADD8	= 1237,
    LZCNT16rm	= 1238,
    LZCNT16rr	= 1239,
    LZCNT32rm	= 1240,
    LZCNT32rr	= 1241,
    LZCNT64rm	= 1242,
    LZCNT64rr	= 1243,
    MASKMOVDQU	= 1244,
    MASKMOVDQU64	= 1245,
    MAXCPDrm	= 1246,
    MAXCPDrr	= 1247,
    MAXCPSrm	= 1248,
    MAXCPSrr	= 1249,
    MAXCSDrm	= 1250,
    MAXCSDrr	= 1251,
    MAXCSSrm	= 1252,
    MAXCSSrr	= 1253,
    MAXPDrm	= 1254,
    MAXPDrr	= 1255,
    MAXPSrm	= 1256,
    MAXPSrr	= 1257,
    MAXSDrm	= 1258,
    MAXSDrm_Int	= 1259,
    MAXSDrr	= 1260,
    MAXSDrr_Int	= 1261,
    MAXSSrm	= 1262,
    MAXSSrm_Int	= 1263,
    MAXSSrr	= 1264,
    MAXSSrr_Int	= 1265,
    MFENCE	= 1266,
    MINCPDrm	= 1267,
    MINCPDrr	= 1268,
    MINCPSrm	= 1269,
    MINCPSrr	= 1270,
    MINCSDrm	= 1271,
    MINCSDrr	= 1272,
    MINCSSrm	= 1273,
    MINCSSrr	= 1274,
    MINPDrm	= 1275,
    MINPDrr	= 1276,
    MINPSrm	= 1277,
    MINPSrr	= 1278,
    MINSDrm	= 1279,
    MINSDrm_Int	= 1280,
    MINSDrr	= 1281,
    MINSDrr_Int	= 1282,
    MINSSrm	= 1283,
    MINSSrm_Int	= 1284,
    MINSSrr	= 1285,
    MINSSrr_Int	= 1286,
    MMX_CVTPD2PIirm	= 1287,
    MMX_CVTPD2PIirr	= 1288,
    MMX_CVTPI2PDirm	= 1289,
    MMX_CVTPI2PDirr	= 1290,
    MMX_CVTPI2PSirm	= 1291,
    MMX_CVTPI2PSirr	= 1292,
    MMX_CVTPS2PIirm	= 1293,
    MMX_CVTPS2PIirr	= 1294,
    MMX_CVTTPD2PIirm	= 1295,
    MMX_CVTTPD2PIirr	= 1296,
    MMX_CVTTPS2PIirm	= 1297,
    MMX_CVTTPS2PIirr	= 1298,
    MMX_EMMS	= 1299,
    MMX_MASKMOVQ	= 1300,
    MMX_MASKMOVQ64	= 1301,
    MMX_MOVD64from64rr	= 1302,
    MMX_MOVD64grr	= 1303,
    MMX_MOVD64mr	= 1304,
    MMX_MOVD64rm	= 1305,
    MMX_MOVD64rr	= 1306,
    MMX_MOVD64rrv164	= 1307,
    MMX_MOVD64to64rr	= 1308,
    MMX_MOVDQ2Qrr	= 1309,
    MMX_MOVFR642Qrr	= 1310,
    MMX_MOVNTQmr	= 1311,
    MMX_MOVQ2DQrr	= 1312,
    MMX_MOVQ2FR64rr	= 1313,
    MMX_MOVQ64mr	= 1314,
    MMX_MOVQ64rm	= 1315,
    MMX_MOVQ64rr	= 1316,
    MMX_MOVZDI2PDIrm	= 1317,
    MMX_MOVZDI2PDIrr	= 1318,
    MMX_PABSBrm64	= 1319,
    MMX_PABSBrr64	= 1320,
    MMX_PABSDrm64	= 1321,
    MMX_PABSDrr64	= 1322,
    MMX_PABSWrm64	= 1323,
    MMX_PABSWrr64	= 1324,
    MMX_PACKSSDWirm	= 1325,
    MMX_PACKSSDWirr	= 1326,
    MMX_PACKSSWBirm	= 1327,
    MMX_PACKSSWBirr	= 1328,
    MMX_PACKUSWBirm	= 1329,
    MMX_PACKUSWBirr	= 1330,
    MMX_PADDBirm	= 1331,
    MMX_PADDBirr	= 1332,
    MMX_PADDDirm	= 1333,
    MMX_PADDDirr	= 1334,
    MMX_PADDQirm	= 1335,
    MMX_PADDQirr	= 1336,
    MMX_PADDSBirm	= 1337,
    MMX_PADDSBirr	= 1338,
    MMX_PADDSWirm	= 1339,
    MMX_PADDSWirr	= 1340,
    MMX_PADDUSBirm	= 1341,
    MMX_PADDUSBirr	= 1342,
    MMX_PADDUSWirm	= 1343,
    MMX_PADDUSWirr	= 1344,
    MMX_PADDWirm	= 1345,
    MMX_PADDWirr	= 1346,
    MMX_PALIGNR64irm	= 1347,
    MMX_PALIGNR64irr	= 1348,
    MMX_PANDNirm	= 1349,
    MMX_PANDNirr	= 1350,
    MMX_PANDirm	= 1351,
    MMX_PANDirr	= 1352,
    MMX_PAVGBirm	= 1353,
    MMX_PAVGBirr	= 1354,
    MMX_PAVGWirm	= 1355,
    MMX_PAVGWirr	= 1356,
    MMX_PCMPEQBirm	= 1357,
    MMX_PCMPEQBirr	= 1358,
    MMX_PCMPEQDirm	= 1359,
    MMX_PCMPEQDirr	= 1360,
    MMX_PCMPEQWirm	= 1361,
    MMX_PCMPEQWirr	= 1362,
    MMX_PCMPGTBirm	= 1363,
    MMX_PCMPGTBirr	= 1364,
    MMX_PCMPGTDirm	= 1365,
    MMX_PCMPGTDirr	= 1366,
    MMX_PCMPGTWirm	= 1367,
    MMX_PCMPGTWirr	= 1368,
    MMX_PEXTRWirri	= 1369,
    MMX_PHADDSWrm64	= 1370,
    MMX_PHADDSWrr64	= 1371,
    MMX_PHADDWrm64	= 1372,
    MMX_PHADDWrr64	= 1373,
    MMX_PHADDrm64	= 1374,
    MMX_PHADDrr64	= 1375,
    MMX_PHSUBDrm64	= 1376,
    MMX_PHSUBDrr64	= 1377,
    MMX_PHSUBSWrm64	= 1378,
    MMX_PHSUBSWrr64	= 1379,
    MMX_PHSUBWrm64	= 1380,
    MMX_PHSUBWrr64	= 1381,
    MMX_PINSRWirmi	= 1382,
    MMX_PINSRWirri	= 1383,
    MMX_PMADDUBSWrm64	= 1384,
    MMX_PMADDUBSWrr64	= 1385,
    MMX_PMADDWDirm	= 1386,
    MMX_PMADDWDirr	= 1387,
    MMX_PMAXSWirm	= 1388,
    MMX_PMAXSWirr	= 1389,
    MMX_PMAXUBirm	= 1390,
    MMX_PMAXUBirr	= 1391,
    MMX_PMINSWirm	= 1392,
    MMX_PMINSWirr	= 1393,
    MMX_PMINUBirm	= 1394,
    MMX_PMINUBirr	= 1395,
    MMX_PMOVMSKBrr	= 1396,
    MMX_PMULHRSWrm64	= 1397,
    MMX_PMULHRSWrr64	= 1398,
    MMX_PMULHUWirm	= 1399,
    MMX_PMULHUWirr	= 1400,
    MMX_PMULHWirm	= 1401,
    MMX_PMULHWirr	= 1402,
    MMX_PMULLWirm	= 1403,
    MMX_PMULLWirr	= 1404,
    MMX_PMULUDQirm	= 1405,
    MMX_PMULUDQirr	= 1406,
    MMX_PORirm	= 1407,
    MMX_PORirr	= 1408,
    MMX_PSADBWirm	= 1409,
    MMX_PSADBWirr	= 1410,
    MMX_PSHUFBrm64	= 1411,
    MMX_PSHUFBrr64	= 1412,
    MMX_PSHUFWmi	= 1413,
    MMX_PSHUFWri	= 1414,
    MMX_PSIGNBrm64	= 1415,
    MMX_PSIGNBrr64	= 1416,
    MMX_PSIGNDrm64	= 1417,
    MMX_PSIGNDrr64	= 1418,
    MMX_PSIGNWrm64	= 1419,
    MMX_PSIGNWrr64	= 1420,
    MMX_PSLLDri	= 1421,
    MMX_PSLLDrm	= 1422,
    MMX_PSLLDrr	= 1423,
    MMX_PSLLQri	= 1424,
    MMX_PSLLQrm	= 1425,
    MMX_PSLLQrr	= 1426,
    MMX_PSLLWri	= 1427,
    MMX_PSLLWrm	= 1428,
    MMX_PSLLWrr	= 1429,
    MMX_PSRADri	= 1430,
    MMX_PSRADrm	= 1431,
    MMX_PSRADrr	= 1432,
    MMX_PSRAWri	= 1433,
    MMX_PSRAWrm	= 1434,
    MMX_PSRAWrr	= 1435,
    MMX_PSRLDri	= 1436,
    MMX_PSRLDrm	= 1437,
    MMX_PSRLDrr	= 1438,
    MMX_PSRLQri	= 1439,
    MMX_PSRLQrm	= 1440,
    MMX_PSRLQrr	= 1441,
    MMX_PSRLWri	= 1442,
    MMX_PSRLWrm	= 1443,
    MMX_PSRLWrr	= 1444,
    MMX_PSUBBirm	= 1445,
    MMX_PSUBBirr	= 1446,
    MMX_PSUBDirm	= 1447,
    MMX_PSUBDirr	= 1448,
    MMX_PSUBQirm	= 1449,
    MMX_PSUBQirr	= 1450,
    MMX_PSUBSBirm	= 1451,
    MMX_PSUBSBirr	= 1452,
    MMX_PSUBSWirm	= 1453,
    MMX_PSUBSWirr	= 1454,
    MMX_PSUBUSBirm	= 1455,
    MMX_PSUBUSBirr	= 1456,
    MMX_PSUBUSWirm	= 1457,
    MMX_PSUBUSWirr	= 1458,
    MMX_PSUBWirm	= 1459,
    MMX_PSUBWirr	= 1460,
    MMX_PUNPCKHBWirm	= 1461,
    MMX_PUNPCKHBWirr	= 1462,
    MMX_PUNPCKHDQirm	= 1463,
    MMX_PUNPCKHDQirr	= 1464,
    MMX_PUNPCKHWDirm	= 1465,
    MMX_PUNPCKHWDirr	= 1466,
    MMX_PUNPCKLBWirm	= 1467,
    MMX_PUNPCKLBWirr	= 1468,
    MMX_PUNPCKLDQirm	= 1469,
    MMX_PUNPCKLDQirr	= 1470,
    MMX_PUNPCKLWDirm	= 1471,
    MMX_PUNPCKLWDirr	= 1472,
    MMX_PXORirm	= 1473,
    MMX_PXORirr	= 1474,
    MONITOR	= 1475,
    MONITORrrr	= 1476,
    MONTMUL	= 1477,
    MORESTACK_RET	= 1478,
    MORESTACK_RET_RESTORE_R10	= 1479,
    MOV16ao16	= 1480,
    MOV16mi	= 1481,
    MOV16mr	= 1482,
    MOV16ms	= 1483,
    MOV16o16a	= 1484,
    MOV16ri	= 1485,
    MOV16rm	= 1486,
    MOV16rr	= 1487,
    MOV16rr_REV	= 1488,
    MOV16rs	= 1489,
    MOV16sm	= 1490,
    MOV16sr	= 1491,
    MOV32ao32	= 1492,
    MOV32cr	= 1493,
    MOV32dr	= 1494,
    MOV32mi	= 1495,
    MOV32mr	= 1496,
    MOV32ms	= 1497,
    MOV32o32a	= 1498,
    MOV32r0	= 1499,
    MOV32rc	= 1500,
    MOV32rd	= 1501,
    MOV32ri	= 1502,
    MOV32ri64	= 1503,
    MOV32rm	= 1504,
    MOV32rr	= 1505,
    MOV32rr_REV	= 1506,
    MOV32rs	= 1507,
    MOV32sm	= 1508,
    MOV32sr	= 1509,
    MOV64ao16	= 1510,
    MOV64ao32	= 1511,
    MOV64ao64	= 1512,
    MOV64ao8	= 1513,
    MOV64cr	= 1514,
    MOV64dr	= 1515,
    MOV64mi32	= 1516,
    MOV64mr	= 1517,
    MOV64ms	= 1518,
    MOV64o16a	= 1519,
    MOV64o32a	= 1520,
    MOV64o64a	= 1521,
    MOV64o8a	= 1522,
    MOV64rc	= 1523,
    MOV64rd	= 1524,
    MOV64ri	= 1525,
    MOV64ri32	= 1526,
    MOV64rm	= 1527,
    MOV64rr	= 1528,
    MOV64rr_REV	= 1529,
    MOV64rs	= 1530,
    MOV64sm	= 1531,
    MOV64sr	= 1532,
    MOV64toPQIrr	= 1533,
    MOV64toSDrm	= 1534,
    MOV64toSDrr	= 1535,
    MOV8ao8	= 1536,
    MOV8mi	= 1537,
    MOV8mr	= 1538,
    MOV8mr_NOREX	= 1539,
    MOV8o8a	= 1540,
    MOV8ri	= 1541,
    MOV8rm	= 1542,
    MOV8rm_NOREX	= 1543,
    MOV8rr	= 1544,
    MOV8rr_NOREX	= 1545,
    MOV8rr_REV	= 1546,
    MOVAPDmr	= 1547,
    MOVAPDrm	= 1548,
    MOVAPDrr	= 1549,
    MOVAPDrr_REV	= 1550,
    MOVAPSmr	= 1551,
    MOVAPSrm	= 1552,
    MOVAPSrr	= 1553,
    MOVAPSrr_REV	= 1554,
    MOVBE16mr	= 1555,
    MOVBE16rm	= 1556,
    MOVBE32mr	= 1557,
    MOVBE32rm	= 1558,
    MOVBE64mr	= 1559,
    MOVBE64rm	= 1560,
    MOVDDUPrm	= 1561,
    MOVDDUPrr	= 1562,
    MOVDI2PDIrm	= 1563,
    MOVDI2PDIrr	= 1564,
    MOVDI2SSrm	= 1565,
    MOVDI2SSrr	= 1566,
    MOVDQAmr	= 1567,
    MOVDQArm	= 1568,
    MOVDQArr	= 1569,
    MOVDQArr_REV	= 1570,
    MOVDQUmr	= 1571,
    MOVDQUrm	= 1572,
    MOVDQUrr	= 1573,
    MOVDQUrr_REV	= 1574,
    MOVHLPSrr	= 1575,
    MOVHPDmr	= 1576,
    MOVHPDrm	= 1577,
    MOVHPSmr	= 1578,
    MOVHPSrm	= 1579,
    MOVLHPSrr	= 1580,
    MOVLPDmr	= 1581,
    MOVLPDrm	= 1582,
    MOVLPSmr	= 1583,
    MOVLPSrm	= 1584,
    MOVLQ128mr	= 1585,
    MOVMSKPDrr32	= 1586,
    MOVMSKPDrr64	= 1587,
    MOVMSKPSrr32	= 1588,
    MOVMSKPSrr64	= 1589,
    MOVNTDQArm	= 1590,
    MOVNTDQmr	= 1591,
    MOVNTI_64mr	= 1592,
    MOVNTImr	= 1593,
    MOVNTPDmr	= 1594,
    MOVNTPSmr	= 1595,
    MOVNTSD	= 1596,
    MOVNTSS	= 1597,
    MOVPC32r	= 1598,
    MOVPDI2DImr	= 1599,
    MOVPDI2DIrr	= 1600,
    MOVPQI2QImr	= 1601,
    MOVPQIto64rr	= 1602,
    MOVQI2PQIrm	= 1603,
    MOVQxrxr	= 1604,
    MOVSB	= 1605,
    MOVSD	= 1606,
    MOVSDmr	= 1607,
    MOVSDrm	= 1608,
    MOVSDrr	= 1609,
    MOVSDrr_REV	= 1610,
    MOVSDto64mr	= 1611,
    MOVSDto64rr	= 1612,
    MOVSHDUPrm	= 1613,
    MOVSHDUPrr	= 1614,
    MOVSLDUPrm	= 1615,
    MOVSLDUPrr	= 1616,
    MOVSQ	= 1617,
    MOVSS2DImr	= 1618,
    MOVSS2DIrr	= 1619,
    MOVSSmr	= 1620,
    MOVSSrm	= 1621,
    MOVSSrr	= 1622,
    MOVSSrr_REV	= 1623,
    MOVSW	= 1624,
    MOVSX16rm8	= 1625,
    MOVSX16rr8	= 1626,
    MOVSX32rm16	= 1627,
    MOVSX32rm8	= 1628,
    MOVSX32rr16	= 1629,
    MOVSX32rr8	= 1630,
    MOVSX64rm16	= 1631,
    MOVSX64rm32	= 1632,
    MOVSX64rm8	= 1633,
    MOVSX64rr16	= 1634,
    MOVSX64rr32	= 1635,
    MOVSX64rr8	= 1636,
    MOVUPDmr	= 1637,
    MOVUPDrm	= 1638,
    MOVUPDrr	= 1639,
    MOVUPDrr_REV	= 1640,
    MOVUPSmr	= 1641,
    MOVUPSrm	= 1642,
    MOVUPSrr	= 1643,
    MOVUPSrr_REV	= 1644,
    MOVZDI2PDIrm	= 1645,
    MOVZDI2PDIrr	= 1646,
    MOVZPQILo2PQIrm	= 1647,
    MOVZPQILo2PQIrr	= 1648,
    MOVZQI2PQIrm	= 1649,
    MOVZQI2PQIrr	= 1650,
    MOVZX16rm8	= 1651,
    MOVZX16rr8	= 1652,
    MOVZX32_NOREXrm8	= 1653,
    MOVZX32_NOREXrr8	= 1654,
    MOVZX32rm16	= 1655,
    MOVZX32rm8	= 1656,
    MOVZX32rr16	= 1657,
    MOVZX32rr8	= 1658,
    MOVZX64rm16_Q	= 1659,
    MOVZX64rm8_Q	= 1660,
    MOVZX64rr16_Q	= 1661,
    MOVZX64rr8_Q	= 1662,
    MPSADBWrmi	= 1663,
    MPSADBWrri	= 1664,
    MUL16m	= 1665,
    MUL16r	= 1666,
    MUL32m	= 1667,
    MUL32r	= 1668,
    MUL64m	= 1669,
    MUL64r	= 1670,
    MUL8m	= 1671,
    MUL8r	= 1672,
    MULPDrm	= 1673,
    MULPDrr	= 1674,
    MULPSrm	= 1675,
    MULPSrr	= 1676,
    MULSDrm	= 1677,
    MULSDrm_Int	= 1678,
    MULSDrr	= 1679,
    MULSDrr_Int	= 1680,
    MULSSrm	= 1681,
    MULSSrm_Int	= 1682,
    MULSSrr	= 1683,
    MULSSrr_Int	= 1684,
    MULX32rm	= 1685,
    MULX32rr	= 1686,
    MULX64rm	= 1687,
    MULX64rr	= 1688,
    MUL_F32m	= 1689,
    MUL_F64m	= 1690,
    MUL_FI16m	= 1691,
    MUL_FI32m	= 1692,
    MUL_FPrST0	= 1693,
    MUL_FST0r	= 1694,
    MUL_Fp32	= 1695,
    MUL_Fp32m	= 1696,
    MUL_Fp64	= 1697,
    MUL_Fp64m	= 1698,
    MUL_Fp64m32	= 1699,
    MUL_Fp80	= 1700,
    MUL_Fp80m32	= 1701,
    MUL_Fp80m64	= 1702,
    MUL_FpI16m32	= 1703,
    MUL_FpI16m64	= 1704,
    MUL_FpI16m80	= 1705,
    MUL_FpI32m32	= 1706,
    MUL_FpI32m64	= 1707,
    MUL_FpI32m80	= 1708,
    MUL_FrST0	= 1709,
    MWAITrr	= 1710,
    NEG16m	= 1711,
    NEG16r	= 1712,
    NEG32m	= 1713,
    NEG32r	= 1714,
    NEG64m	= 1715,
    NEG64r	= 1716,
    NEG8m	= 1717,
    NEG8r	= 1718,
    NOOP	= 1719,
    NOOPL	= 1720,
    NOOPW	= 1721,
    NOT16m	= 1722,
    NOT16r	= 1723,
    NOT32m	= 1724,
    NOT32r	= 1725,
    NOT64m	= 1726,
    NOT64r	= 1727,
    NOT8m	= 1728,
    NOT8r	= 1729,
    OR16i16	= 1730,
    OR16mi	= 1731,
    OR16mi8	= 1732,
    OR16mr	= 1733,
    OR16ri	= 1734,
    OR16ri8	= 1735,
    OR16rm	= 1736,
    OR16rr	= 1737,
    OR16rr_REV	= 1738,
    OR32i32	= 1739,
    OR32mi	= 1740,
    OR32mi8	= 1741,
    OR32mr	= 1742,
    OR32mrLocked	= 1743,
    OR32ri	= 1744,
    OR32ri8	= 1745,
    OR32rm	= 1746,
    OR32rr	= 1747,
    OR32rr_REV	= 1748,
    OR64i32	= 1749,
    OR64mi32	= 1750,
    OR64mi8	= 1751,
    OR64mr	= 1752,
    OR64ri32	= 1753,
    OR64ri8	= 1754,
    OR64rm	= 1755,
    OR64rr	= 1756,
    OR64rr_REV	= 1757,
    OR8i8	= 1758,
    OR8mi	= 1759,
    OR8mr	= 1760,
    OR8ri	= 1761,
    OR8rm	= 1762,
    OR8rr	= 1763,
    OR8rr_REV	= 1764,
    ORPDrm	= 1765,
    ORPDrr	= 1766,
    ORPSrm	= 1767,
    ORPSrr	= 1768,
    OUT16ir	= 1769,
    OUT16rr	= 1770,
    OUT32ir	= 1771,
    OUT32rr	= 1772,
    OUT8ir	= 1773,
    OUT8rr	= 1774,
    OUTSB	= 1775,
    OUTSD	= 1776,
    OUTSW	= 1777,
    PABSBrm128	= 1778,
    PABSBrr128	= 1779,
    PABSDrm128	= 1780,
    PABSDrr128	= 1781,
    PABSWrm128	= 1782,
    PABSWrr128	= 1783,
    PACKSSDWrm	= 1784,
    PACKSSDWrr	= 1785,
    PACKSSWBrm	= 1786,
    PACKSSWBrr	= 1787,
    PACKUSDWrm	= 1788,
    PACKUSDWrr	= 1789,
    PACKUSWBrm	= 1790,
    PACKUSWBrr	= 1791,
    PADDBrm	= 1792,
    PADDBrr	= 1793,
    PADDDrm	= 1794,
    PADDDrr	= 1795,
    PADDQrm	= 1796,
    PADDQrr	= 1797,
    PADDSBrm	= 1798,
    PADDSBrr	= 1799,
    PADDSWrm	= 1800,
    PADDSWrr	= 1801,
    PADDUSBrm	= 1802,
    PADDUSBrr	= 1803,
    PADDUSWrm	= 1804,
    PADDUSWrr	= 1805,
    PADDWrm	= 1806,
    PADDWrr	= 1807,
    PALIGNR128rm	= 1808,
    PALIGNR128rr	= 1809,
    PANDNrm	= 1810,
    PANDNrr	= 1811,
    PANDrm	= 1812,
    PANDrr	= 1813,
    PAUSE	= 1814,
    PAVGBrm	= 1815,
    PAVGBrr	= 1816,
    PAVGUSBrm	= 1817,
    PAVGUSBrr	= 1818,
    PAVGWrm	= 1819,
    PAVGWrr	= 1820,
    PBLENDVBrm0	= 1821,
    PBLENDVBrr0	= 1822,
    PBLENDWrmi	= 1823,
    PBLENDWrri	= 1824,
    PCLMULQDQrm	= 1825,
    PCLMULQDQrr	= 1826,
    PCMPEQBrm	= 1827,
    PCMPEQBrr	= 1828,
    PCMPEQDrm	= 1829,
    PCMPEQDrr	= 1830,
    PCMPEQQrm	= 1831,
    PCMPEQQrr	= 1832,
    PCMPEQWrm	= 1833,
    PCMPEQWrr	= 1834,
    PCMPESTRIMEM	= 1835,
    PCMPESTRIREG	= 1836,
    PCMPESTRIrm	= 1837,
    PCMPESTRIrr	= 1838,
    PCMPESTRM128MEM	= 1839,
    PCMPESTRM128REG	= 1840,
    PCMPESTRM128rm	= 1841,
    PCMPESTRM128rr	= 1842,
    PCMPGTBrm	= 1843,
    PCMPGTBrr	= 1844,
    PCMPGTDrm	= 1845,
    PCMPGTDrr	= 1846,
    PCMPGTQrm	= 1847,
    PCMPGTQrr	= 1848,
    PCMPGTWrm	= 1849,
    PCMPGTWrr	= 1850,
    PCMPISTRIMEM	= 1851,
    PCMPISTRIREG	= 1852,
    PCMPISTRIrm	= 1853,
    PCMPISTRIrr	= 1854,
    PCMPISTRM128MEM	= 1855,
    PCMPISTRM128REG	= 1856,
    PCMPISTRM128rm	= 1857,
    PCMPISTRM128rr	= 1858,
    PDEP32rm	= 1859,
    PDEP32rr	= 1860,
    PDEP64rm	= 1861,
    PDEP64rr	= 1862,
    PEXT32rm	= 1863,
    PEXT32rr	= 1864,
    PEXT64rm	= 1865,
    PEXT64rr	= 1866,
    PEXTRBmr	= 1867,
    PEXTRBrr	= 1868,
    PEXTRDmr	= 1869,
    PEXTRDrr	= 1870,
    PEXTRQmr	= 1871,
    PEXTRQrr	= 1872,
    PEXTRWmr	= 1873,
    PEXTRWri	= 1874,
    PF2IDrm	= 1875,
    PF2IDrr	= 1876,
    PF2IWrm	= 1877,
    PF2IWrr	= 1878,
    PFACCrm	= 1879,
    PFACCrr	= 1880,
    PFADDrm	= 1881,
    PFADDrr	= 1882,
    PFCMPEQrm	= 1883,
    PFCMPEQrr	= 1884,
    PFCMPGErm	= 1885,
    PFCMPGErr	= 1886,
    PFCMPGTrm	= 1887,
    PFCMPGTrr	= 1888,
    PFMAXrm	= 1889,
    PFMAXrr	= 1890,
    PFMINrm	= 1891,
    PFMINrr	= 1892,
    PFMULrm	= 1893,
    PFMULrr	= 1894,
    PFNACCrm	= 1895,
    PFNACCrr	= 1896,
    PFPNACCrm	= 1897,
    PFPNACCrr	= 1898,
    PFRCPIT1rm	= 1899,
    PFRCPIT1rr	= 1900,
    PFRCPIT2rm	= 1901,
    PFRCPIT2rr	= 1902,
    PFRCPrm	= 1903,
    PFRCPrr	= 1904,
    PFRSQIT1rm	= 1905,
    PFRSQIT1rr	= 1906,
    PFRSQRTrm	= 1907,
    PFRSQRTrr	= 1908,
    PFSUBRrm	= 1909,
    PFSUBRrr	= 1910,
    PFSUBrm	= 1911,
    PFSUBrr	= 1912,
    PHADDDrm	= 1913,
    PHADDDrr	= 1914,
    PHADDSWrm128	= 1915,
    PHADDSWrr128	= 1916,
    PHADDWrm	= 1917,
    PHADDWrr	= 1918,
    PHMINPOSUWrm128	= 1919,
    PHMINPOSUWrr128	= 1920,
    PHSUBDrm	= 1921,
    PHSUBDrr	= 1922,
    PHSUBSWrm128	= 1923,
    PHSUBSWrr128	= 1924,
    PHSUBWrm	= 1925,
    PHSUBWrr	= 1926,
    PI2FDrm	= 1927,
    PI2FDrr	= 1928,
    PI2FWrm	= 1929,
    PI2FWrr	= 1930,
    PINSRBrm	= 1931,
    PINSRBrr	= 1932,
    PINSRDrm	= 1933,
    PINSRDrr	= 1934,
    PINSRQrm	= 1935,
    PINSRQrr	= 1936,
    PINSRWrmi	= 1937,
    PINSRWrri	= 1938,
    PMADDUBSWrm128	= 1939,
    PMADDUBSWrr128	= 1940,
    PMADDWDrm	= 1941,
    PMADDWDrr	= 1942,
    PMAXSBrm	= 1943,
    PMAXSBrr	= 1944,
    PMAXSDrm	= 1945,
    PMAXSDrr	= 1946,
    PMAXSWrm	= 1947,
    PMAXSWrr	= 1948,
    PMAXUBrm	= 1949,
    PMAXUBrr	= 1950,
    PMAXUDrm	= 1951,
    PMAXUDrr	= 1952,
    PMAXUWrm	= 1953,
    PMAXUWrr	= 1954,
    PMINSBrm	= 1955,
    PMINSBrr	= 1956,
    PMINSDrm	= 1957,
    PMINSDrr	= 1958,
    PMINSWrm	= 1959,
    PMINSWrr	= 1960,
    PMINUBrm	= 1961,
    PMINUBrr	= 1962,
    PMINUDrm	= 1963,
    PMINUDrr	= 1964,
    PMINUWrm	= 1965,
    PMINUWrr	= 1966,
    PMOVMSKBrr	= 1967,
    PMOVSXBDrm	= 1968,
    PMOVSXBDrr	= 1969,
    PMOVSXBQrm	= 1970,
    PMOVSXBQrr	= 1971,
    PMOVSXBWrm	= 1972,
    PMOVSXBWrr	= 1973,
    PMOVSXDQrm	= 1974,
    PMOVSXDQrr	= 1975,
    PMOVSXWDrm	= 1976,
    PMOVSXWDrr	= 1977,
    PMOVSXWQrm	= 1978,
    PMOVSXWQrr	= 1979,
    PMOVZXBDrm	= 1980,
    PMOVZXBDrr	= 1981,
    PMOVZXBQrm	= 1982,
    PMOVZXBQrr	= 1983,
    PMOVZXBWrm	= 1984,
    PMOVZXBWrr	= 1985,
    PMOVZXDQrm	= 1986,
    PMOVZXDQrr	= 1987,
    PMOVZXWDrm	= 1988,
    PMOVZXWDrr	= 1989,
    PMOVZXWQrm	= 1990,
    PMOVZXWQrr	= 1991,
    PMULDQrm	= 1992,
    PMULDQrr	= 1993,
    PMULHRSWrm128	= 1994,
    PMULHRSWrr128	= 1995,
    PMULHRWrm	= 1996,
    PMULHRWrr	= 1997,
    PMULHUWrm	= 1998,
    PMULHUWrr	= 1999,
    PMULHWrm	= 2000,
    PMULHWrr	= 2001,
    PMULLDrm	= 2002,
    PMULLDrr	= 2003,
    PMULLWrm	= 2004,
    PMULLWrr	= 2005,
    PMULUDQrm	= 2006,
    PMULUDQrr	= 2007,
    POP16r	= 2008,
    POP16rmm	= 2009,
    POP16rmr	= 2010,
    POP32r	= 2011,
    POP32rmm	= 2012,
    POP32rmr	= 2013,
    POP64r	= 2014,
    POP64rmm	= 2015,
    POP64rmr	= 2016,
    POPA32	= 2017,
    POPCNT16rm	= 2018,
    POPCNT16rr	= 2019,
    POPCNT32rm	= 2020,
    POPCNT32rr	= 2021,
    POPCNT64rm	= 2022,
    POPCNT64rr	= 2023,
    POPDS16	= 2024,
    POPDS32	= 2025,
    POPES16	= 2026,
    POPES32	= 2027,
    POPF16	= 2028,
    POPF32	= 2029,
    POPF64	= 2030,
    POPFS16	= 2031,
    POPFS32	= 2032,
    POPFS64	= 2033,
    POPGS16	= 2034,
    POPGS32	= 2035,
    POPGS64	= 2036,
    POPSS16	= 2037,
    POPSS32	= 2038,
    PORrm	= 2039,
    PORrr	= 2040,
    PREFETCH	= 2041,
    PREFETCHNTA	= 2042,
    PREFETCHT0	= 2043,
    PREFETCHT1	= 2044,
    PREFETCHT2	= 2045,
    PREFETCHW	= 2046,
    PSADBWrm	= 2047,
    PSADBWrr	= 2048,
    PSHUFBrm	= 2049,
    PSHUFBrr	= 2050,
    PSHUFDmi	= 2051,
    PSHUFDri	= 2052,
    PSHUFHWmi	= 2053,
    PSHUFHWri	= 2054,
    PSHUFLWmi	= 2055,
    PSHUFLWri	= 2056,
    PSIGNBrm	= 2057,
    PSIGNBrr	= 2058,
    PSIGNDrm	= 2059,
    PSIGNDrr	= 2060,
    PSIGNWrm	= 2061,
    PSIGNWrr	= 2062,
    PSLLDQri	= 2063,
    PSLLDri	= 2064,
    PSLLDrm	= 2065,
    PSLLDrr	= 2066,
    PSLLQri	= 2067,
    PSLLQrm	= 2068,
    PSLLQrr	= 2069,
    PSLLWri	= 2070,
    PSLLWrm	= 2071,
    PSLLWrr	= 2072,
    PSRADri	= 2073,
    PSRADrm	= 2074,
    PSRADrr	= 2075,
    PSRAWri	= 2076,
    PSRAWrm	= 2077,
    PSRAWrr	= 2078,
    PSRLDQri	= 2079,
    PSRLDri	= 2080,
    PSRLDrm	= 2081,
    PSRLDrr	= 2082,
    PSRLQri	= 2083,
    PSRLQrm	= 2084,
    PSRLQrr	= 2085,
    PSRLWri	= 2086,
    PSRLWrm	= 2087,
    PSRLWrr	= 2088,
    PSUBBrm	= 2089,
    PSUBBrr	= 2090,
    PSUBDrm	= 2091,
    PSUBDrr	= 2092,
    PSUBQrm	= 2093,
    PSUBQrr	= 2094,
    PSUBSBrm	= 2095,
    PSUBSBrr	= 2096,
    PSUBSWrm	= 2097,
    PSUBSWrr	= 2098,
    PSUBUSBrm	= 2099,
    PSUBUSBrr	= 2100,
    PSUBUSWrm	= 2101,
    PSUBUSWrr	= 2102,
    PSUBWrm	= 2103,
    PSUBWrr	= 2104,
    PSWAPDrm	= 2105,
    PSWAPDrr	= 2106,
    PTESTrm	= 2107,
    PTESTrr	= 2108,
    PUNPCKHBWrm	= 2109,
    PUNPCKHBWrr	= 2110,
    PUNPCKHDQrm	= 2111,
    PUNPCKHDQrr	= 2112,
    PUNPCKHQDQrm	= 2113,
    PUNPCKHQDQrr	= 2114,
    PUNPCKHWDrm	= 2115,
    PUNPCKHWDrr	= 2116,
    PUNPCKLBWrm	= 2117,
    PUNPCKLBWrr	= 2118,
    PUNPCKLDQrm	= 2119,
    PUNPCKLDQrr	= 2120,
    PUNPCKLQDQrm	= 2121,
    PUNPCKLQDQrr	= 2122,
    PUNPCKLWDrm	= 2123,
    PUNPCKLWDrr	= 2124,
    PUSH16r	= 2125,
    PUSH16rmm	= 2126,
    PUSH16rmr	= 2127,
    PUSH32r	= 2128,
    PUSH32rmm	= 2129,
    PUSH32rmr	= 2130,
    PUSH64i16	= 2131,
    PUSH64i32	= 2132,
    PUSH64i8	= 2133,
    PUSH64r	= 2134,
    PUSH64rmm	= 2135,
    PUSH64rmr	= 2136,
    PUSHA32	= 2137,
    PUSHCS16	= 2138,
    PUSHCS32	= 2139,
    PUSHDS16	= 2140,
    PUSHDS32	= 2141,
    PUSHES16	= 2142,
    PUSHES32	= 2143,
    PUSHF16	= 2144,
    PUSHF32	= 2145,
    PUSHF64	= 2146,
    PUSHFS16	= 2147,
    PUSHFS32	= 2148,
    PUSHFS64	= 2149,
    PUSHGS16	= 2150,
    PUSHGS32	= 2151,
    PUSHGS64	= 2152,
    PUSHSS16	= 2153,
    PUSHSS32	= 2154,
    PUSHi16	= 2155,
    PUSHi32	= 2156,
    PUSHi8	= 2157,
    PXORrm	= 2158,
    PXORrr	= 2159,
    RCL16m1	= 2160,
    RCL16mCL	= 2161,
    RCL16mi	= 2162,
    RCL16r1	= 2163,
    RCL16rCL	= 2164,
    RCL16ri	= 2165,
    RCL32m1	= 2166,
    RCL32mCL	= 2167,
    RCL32mi	= 2168,
    RCL32r1	= 2169,
    RCL32rCL	= 2170,
    RCL32ri	= 2171,
    RCL64m1	= 2172,
    RCL64mCL	= 2173,
    RCL64mi	= 2174,
    RCL64r1	= 2175,
    RCL64rCL	= 2176,
    RCL64ri	= 2177,
    RCL8m1	= 2178,
    RCL8mCL	= 2179,
    RCL8mi	= 2180,
    RCL8r1	= 2181,
    RCL8rCL	= 2182,
    RCL8ri	= 2183,
    RCPPSm	= 2184,
    RCPPSm_Int	= 2185,
    RCPPSr	= 2186,
    RCPPSr_Int	= 2187,
    RCPSSm	= 2188,
    RCPSSm_Int	= 2189,
    RCPSSr	= 2190,
    RCPSSr_Int	= 2191,
    RCR16m1	= 2192,
    RCR16mCL	= 2193,
    RCR16mi	= 2194,
    RCR16r1	= 2195,
    RCR16rCL	= 2196,
    RCR16ri	= 2197,
    RCR32m1	= 2198,
    RCR32mCL	= 2199,
    RCR32mi	= 2200,
    RCR32r1	= 2201,
    RCR32rCL	= 2202,
    RCR32ri	= 2203,
    RCR64m1	= 2204,
    RCR64mCL	= 2205,
    RCR64mi	= 2206,
    RCR64r1	= 2207,
    RCR64rCL	= 2208,
    RCR64ri	= 2209,
    RCR8m1	= 2210,
    RCR8mCL	= 2211,
    RCR8mi	= 2212,
    RCR8r1	= 2213,
    RCR8rCL	= 2214,
    RCR8ri	= 2215,
    RDFSBASE	= 2216,
    RDFSBASE64	= 2217,
    RDGSBASE	= 2218,
    RDGSBASE64	= 2219,
    RDMSR	= 2220,
    RDPMC	= 2221,
    RDRAND16r	= 2222,
    RDRAND32r	= 2223,
    RDRAND64r	= 2224,
    RDSEED16r	= 2225,
    RDSEED32r	= 2226,
    RDSEED64r	= 2227,
    RDTSC	= 2228,
    RDTSCP	= 2229,
    RELEASE_MOV16mr	= 2230,
    RELEASE_MOV32mr	= 2231,
    RELEASE_MOV64mr	= 2232,
    RELEASE_MOV8mr	= 2233,
    REPNE_PREFIX	= 2234,
    REP_MOVSB_32	= 2235,
    REP_MOVSB_64	= 2236,
    REP_MOVSD_32	= 2237,
    REP_MOVSD_64	= 2238,
    REP_MOVSQ_64	= 2239,
    REP_MOVSW_32	= 2240,
    REP_MOVSW_64	= 2241,
    REP_PREFIX	= 2242,
    REP_STOSB_32	= 2243,
    REP_STOSB_64	= 2244,
    REP_STOSD_32	= 2245,
    REP_STOSD_64	= 2246,
    REP_STOSQ_64	= 2247,
    REP_STOSW_32	= 2248,
    REP_STOSW_64	= 2249,
    RET	= 2250,
    RETI	= 2251,
    RETIW	= 2252,
    RETW	= 2253,
    REX64_PREFIX	= 2254,
    ROL16m1	= 2255,
    ROL16mCL	= 2256,
    ROL16mi	= 2257,
    ROL16r1	= 2258,
    ROL16rCL	= 2259,
    ROL16ri	= 2260,
    ROL32m1	= 2261,
    ROL32mCL	= 2262,
    ROL32mi	= 2263,
    ROL32r1	= 2264,
    ROL32rCL	= 2265,
    ROL32ri	= 2266,
    ROL64m1	= 2267,
    ROL64mCL	= 2268,
    ROL64mi	= 2269,
    ROL64r1	= 2270,
    ROL64rCL	= 2271,
    ROL64ri	= 2272,
    ROL8m1	= 2273,
    ROL8mCL	= 2274,
    ROL8mi	= 2275,
    ROL8r1	= 2276,
    ROL8rCL	= 2277,
    ROL8ri	= 2278,
    ROR16m1	= 2279,
    ROR16mCL	= 2280,
    ROR16mi	= 2281,
    ROR16r1	= 2282,
    ROR16rCL	= 2283,
    ROR16ri	= 2284,
    ROR32m1	= 2285,
    ROR32mCL	= 2286,
    ROR32mi	= 2287,
    ROR32r1	= 2288,
    ROR32rCL	= 2289,
    ROR32ri	= 2290,
    ROR64m1	= 2291,
    ROR64mCL	= 2292,
    ROR64mi	= 2293,
    ROR64r1	= 2294,
    ROR64rCL	= 2295,
    ROR64ri	= 2296,
    ROR8m1	= 2297,
    ROR8mCL	= 2298,
    ROR8mi	= 2299,
    ROR8r1	= 2300,
    ROR8rCL	= 2301,
    ROR8ri	= 2302,
    RORX32mi	= 2303,
    RORX32ri	= 2304,
    RORX64mi	= 2305,
    RORX64ri	= 2306,
    ROUNDPDm	= 2307,
    ROUNDPDr	= 2308,
    ROUNDPSm	= 2309,
    ROUNDPSr	= 2310,
    ROUNDSDm	= 2311,
    ROUNDSDr	= 2312,
    ROUNDSDr_Int	= 2313,
    ROUNDSSm	= 2314,
    ROUNDSSr	= 2315,
    ROUNDSSr_Int	= 2316,
    RSM	= 2317,
    RSQRTPSm	= 2318,
    RSQRTPSm_Int	= 2319,
    RSQRTPSr	= 2320,
    RSQRTPSr_Int	= 2321,
    RSQRTSSm	= 2322,
    RSQRTSSm_Int	= 2323,
    RSQRTSSr	= 2324,
    RSQRTSSr_Int	= 2325,
    SAHF	= 2326,
    SAR16m1	= 2327,
    SAR16mCL	= 2328,
    SAR16mi	= 2329,
    SAR16r1	= 2330,
    SAR16rCL	= 2331,
    SAR16ri	= 2332,
    SAR32m1	= 2333,
    SAR32mCL	= 2334,
    SAR32mi	= 2335,
    SAR32r1	= 2336,
    SAR32rCL	= 2337,
    SAR32ri	= 2338,
    SAR64m1	= 2339,
    SAR64mCL	= 2340,
    SAR64mi	= 2341,
    SAR64r1	= 2342,
    SAR64rCL	= 2343,
    SAR64ri	= 2344,
    SAR8m1	= 2345,
    SAR8mCL	= 2346,
    SAR8mi	= 2347,
    SAR8r1	= 2348,
    SAR8rCL	= 2349,
    SAR8ri	= 2350,
    SARX32rm	= 2351,
    SARX32rr	= 2352,
    SARX64rm	= 2353,
    SARX64rr	= 2354,
    SBB16i16	= 2355,
    SBB16mi	= 2356,
    SBB16mi8	= 2357,
    SBB16mr	= 2358,
    SBB16ri	= 2359,
    SBB16ri8	= 2360,
    SBB16rm	= 2361,
    SBB16rr	= 2362,
    SBB16rr_REV	= 2363,
    SBB32i32	= 2364,
    SBB32mi	= 2365,
    SBB32mi8	= 2366,
    SBB32mr	= 2367,
    SBB32ri	= 2368,
    SBB32ri8	= 2369,
    SBB32rm	= 2370,
    SBB32rr	= 2371,
    SBB32rr_REV	= 2372,
    SBB64i32	= 2373,
    SBB64mi32	= 2374,
    SBB64mi8	= 2375,
    SBB64mr	= 2376,
    SBB64ri32	= 2377,
    SBB64ri8	= 2378,
    SBB64rm	= 2379,
    SBB64rr	= 2380,
    SBB64rr_REV	= 2381,
    SBB8i8	= 2382,
    SBB8mi	= 2383,
    SBB8mr	= 2384,
    SBB8ri	= 2385,
    SBB8rm	= 2386,
    SBB8rr	= 2387,
    SBB8rr_REV	= 2388,
    SCAS16	= 2389,
    SCAS32	= 2390,
    SCAS64	= 2391,
    SCAS8	= 2392,
    SEG_ALLOCA_32	= 2393,
    SEG_ALLOCA_64	= 2394,
    SETAEm	= 2395,
    SETAEr	= 2396,
    SETAm	= 2397,
    SETAr	= 2398,
    SETBEm	= 2399,
    SETBEr	= 2400,
    SETB_C16r	= 2401,
    SETB_C32r	= 2402,
    SETB_C64r	= 2403,
    SETB_C8r	= 2404,
    SETBm	= 2405,
    SETBr	= 2406,
    SETEm	= 2407,
    SETEr	= 2408,
    SETGEm	= 2409,
    SETGEr	= 2410,
    SETGm	= 2411,
    SETGr	= 2412,
    SETLEm	= 2413,
    SETLEr	= 2414,
    SETLm	= 2415,
    SETLr	= 2416,
    SETNEm	= 2417,
    SETNEr	= 2418,
    SETNOm	= 2419,
    SETNOr	= 2420,
    SETNPm	= 2421,
    SETNPr	= 2422,
    SETNSm	= 2423,
    SETNSr	= 2424,
    SETOm	= 2425,
    SETOr	= 2426,
    SETPm	= 2427,
    SETPr	= 2428,
    SETSm	= 2429,
    SETSr	= 2430,
    SFENCE	= 2431,
    SGDT16m	= 2432,
    SGDTm	= 2433,
    SHL16m1	= 2434,
    SHL16mCL	= 2435,
    SHL16mi	= 2436,
    SHL16r1	= 2437,
    SHL16rCL	= 2438,
    SHL16ri	= 2439,
    SHL32m1	= 2440,
    SHL32mCL	= 2441,
    SHL32mi	= 2442,
    SHL32r1	= 2443,
    SHL32rCL	= 2444,
    SHL32ri	= 2445,
    SHL64m1	= 2446,
    SHL64mCL	= 2447,
    SHL64mi	= 2448,
    SHL64r1	= 2449,
    SHL64rCL	= 2450,
    SHL64ri	= 2451,
    SHL8m1	= 2452,
    SHL8mCL	= 2453,
    SHL8mi	= 2454,
    SHL8r1	= 2455,
    SHL8rCL	= 2456,
    SHL8ri	= 2457,
    SHLD16mrCL	= 2458,
    SHLD16mri8	= 2459,
    SHLD16rrCL	= 2460,
    SHLD16rri8	= 2461,
    SHLD32mrCL	= 2462,
    SHLD32mri8	= 2463,
    SHLD32rrCL	= 2464,
    SHLD32rri8	= 2465,
    SHLD64mrCL	= 2466,
    SHLD64mri8	= 2467,
    SHLD64rrCL	= 2468,
    SHLD64rri8	= 2469,
    SHLX32rm	= 2470,
    SHLX32rr	= 2471,
    SHLX64rm	= 2472,
    SHLX64rr	= 2473,
    SHR16m1	= 2474,
    SHR16mCL	= 2475,
    SHR16mi	= 2476,
    SHR16r1	= 2477,
    SHR16rCL	= 2478,
    SHR16ri	= 2479,
    SHR32m1	= 2480,
    SHR32mCL	= 2481,
    SHR32mi	= 2482,
    SHR32r1	= 2483,
    SHR32rCL	= 2484,
    SHR32ri	= 2485,
    SHR64m1	= 2486,
    SHR64mCL	= 2487,
    SHR64mi	= 2488,
    SHR64r1	= 2489,
    SHR64rCL	= 2490,
    SHR64ri	= 2491,
    SHR8m1	= 2492,
    SHR8mCL	= 2493,
    SHR8mi	= 2494,
    SHR8r1	= 2495,
    SHR8rCL	= 2496,
    SHR8ri	= 2497,
    SHRD16mrCL	= 2498,
    SHRD16mri8	= 2499,
    SHRD16rrCL	= 2500,
    SHRD16rri8	= 2501,
    SHRD32mrCL	= 2502,
    SHRD32mri8	= 2503,
    SHRD32rrCL	= 2504,
    SHRD32rri8	= 2505,
    SHRD64mrCL	= 2506,
    SHRD64mri8	= 2507,
    SHRD64rrCL	= 2508,
    SHRD64rri8	= 2509,
    SHRX32rm	= 2510,
    SHRX32rr	= 2511,
    SHRX64rm	= 2512,
    SHRX64rr	= 2513,
    SHUFPDrmi	= 2514,
    SHUFPDrri	= 2515,
    SHUFPSrmi	= 2516,
    SHUFPSrri	= 2517,
    SIDT16m	= 2518,
    SIDTm	= 2519,
    SIN_F	= 2520,
    SIN_Fp32	= 2521,
    SIN_Fp64	= 2522,
    SIN_Fp80	= 2523,
    SKINIT	= 2524,
    SLDT16m	= 2525,
    SLDT16r	= 2526,
    SLDT32r	= 2527,
    SLDT64m	= 2528,
    SLDT64r	= 2529,
    SMSW16m	= 2530,
    SMSW16r	= 2531,
    SMSW32r	= 2532,
    SMSW64r	= 2533,
    SQRTPDm	= 2534,
    SQRTPDr	= 2535,
    SQRTPSm	= 2536,
    SQRTPSr	= 2537,
    SQRTSDm	= 2538,
    SQRTSDm_Int	= 2539,
    SQRTSDr	= 2540,
    SQRTSDr_Int	= 2541,
    SQRTSSm	= 2542,
    SQRTSSm_Int	= 2543,
    SQRTSSr	= 2544,
    SQRTSSr_Int	= 2545,
    SQRT_F	= 2546,
    SQRT_Fp32	= 2547,
    SQRT_Fp64	= 2548,
    SQRT_Fp80	= 2549,
    SS_PREFIX	= 2550,
    STAC	= 2551,
    STC	= 2552,
    STD	= 2553,
    STGI	= 2554,
    STI	= 2555,
    STMXCSR	= 2556,
    STOSB	= 2557,
    STOSD	= 2558,
    STOSQ	= 2559,
    STOSW	= 2560,
    STR16r	= 2561,
    STR32r	= 2562,
    STR64r	= 2563,
    STRm	= 2564,
    ST_F32m	= 2565,
    ST_F64m	= 2566,
    ST_FP32m	= 2567,
    ST_FP64m	= 2568,
    ST_FP80m	= 2569,
    ST_FPrr	= 2570,
    ST_Fp32m	= 2571,
    ST_Fp64m	= 2572,
    ST_Fp64m32	= 2573,
    ST_Fp80m32	= 2574,
    ST_Fp80m64	= 2575,
    ST_FpP32m	= 2576,
    ST_FpP64m	= 2577,
    ST_FpP64m32	= 2578,
    ST_FpP80m	= 2579,
    ST_FpP80m32	= 2580,
    ST_FpP80m64	= 2581,
    ST_Frr	= 2582,
    SUB16i16	= 2583,
    SUB16mi	= 2584,
    SUB16mi8	= 2585,
    SUB16mr	= 2586,
    SUB16ri	= 2587,
    SUB16ri8	= 2588,
    SUB16rm	= 2589,
    SUB16rr	= 2590,
    SUB16rr_REV	= 2591,
    SUB32i32	= 2592,
    SUB32mi	= 2593,
    SUB32mi8	= 2594,
    SUB32mr	= 2595,
    SUB32ri	= 2596,
    SUB32ri8	= 2597,
    SUB32rm	= 2598,
    SUB32rr	= 2599,
    SUB32rr_REV	= 2600,
    SUB64i32	= 2601,
    SUB64mi32	= 2602,
    SUB64mi8	= 2603,
    SUB64mr	= 2604,
    SUB64ri32	= 2605,
    SUB64ri8	= 2606,
    SUB64rm	= 2607,
    SUB64rr	= 2608,
    SUB64rr_REV	= 2609,
    SUB8i8	= 2610,
    SUB8mi	= 2611,
    SUB8mr	= 2612,
    SUB8ri	= 2613,
    SUB8rm	= 2614,
    SUB8rr	= 2615,
    SUB8rr_REV	= 2616,
    SUBPDrm	= 2617,
    SUBPDrr	= 2618,
    SUBPSrm	= 2619,
    SUBPSrr	= 2620,
    SUBR_F32m	= 2621,
    SUBR_F64m	= 2622,
    SUBR_FI16m	= 2623,
    SUBR_FI32m	= 2624,
    SUBR_FPrST0	= 2625,
    SUBR_FST0r	= 2626,
    SUBR_Fp32m	= 2627,
    SUBR_Fp64m	= 2628,
    SUBR_Fp64m32	= 2629,
    SUBR_Fp80m32	= 2630,
    SUBR_Fp80m64	= 2631,
    SUBR_FpI16m32	= 2632,
    SUBR_FpI16m64	= 2633,
    SUBR_FpI16m80	= 2634,
    SUBR_FpI32m32	= 2635,
    SUBR_FpI32m64	= 2636,
    SUBR_FpI32m80	= 2637,
    SUBR_FrST0	= 2638,
    SUBSDrm	= 2639,
    SUBSDrm_Int	= 2640,
    SUBSDrr	= 2641,
    SUBSDrr_Int	= 2642,
    SUBSSrm	= 2643,
    SUBSSrm_Int	= 2644,
    SUBSSrr	= 2645,
    SUBSSrr_Int	= 2646,
    SUB_F32m	= 2647,
    SUB_F64m	= 2648,
    SUB_FI16m	= 2649,
    SUB_FI32m	= 2650,
    SUB_FPrST0	= 2651,
    SUB_FST0r	= 2652,
    SUB_Fp32	= 2653,
    SUB_Fp32m	= 2654,
    SUB_Fp64	= 2655,
    SUB_Fp64m	= 2656,
    SUB_Fp64m32	= 2657,
    SUB_Fp80	= 2658,
    SUB_Fp80m32	= 2659,
    SUB_Fp80m64	= 2660,
    SUB_FpI16m32	= 2661,
    SUB_FpI16m64	= 2662,
    SUB_FpI16m80	= 2663,
    SUB_FpI32m32	= 2664,
    SUB_FpI32m64	= 2665,
    SUB_FpI32m80	= 2666,
    SUB_FrST0	= 2667,
    SWAPGS	= 2668,
    SYSCALL	= 2669,
    SYSENTER	= 2670,
    SYSEXIT	= 2671,
    SYSEXIT64	= 2672,
    SYSRET	= 2673,
    SYSRET64	= 2674,
    TAILJMPd	= 2675,
    TAILJMPd64	= 2676,
    TAILJMPm	= 2677,
    TAILJMPm64	= 2678,
    TAILJMPr	= 2679,
    TAILJMPr64	= 2680,
    TCRETURNdi	= 2681,
    TCRETURNdi64	= 2682,
    TCRETURNmi	= 2683,
    TCRETURNmi64	= 2684,
    TCRETURNri	= 2685,
    TCRETURNri64	= 2686,
    TEST16i16	= 2687,
    TEST16mi	= 2688,
    TEST16ri	= 2689,
    TEST16rm	= 2690,
    TEST16rr	= 2691,
    TEST32i32	= 2692,
    TEST32mi	= 2693,
    TEST32ri	= 2694,
    TEST32rm	= 2695,
    TEST32rr	= 2696,
    TEST64i32	= 2697,
    TEST64mi32	= 2698,
    TEST64ri32	= 2699,
    TEST64rm	= 2700,
    TEST64rr	= 2701,
    TEST8i8	= 2702,
    TEST8mi	= 2703,
    TEST8ri	= 2704,
    TEST8ri_NOREX	= 2705,
    TEST8rm	= 2706,
    TEST8rr	= 2707,
    TLSCall_32	= 2708,
    TLSCall_64	= 2709,
    TLS_addr32	= 2710,
    TLS_addr64	= 2711,
    TLS_base_addr32	= 2712,
    TLS_base_addr64	= 2713,
    TRAP	= 2714,
    TST_F	= 2715,
    TST_Fp32	= 2716,
    TST_Fp64	= 2717,
    TST_Fp80	= 2718,
    TZCNT16rm	= 2719,
    TZCNT16rr	= 2720,
    TZCNT32rm	= 2721,
    TZCNT32rr	= 2722,
    TZCNT64rm	= 2723,
    TZCNT64rr	= 2724,
    UCOMISDrm	= 2725,
    UCOMISDrr	= 2726,
    UCOMISSrm	= 2727,
    UCOMISSrr	= 2728,
    UCOM_FIPr	= 2729,
    UCOM_FIr	= 2730,
    UCOM_FPPr	= 2731,
    UCOM_FPr	= 2732,
    UCOM_FpIr32	= 2733,
    UCOM_FpIr64	= 2734,
    UCOM_FpIr80	= 2735,
    UCOM_Fpr32	= 2736,
    UCOM_Fpr64	= 2737,
    UCOM_Fpr80	= 2738,
    UCOM_Fr	= 2739,
    UD2B	= 2740,
    UNPCKHPDrm	= 2741,
    UNPCKHPDrr	= 2742,
    UNPCKHPSrm	= 2743,
    UNPCKHPSrr	= 2744,
    UNPCKLPDrm	= 2745,
    UNPCKLPDrr	= 2746,
    UNPCKLPSrm	= 2747,
    UNPCKLPSrr	= 2748,
    VAARG_64	= 2749,
    VADDPDYrm	= 2750,
    VADDPDYrr	= 2751,
    VADDPDrm	= 2752,
    VADDPDrr	= 2753,
    VADDPSYrm	= 2754,
    VADDPSYrr	= 2755,
    VADDPSrm	= 2756,
    VADDPSrr	= 2757,
    VADDSDrm	= 2758,
    VADDSDrm_Int	= 2759,
    VADDSDrr	= 2760,
    VADDSDrr_Int	= 2761,
    VADDSSrm	= 2762,
    VADDSSrm_Int	= 2763,
    VADDSSrr	= 2764,
    VADDSSrr_Int	= 2765,
    VADDSUBPDYrm	= 2766,
    VADDSUBPDYrr	= 2767,
    VADDSUBPDrm	= 2768,
    VADDSUBPDrr	= 2769,
    VADDSUBPSYrm	= 2770,
    VADDSUBPSYrr	= 2771,
    VADDSUBPSrm	= 2772,
    VADDSUBPSrr	= 2773,
    VAESDECLASTrm	= 2774,
    VAESDECLASTrr	= 2775,
    VAESDECrm	= 2776,
    VAESDECrr	= 2777,
    VAESENCLASTrm	= 2778,
    VAESENCLASTrr	= 2779,
    VAESENCrm	= 2780,
    VAESENCrr	= 2781,
    VAESIMCrm	= 2782,
    VAESIMCrr	= 2783,
    VAESKEYGENASSIST128rm	= 2784,
    VAESKEYGENASSIST128rr	= 2785,
    VANDNPDYrm	= 2786,
    VANDNPDYrr	= 2787,
    VANDNPDrm	= 2788,
    VANDNPDrr	= 2789,
    VANDNPSYrm	= 2790,
    VANDNPSYrr	= 2791,
    VANDNPSrm	= 2792,
    VANDNPSrr	= 2793,
    VANDPDYrm	= 2794,
    VANDPDYrr	= 2795,
    VANDPDrm	= 2796,
    VANDPDrr	= 2797,
    VANDPSYrm	= 2798,
    VANDPSYrr	= 2799,
    VANDPSrm	= 2800,
    VANDPSrr	= 2801,
    VASTART_SAVE_XMM_REGS	= 2802,
    VBLENDMPDZrm	= 2803,
    VBLENDMPDZrr	= 2804,
    VBLENDMPSZrm	= 2805,
    VBLENDMPSZrr	= 2806,
    VBLENDPDYrmi	= 2807,
    VBLENDPDYrri	= 2808,
    VBLENDPDrmi	= 2809,
    VBLENDPDrri	= 2810,
    VBLENDPSYrmi	= 2811,
    VBLENDPSYrri	= 2812,
    VBLENDPSrmi	= 2813,
    VBLENDPSrri	= 2814,
    VBLENDVPDYrm	= 2815,
    VBLENDVPDYrr	= 2816,
    VBLENDVPDrm	= 2817,
    VBLENDVPDrr	= 2818,
    VBLENDVPSYrm	= 2819,
    VBLENDVPSYrr	= 2820,
    VBLENDVPSrm	= 2821,
    VBLENDVPSrr	= 2822,
    VBROADCASTF128	= 2823,
    VBROADCASTI128	= 2824,
    VBROADCASTSDYrm	= 2825,
    VBROADCASTSDYrr	= 2826,
    VBROADCASTSDZrm	= 2827,
    VBROADCASTSDZrr	= 2828,
    VBROADCASTSSYrm	= 2829,
    VBROADCASTSSYrr	= 2830,
    VBROADCASTSSZrm	= 2831,
    VBROADCASTSSZrr	= 2832,
    VBROADCASTSSrm	= 2833,
    VBROADCASTSSrr	= 2834,
    VCMPPDYrmi	= 2835,
    VCMPPDYrmi_alt	= 2836,
    VCMPPDYrri	= 2837,
    VCMPPDYrri_alt	= 2838,
    VCMPPDZrmi	= 2839,
    VCMPPDZrmi_alt	= 2840,
    VCMPPDZrri	= 2841,
    VCMPPDZrri_alt	= 2842,
    VCMPPDrmi	= 2843,
    VCMPPDrmi_alt	= 2844,
    VCMPPDrri	= 2845,
    VCMPPDrri_alt	= 2846,
    VCMPPSYrmi	= 2847,
    VCMPPSYrmi_alt	= 2848,
    VCMPPSYrri	= 2849,
    VCMPPSYrri_alt	= 2850,
    VCMPPSZrmi	= 2851,
    VCMPPSZrmi_alt	= 2852,
    VCMPPSZrri	= 2853,
    VCMPPSZrri_alt	= 2854,
    VCMPPSrmi	= 2855,
    VCMPPSrmi_alt	= 2856,
    VCMPPSrri	= 2857,
    VCMPPSrri_alt	= 2858,
    VCMPSDrm	= 2859,
    VCMPSDrm_alt	= 2860,
    VCMPSDrr	= 2861,
    VCMPSDrr_alt	= 2862,
    VCMPSSrm	= 2863,
    VCMPSSrm_alt	= 2864,
    VCMPSSrr	= 2865,
    VCMPSSrr_alt	= 2866,
    VCOMISDrm	= 2867,
    VCOMISDrr	= 2868,
    VCOMISSrm	= 2869,
    VCOMISSrr	= 2870,
    VCVTDQ2PDYrm	= 2871,
    VCVTDQ2PDYrr	= 2872,
    VCVTDQ2PDrm	= 2873,
    VCVTDQ2PDrr	= 2874,
    VCVTDQ2PSYrm	= 2875,
    VCVTDQ2PSYrr	= 2876,
    VCVTDQ2PSrm	= 2877,
    VCVTDQ2PSrr	= 2878,
    VCVTPD2DQXrm	= 2879,
    VCVTPD2DQYrm	= 2880,
    VCVTPD2DQYrr	= 2881,
    VCVTPD2DQrr	= 2882,
    VCVTPD2PSXrm	= 2883,
    VCVTPD2PSYrm	= 2884,
    VCVTPD2PSYrr	= 2885,
    VCVTPD2PSrr	= 2886,
    VCVTPH2PSYrm	= 2887,
    VCVTPH2PSYrr	= 2888,
    VCVTPH2PSrm	= 2889,
    VCVTPH2PSrr	= 2890,
    VCVTPS2DQYrm	= 2891,
    VCVTPS2DQYrr	= 2892,
    VCVTPS2DQrm	= 2893,
    VCVTPS2DQrr	= 2894,
    VCVTPS2PDYrm	= 2895,
    VCVTPS2PDYrr	= 2896,
    VCVTPS2PDrm	= 2897,
    VCVTPS2PDrr	= 2898,
    VCVTPS2PHYmr	= 2899,
    VCVTPS2PHYrr	= 2900,
    VCVTPS2PHmr	= 2901,
    VCVTPS2PHrr	= 2902,
    VCVTSD2SI64rm	= 2903,
    VCVTSD2SI64rr	= 2904,
    VCVTSD2SIrm	= 2905,
    VCVTSD2SIrr	= 2906,
    VCVTSD2SSrm	= 2907,
    VCVTSD2SSrr	= 2908,
    VCVTSI2SD64rm	= 2909,
    VCVTSI2SD64rr	= 2910,
    VCVTSI2SDrm	= 2911,
    VCVTSI2SDrr	= 2912,
    VCVTSI2SS64rm	= 2913,
    VCVTSI2SS64rr	= 2914,
    VCVTSI2SSrm	= 2915,
    VCVTSI2SSrr	= 2916,
    VCVTSS2SDrm	= 2917,
    VCVTSS2SDrr	= 2918,
    VCVTSS2SI64rm	= 2919,
    VCVTSS2SI64rr	= 2920,
    VCVTSS2SIrm	= 2921,
    VCVTSS2SIrr	= 2922,
    VCVTTPD2DQXrm	= 2923,
    VCVTTPD2DQYrm	= 2924,
    VCVTTPD2DQYrr	= 2925,
    VCVTTPD2DQrr	= 2926,
    VCVTTPS2DQYrm	= 2927,
    VCVTTPS2DQYrr	= 2928,
    VCVTTPS2DQrm	= 2929,
    VCVTTPS2DQrr	= 2930,
    VCVTTSD2SI64rm	= 2931,
    VCVTTSD2SI64rr	= 2932,
    VCVTTSD2SIrm	= 2933,
    VCVTTSD2SIrr	= 2934,
    VCVTTSS2SI64rm	= 2935,
    VCVTTSS2SI64rr	= 2936,
    VCVTTSS2SIrm	= 2937,
    VCVTTSS2SIrr	= 2938,
    VDIVPDYrm	= 2939,
    VDIVPDYrr	= 2940,
    VDIVPDrm	= 2941,
    VDIVPDrr	= 2942,
    VDIVPSYrm	= 2943,
    VDIVPSYrr	= 2944,
    VDIVPSrm	= 2945,
    VDIVPSrr	= 2946,
    VDIVSDrm	= 2947,
    VDIVSDrm_Int	= 2948,
    VDIVSDrr	= 2949,
    VDIVSDrr_Int	= 2950,
    VDIVSSrm	= 2951,
    VDIVSSrm_Int	= 2952,
    VDIVSSrr	= 2953,
    VDIVSSrr_Int	= 2954,
    VDPPDrmi	= 2955,
    VDPPDrri	= 2956,
    VDPPSYrmi	= 2957,
    VDPPSYrri	= 2958,
    VDPPSrmi	= 2959,
    VDPPSrri	= 2960,
    VERRm	= 2961,
    VERRr	= 2962,
    VERWm	= 2963,
    VERWr	= 2964,
    VEXTRACTF128mr	= 2965,
    VEXTRACTF128rr	= 2966,
    VEXTRACTF32x4mr	= 2967,
    VEXTRACTF32x4rr	= 2968,
    VEXTRACTF64x4mr	= 2969,
    VEXTRACTF64x4rr	= 2970,
    VEXTRACTI128mr	= 2971,
    VEXTRACTI128rr	= 2972,
    VEXTRACTI32x4mr	= 2973,
    VEXTRACTI32x4rr	= 2974,
    VEXTRACTI64x4mr	= 2975,
    VEXTRACTI64x4rr	= 2976,
    VEXTRACTPSmr	= 2977,
    VEXTRACTPSrr	= 2978,
    VEXTRACTPSrr64	= 2979,
    VEXTRACTPSzmr	= 2980,
    VEXTRACTPSzrr	= 2981,
    VFMADDPD4mr	= 2982,
    VFMADDPD4mrY	= 2983,
    VFMADDPD4rm	= 2984,
    VFMADDPD4rmY	= 2985,
    VFMADDPD4rr	= 2986,
    VFMADDPD4rrY	= 2987,
    VFMADDPD4rrY_REV	= 2988,
    VFMADDPD4rr_REV	= 2989,
    VFMADDPDr132m	= 2990,
    VFMADDPDr132mY	= 2991,
    VFMADDPDr132r	= 2992,
    VFMADDPDr132rY	= 2993,
    VFMADDPDr213m	= 2994,
    VFMADDPDr213mY	= 2995,
    VFMADDPDr213r	= 2996,
    VFMADDPDr213rY	= 2997,
    VFMADDPDr231m	= 2998,
    VFMADDPDr231mY	= 2999,
    VFMADDPDr231r	= 3000,
    VFMADDPDr231rY	= 3001,
    VFMADDPS4mr	= 3002,
    VFMADDPS4mrY	= 3003,
    VFMADDPS4rm	= 3004,
    VFMADDPS4rmY	= 3005,
    VFMADDPS4rr	= 3006,
    VFMADDPS4rrY	= 3007,
    VFMADDPS4rrY_REV	= 3008,
    VFMADDPS4rr_REV	= 3009,
    VFMADDPSr132m	= 3010,
    VFMADDPSr132mY	= 3011,
    VFMADDPSr132r	= 3012,
    VFMADDPSr132rY	= 3013,
    VFMADDPSr213m	= 3014,
    VFMADDPSr213mY	= 3015,
    VFMADDPSr213r	= 3016,
    VFMADDPSr213rY	= 3017,
    VFMADDPSr231m	= 3018,
    VFMADDPSr231mY	= 3019,
    VFMADDPSr231r	= 3020,
    VFMADDPSr231rY	= 3021,
    VFMADDSD4mr	= 3022,
    VFMADDSD4mr_Int	= 3023,
    VFMADDSD4rm	= 3024,
    VFMADDSD4rm_Int	= 3025,
    VFMADDSD4rr	= 3026,
    VFMADDSD4rr_Int	= 3027,
    VFMADDSD4rr_REV	= 3028,
    VFMADDSDr132m	= 3029,
    VFMADDSDr132r	= 3030,
    VFMADDSDr213m	= 3031,
    VFMADDSDr213m_Int	= 3032,
    VFMADDSDr213r	= 3033,
    VFMADDSDr213r_Int	= 3034,
    VFMADDSDr231m	= 3035,
    VFMADDSDr231r	= 3036,
    VFMADDSS4mr	= 3037,
    VFMADDSS4mr_Int	= 3038,
    VFMADDSS4rm	= 3039,
    VFMADDSS4rm_Int	= 3040,
    VFMADDSS4rr	= 3041,
    VFMADDSS4rr_Int	= 3042,
    VFMADDSS4rr_REV	= 3043,
    VFMADDSSr132m	= 3044,
    VFMADDSSr132r	= 3045,
    VFMADDSSr213m	= 3046,
    VFMADDSSr213m_Int	= 3047,
    VFMADDSSr213r	= 3048,
    VFMADDSSr213r_Int	= 3049,
    VFMADDSSr231m	= 3050,
    VFMADDSSr231r	= 3051,
    VFMADDSUBPD4mr	= 3052,
    VFMADDSUBPD4mrY	= 3053,
    VFMADDSUBPD4rm	= 3054,
    VFMADDSUBPD4rmY	= 3055,
    VFMADDSUBPD4rr	= 3056,
    VFMADDSUBPD4rrY	= 3057,
    VFMADDSUBPD4rrY_REV	= 3058,
    VFMADDSUBPD4rr_REV	= 3059,
    VFMADDSUBPDr132m	= 3060,
    VFMADDSUBPDr132mY	= 3061,
    VFMADDSUBPDr132r	= 3062,
    VFMADDSUBPDr132rY	= 3063,
    VFMADDSUBPDr213m	= 3064,
    VFMADDSUBPDr213mY	= 3065,
    VFMADDSUBPDr213r	= 3066,
    VFMADDSUBPDr213rY	= 3067,
    VFMADDSUBPDr231m	= 3068,
    VFMADDSUBPDr231mY	= 3069,
    VFMADDSUBPDr231r	= 3070,
    VFMADDSUBPDr231rY	= 3071,
    VFMADDSUBPS4mr	= 3072,
    VFMADDSUBPS4mrY	= 3073,
    VFMADDSUBPS4rm	= 3074,
    VFMADDSUBPS4rmY	= 3075,
    VFMADDSUBPS4rr	= 3076,
    VFMADDSUBPS4rrY	= 3077,
    VFMADDSUBPS4rrY_REV	= 3078,
    VFMADDSUBPS4rr_REV	= 3079,
    VFMADDSUBPSr132m	= 3080,
    VFMADDSUBPSr132mY	= 3081,
    VFMADDSUBPSr132r	= 3082,
    VFMADDSUBPSr132rY	= 3083,
    VFMADDSUBPSr213m	= 3084,
    VFMADDSUBPSr213mY	= 3085,
    VFMADDSUBPSr213r	= 3086,
    VFMADDSUBPSr213rY	= 3087,
    VFMADDSUBPSr231m	= 3088,
    VFMADDSUBPSr231mY	= 3089,
    VFMADDSUBPSr231r	= 3090,
    VFMADDSUBPSr231rY	= 3091,
    VFMSUBADDPD4mr	= 3092,
    VFMSUBADDPD4mrY	= 3093,
    VFMSUBADDPD4rm	= 3094,
    VFMSUBADDPD4rmY	= 3095,
    VFMSUBADDPD4rr	= 3096,
    VFMSUBADDPD4rrY	= 3097,
    VFMSUBADDPD4rrY_REV	= 3098,
    VFMSUBADDPD4rr_REV	= 3099,
    VFMSUBADDPDr132m	= 3100,
    VFMSUBADDPDr132mY	= 3101,
    VFMSUBADDPDr132r	= 3102,
    VFMSUBADDPDr132rY	= 3103,
    VFMSUBADDPDr213m	= 3104,
    VFMSUBADDPDr213mY	= 3105,
    VFMSUBADDPDr213r	= 3106,
    VFMSUBADDPDr213rY	= 3107,
    VFMSUBADDPDr231m	= 3108,
    VFMSUBADDPDr231mY	= 3109,
    VFMSUBADDPDr231r	= 3110,
    VFMSUBADDPDr231rY	= 3111,
    VFMSUBADDPS4mr	= 3112,
    VFMSUBADDPS4mrY	= 3113,
    VFMSUBADDPS4rm	= 3114,
    VFMSUBADDPS4rmY	= 3115,
    VFMSUBADDPS4rr	= 3116,
    VFMSUBADDPS4rrY	= 3117,
    VFMSUBADDPS4rrY_REV	= 3118,
    VFMSUBADDPS4rr_REV	= 3119,
    VFMSUBADDPSr132m	= 3120,
    VFMSUBADDPSr132mY	= 3121,
    VFMSUBADDPSr132r	= 3122,
    VFMSUBADDPSr132rY	= 3123,
    VFMSUBADDPSr213m	= 3124,
    VFMSUBADDPSr213mY	= 3125,
    VFMSUBADDPSr213r	= 3126,
    VFMSUBADDPSr213rY	= 3127,
    VFMSUBADDPSr231m	= 3128,
    VFMSUBADDPSr231mY	= 3129,
    VFMSUBADDPSr231r	= 3130,
    VFMSUBADDPSr231rY	= 3131,
    VFMSUBPD4mr	= 3132,
    VFMSUBPD4mrY	= 3133,
    VFMSUBPD4rm	= 3134,
    VFMSUBPD4rmY	= 3135,
    VFMSUBPD4rr	= 3136,
    VFMSUBPD4rrY	= 3137,
    VFMSUBPD4rrY_REV	= 3138,
    VFMSUBPD4rr_REV	= 3139,
    VFMSUBPDr132m	= 3140,
    VFMSUBPDr132mY	= 3141,
    VFMSUBPDr132r	= 3142,
    VFMSUBPDr132rY	= 3143,
    VFMSUBPDr213m	= 3144,
    VFMSUBPDr213mY	= 3145,
    VFMSUBPDr213r	= 3146,
    VFMSUBPDr213rY	= 3147,
    VFMSUBPDr231m	= 3148,
    VFMSUBPDr231mY	= 3149,
    VFMSUBPDr231r	= 3150,
    VFMSUBPDr231rY	= 3151,
    VFMSUBPS4mr	= 3152,
    VFMSUBPS4mrY	= 3153,
    VFMSUBPS4rm	= 3154,
    VFMSUBPS4rmY	= 3155,
    VFMSUBPS4rr	= 3156,
    VFMSUBPS4rrY	= 3157,
    VFMSUBPS4rrY_REV	= 3158,
    VFMSUBPS4rr_REV	= 3159,
    VFMSUBPSr132m	= 3160,
    VFMSUBPSr132mY	= 3161,
    VFMSUBPSr132r	= 3162,
    VFMSUBPSr132rY	= 3163,
    VFMSUBPSr213m	= 3164,
    VFMSUBPSr213mY	= 3165,
    VFMSUBPSr213r	= 3166,
    VFMSUBPSr213rY	= 3167,
    VFMSUBPSr231m	= 3168,
    VFMSUBPSr231mY	= 3169,
    VFMSUBPSr231r	= 3170,
    VFMSUBPSr231rY	= 3171,
    VFMSUBSD4mr	= 3172,
    VFMSUBSD4mr_Int	= 3173,
    VFMSUBSD4rm	= 3174,
    VFMSUBSD4rm_Int	= 3175,
    VFMSUBSD4rr	= 3176,
    VFMSUBSD4rr_Int	= 3177,
    VFMSUBSD4rr_REV	= 3178,
    VFMSUBSDr132m	= 3179,
    VFMSUBSDr132r	= 3180,
    VFMSUBSDr213m	= 3181,
    VFMSUBSDr213m_Int	= 3182,
    VFMSUBSDr213r	= 3183,
    VFMSUBSDr213r_Int	= 3184,
    VFMSUBSDr231m	= 3185,
    VFMSUBSDr231r	= 3186,
    VFMSUBSS4mr	= 3187,
    VFMSUBSS4mr_Int	= 3188,
    VFMSUBSS4rm	= 3189,
    VFMSUBSS4rm_Int	= 3190,
    VFMSUBSS4rr	= 3191,
    VFMSUBSS4rr_Int	= 3192,
    VFMSUBSS4rr_REV	= 3193,
    VFMSUBSSr132m	= 3194,
    VFMSUBSSr132r	= 3195,
    VFMSUBSSr213m	= 3196,
    VFMSUBSSr213m_Int	= 3197,
    VFMSUBSSr213r	= 3198,
    VFMSUBSSr213r_Int	= 3199,
    VFMSUBSSr231m	= 3200,
    VFMSUBSSr231r	= 3201,
    VFNMADDPD4mr	= 3202,
    VFNMADDPD4mrY	= 3203,
    VFNMADDPD4rm	= 3204,
    VFNMADDPD4rmY	= 3205,
    VFNMADDPD4rr	= 3206,
    VFNMADDPD4rrY	= 3207,
    VFNMADDPD4rrY_REV	= 3208,
    VFNMADDPD4rr_REV	= 3209,
    VFNMADDPDr132m	= 3210,
    VFNMADDPDr132mY	= 3211,
    VFNMADDPDr132r	= 3212,
    VFNMADDPDr132rY	= 3213,
    VFNMADDPDr213m	= 3214,
    VFNMADDPDr213mY	= 3215,
    VFNMADDPDr213r	= 3216,
    VFNMADDPDr213rY	= 3217,
    VFNMADDPDr231m	= 3218,
    VFNMADDPDr231mY	= 3219,
    VFNMADDPDr231r	= 3220,
    VFNMADDPDr231rY	= 3221,
    VFNMADDPS4mr	= 3222,
    VFNMADDPS4mrY	= 3223,
    VFNMADDPS4rm	= 3224,
    VFNMADDPS4rmY	= 3225,
    VFNMADDPS4rr	= 3226,
    VFNMADDPS4rrY	= 3227,
    VFNMADDPS4rrY_REV	= 3228,
    VFNMADDPS4rr_REV	= 3229,
    VFNMADDPSr132m	= 3230,
    VFNMADDPSr132mY	= 3231,
    VFNMADDPSr132r	= 3232,
    VFNMADDPSr132rY	= 3233,
    VFNMADDPSr213m	= 3234,
    VFNMADDPSr213mY	= 3235,
    VFNMADDPSr213r	= 3236,
    VFNMADDPSr213rY	= 3237,
    VFNMADDPSr231m	= 3238,
    VFNMADDPSr231mY	= 3239,
    VFNMADDPSr231r	= 3240,
    VFNMADDPSr231rY	= 3241,
    VFNMADDSD4mr	= 3242,
    VFNMADDSD4mr_Int	= 3243,
    VFNMADDSD4rm	= 3244,
    VFNMADDSD4rm_Int	= 3245,
    VFNMADDSD4rr	= 3246,
    VFNMADDSD4rr_Int	= 3247,
    VFNMADDSD4rr_REV	= 3248,
    VFNMADDSDr132m	= 3249,
    VFNMADDSDr132r	= 3250,
    VFNMADDSDr213m	= 3251,
    VFNMADDSDr213m_Int	= 3252,
    VFNMADDSDr213r	= 3253,
    VFNMADDSDr213r_Int	= 3254,
    VFNMADDSDr231m	= 3255,
    VFNMADDSDr231r	= 3256,
    VFNMADDSS4mr	= 3257,
    VFNMADDSS4mr_Int	= 3258,
    VFNMADDSS4rm	= 3259,
    VFNMADDSS4rm_Int	= 3260,
    VFNMADDSS4rr	= 3261,
    VFNMADDSS4rr_Int	= 3262,
    VFNMADDSS4rr_REV	= 3263,
    VFNMADDSSr132m	= 3264,
    VFNMADDSSr132r	= 3265,
    VFNMADDSSr213m	= 3266,
    VFNMADDSSr213m_Int	= 3267,
    VFNMADDSSr213r	= 3268,
    VFNMADDSSr213r_Int	= 3269,
    VFNMADDSSr231m	= 3270,
    VFNMADDSSr231r	= 3271,
    VFNMSUBPD4mr	= 3272,
    VFNMSUBPD4mrY	= 3273,
    VFNMSUBPD4rm	= 3274,
    VFNMSUBPD4rmY	= 3275,
    VFNMSUBPD4rr	= 3276,
    VFNMSUBPD4rrY	= 3277,
    VFNMSUBPD4rrY_REV	= 3278,
    VFNMSUBPD4rr_REV	= 3279,
    VFNMSUBPDr132m	= 3280,
    VFNMSUBPDr132mY	= 3281,
    VFNMSUBPDr132r	= 3282,
    VFNMSUBPDr132rY	= 3283,
    VFNMSUBPDr213m	= 3284,
    VFNMSUBPDr213mY	= 3285,
    VFNMSUBPDr213r	= 3286,
    VFNMSUBPDr213rY	= 3287,
    VFNMSUBPDr231m	= 3288,
    VFNMSUBPDr231mY	= 3289,
    VFNMSUBPDr231r	= 3290,
    VFNMSUBPDr231rY	= 3291,
    VFNMSUBPS4mr	= 3292,
    VFNMSUBPS4mrY	= 3293,
    VFNMSUBPS4rm	= 3294,
    VFNMSUBPS4rmY	= 3295,
    VFNMSUBPS4rr	= 3296,
    VFNMSUBPS4rrY	= 3297,
    VFNMSUBPS4rrY_REV	= 3298,
    VFNMSUBPS4rr_REV	= 3299,
    VFNMSUBPSr132m	= 3300,
    VFNMSUBPSr132mY	= 3301,
    VFNMSUBPSr132r	= 3302,
    VFNMSUBPSr132rY	= 3303,
    VFNMSUBPSr213m	= 3304,
    VFNMSUBPSr213mY	= 3305,
    VFNMSUBPSr213r	= 3306,
    VFNMSUBPSr213rY	= 3307,
    VFNMSUBPSr231m	= 3308,
    VFNMSUBPSr231mY	= 3309,
    VFNMSUBPSr231r	= 3310,
    VFNMSUBPSr231rY	= 3311,
    VFNMSUBSD4mr	= 3312,
    VFNMSUBSD4mr_Int	= 3313,
    VFNMSUBSD4rm	= 3314,
    VFNMSUBSD4rm_Int	= 3315,
    VFNMSUBSD4rr	= 3316,
    VFNMSUBSD4rr_Int	= 3317,
    VFNMSUBSD4rr_REV	= 3318,
    VFNMSUBSDr132m	= 3319,
    VFNMSUBSDr132r	= 3320,
    VFNMSUBSDr213m	= 3321,
    VFNMSUBSDr213m_Int	= 3322,
    VFNMSUBSDr213r	= 3323,
    VFNMSUBSDr213r_Int	= 3324,
    VFNMSUBSDr231m	= 3325,
    VFNMSUBSDr231r	= 3326,
    VFNMSUBSS4mr	= 3327,
    VFNMSUBSS4mr_Int	= 3328,
    VFNMSUBSS4rm	= 3329,
    VFNMSUBSS4rm_Int	= 3330,
    VFNMSUBSS4rr	= 3331,
    VFNMSUBSS4rr_Int	= 3332,
    VFNMSUBSS4rr_REV	= 3333,
    VFNMSUBSSr132m	= 3334,
    VFNMSUBSSr132r	= 3335,
    VFNMSUBSSr213m	= 3336,
    VFNMSUBSSr213m_Int	= 3337,
    VFNMSUBSSr213r	= 3338,
    VFNMSUBSSr213r_Int	= 3339,
    VFNMSUBSSr231m	= 3340,
    VFNMSUBSSr231r	= 3341,
    VFRCZPDrm	= 3342,
    VFRCZPDrmY	= 3343,
    VFRCZPDrr	= 3344,
    VFRCZPDrrY	= 3345,
    VFRCZPSrm	= 3346,
    VFRCZPSrmY	= 3347,
    VFRCZPSrr	= 3348,
    VFRCZPSrrY	= 3349,
    VFRCZSDrm	= 3350,
    VFRCZSDrr	= 3351,
    VFRCZSSrm	= 3352,
    VFRCZSSrr	= 3353,
    VFsANDNPDrm	= 3354,
    VFsANDNPDrr	= 3355,
    VFsANDNPSrm	= 3356,
    VFsANDNPSrr	= 3357,
    VFsANDPDrm	= 3358,
    VFsANDPDrr	= 3359,
    VFsANDPSrm	= 3360,
    VFsANDPSrr	= 3361,
    VFsORPDrm	= 3362,
    VFsORPDrr	= 3363,
    VFsORPSrm	= 3364,
    VFsORPSrr	= 3365,
    VFsXORPDrm	= 3366,
    VFsXORPDrr	= 3367,
    VFsXORPSrm	= 3368,
    VFsXORPSrr	= 3369,
    VGATHERDPDYrm	= 3370,
    VGATHERDPDrm	= 3371,
    VGATHERDPSYrm	= 3372,
    VGATHERDPSrm	= 3373,
    VGATHERQPDYrm	= 3374,
    VGATHERQPDrm	= 3375,
    VGATHERQPSYrm	= 3376,
    VGATHERQPSrm	= 3377,
    VHADDPDYrm	= 3378,
    VHADDPDYrr	= 3379,
    VHADDPDrm	= 3380,
    VHADDPDrr	= 3381,
    VHADDPSYrm	= 3382,
    VHADDPSYrr	= 3383,
    VHADDPSrm	= 3384,
    VHADDPSrr	= 3385,
    VHSUBPDYrm	= 3386,
    VHSUBPDYrr	= 3387,
    VHSUBPDrm	= 3388,
    VHSUBPDrr	= 3389,
    VHSUBPSYrm	= 3390,
    VHSUBPSYrr	= 3391,
    VHSUBPSrm	= 3392,
    VHSUBPSrr	= 3393,
    VINSERTF128rm	= 3394,
    VINSERTF128rr	= 3395,
    VINSERTF32x4rm	= 3396,
    VINSERTF32x4rr	= 3397,
    VINSERTF64x4rm	= 3398,
    VINSERTF64x4rr	= 3399,
    VINSERTI128rm	= 3400,
    VINSERTI128rr	= 3401,
    VINSERTI32x4rm	= 3402,
    VINSERTI32x4rr	= 3403,
    VINSERTI64x4rm	= 3404,
    VINSERTI64x4rr	= 3405,
    VINSERTPSrm	= 3406,
    VINSERTPSrr	= 3407,
    VINSERTPSzrm	= 3408,
    VINSERTPSzrr	= 3409,
    VLDDQUYrm	= 3410,
    VLDDQUrm	= 3411,
    VLDMXCSR	= 3412,
    VMASKMOVDQU	= 3413,
    VMASKMOVDQU64	= 3414,
    VMASKMOVPDYmr	= 3415,
    VMASKMOVPDYrm	= 3416,
    VMASKMOVPDmr	= 3417,
    VMASKMOVPDrm	= 3418,
    VMASKMOVPSYmr	= 3419,
    VMASKMOVPSYrm	= 3420,
    VMASKMOVPSmr	= 3421,
    VMASKMOVPSrm	= 3422,
    VMAXCPDYrm	= 3423,
    VMAXCPDYrr	= 3424,
    VMAXCPDrm	= 3425,
    VMAXCPDrr	= 3426,
    VMAXCPSYrm	= 3427,
    VMAXCPSYrr	= 3428,
    VMAXCPSrm	= 3429,
    VMAXCPSrr	= 3430,
    VMAXCSDrm	= 3431,
    VMAXCSDrr	= 3432,
    VMAXCSSrm	= 3433,
    VMAXCSSrr	= 3434,
    VMAXPDYrm	= 3435,
    VMAXPDYrr	= 3436,
    VMAXPDrm	= 3437,
    VMAXPDrr	= 3438,
    VMAXPSYrm	= 3439,
    VMAXPSYrr	= 3440,
    VMAXPSrm	= 3441,
    VMAXPSrr	= 3442,
    VMAXSDrm	= 3443,
    VMAXSDrm_Int	= 3444,
    VMAXSDrr	= 3445,
    VMAXSDrr_Int	= 3446,
    VMAXSSrm	= 3447,
    VMAXSSrm_Int	= 3448,
    VMAXSSrr	= 3449,
    VMAXSSrr_Int	= 3450,
    VMCALL	= 3451,
    VMCLEARm	= 3452,
    VMFUNC	= 3453,
    VMINCPDYrm	= 3454,
    VMINCPDYrr	= 3455,
    VMINCPDrm	= 3456,
    VMINCPDrr	= 3457,
    VMINCPSYrm	= 3458,
    VMINCPSYrr	= 3459,
    VMINCPSrm	= 3460,
    VMINCPSrr	= 3461,
    VMINCSDrm	= 3462,
    VMINCSDrr	= 3463,
    VMINCSSrm	= 3464,
    VMINCSSrr	= 3465,
    VMINPDYrm	= 3466,
    VMINPDYrr	= 3467,
    VMINPDrm	= 3468,
    VMINPDrr	= 3469,
    VMINPSYrm	= 3470,
    VMINPSYrr	= 3471,
    VMINPSrm	= 3472,
    VMINPSrr	= 3473,
    VMINSDrm	= 3474,
    VMINSDrm_Int	= 3475,
    VMINSDrr	= 3476,
    VMINSDrr_Int	= 3477,
    VMINSSrm	= 3478,
    VMINSSrm_Int	= 3479,
    VMINSSrr	= 3480,
    VMINSSrr_Int	= 3481,
    VMLAUNCH	= 3482,
    VMLOAD32	= 3483,
    VMLOAD64	= 3484,
    VMMCALL	= 3485,
    VMOV64toPQIrr	= 3486,
    VMOV64toSDrm	= 3487,
    VMOV64toSDrr	= 3488,
    VMOVAPDYmr	= 3489,
    VMOVAPDYrm	= 3490,
    VMOVAPDYrr	= 3491,
    VMOVAPDYrr_REV	= 3492,
    VMOVAPDZmr	= 3493,
    VMOVAPDZrm	= 3494,
    VMOVAPDZrmk	= 3495,
    VMOVAPDZrr	= 3496,
    VMOVAPDZrrk	= 3497,
    VMOVAPDmr	= 3498,
    VMOVAPDrm	= 3499,
    VMOVAPDrr	= 3500,
    VMOVAPDrr_REV	= 3501,
    VMOVAPSYmr	= 3502,
    VMOVAPSYrm	= 3503,
    VMOVAPSYrr	= 3504,
    VMOVAPSYrr_REV	= 3505,
    VMOVAPSZmr	= 3506,
    VMOVAPSZrm	= 3507,
    VMOVAPSZrmk	= 3508,
    VMOVAPSZrr	= 3509,
    VMOVAPSZrrk	= 3510,
    VMOVAPSmr	= 3511,
    VMOVAPSrm	= 3512,
    VMOVAPSrr	= 3513,
    VMOVAPSrr_REV	= 3514,
    VMOVDDUPYrm	= 3515,
    VMOVDDUPYrr	= 3516,
    VMOVDDUPrm	= 3517,
    VMOVDDUPrr	= 3518,
    VMOVDI2PDIrm	= 3519,
    VMOVDI2PDIrr	= 3520,
    VMOVDI2SSrm	= 3521,
    VMOVDI2SSrr	= 3522,
    VMOVDQA32mr	= 3523,
    VMOVDQA32rm	= 3524,
    VMOVDQA32rr	= 3525,
    VMOVDQA64mr	= 3526,
    VMOVDQA64rm	= 3527,
    VMOVDQA64rr	= 3528,
    VMOVDQAYmr	= 3529,
    VMOVDQAYrm	= 3530,
    VMOVDQAYrr	= 3531,
    VMOVDQAYrr_REV	= 3532,
    VMOVDQAmr	= 3533,
    VMOVDQArm	= 3534,
    VMOVDQArr	= 3535,
    VMOVDQArr_REV	= 3536,
    VMOVDQU32rm	= 3537,
    VMOVDQU32rmk	= 3538,
    VMOVDQU32rr	= 3539,
    VMOVDQU32rrk	= 3540,
    VMOVDQU64rm	= 3541,
    VMOVDQU64rmk	= 3542,
    VMOVDQU64rr	= 3543,
    VMOVDQU64rrk	= 3544,
    VMOVDQUYmr	= 3545,
    VMOVDQUYrm	= 3546,
    VMOVDQUYrr	= 3547,
    VMOVDQUYrr_REV	= 3548,
    VMOVDQUmr	= 3549,
    VMOVDQUrm	= 3550,
    VMOVDQUrr	= 3551,
    VMOVDQUrr_REV	= 3552,
    VMOVHLPSrr	= 3553,
    VMOVHPDmr	= 3554,
    VMOVHPDrm	= 3555,
    VMOVHPSmr	= 3556,
    VMOVHPSrm	= 3557,
    VMOVLHPSrr	= 3558,
    VMOVLPDmr	= 3559,
    VMOVLPDrm	= 3560,
    VMOVLPSmr	= 3561,
    VMOVLPSrm	= 3562,
    VMOVLQ128mr	= 3563,
    VMOVMSKPDYr64r	= 3564,
    VMOVMSKPDYrr32	= 3565,
    VMOVMSKPDYrr64	= 3566,
    VMOVMSKPDr64r	= 3567,
    VMOVMSKPDrr32	= 3568,
    VMOVMSKPDrr64	= 3569,
    VMOVMSKPSYr64r	= 3570,
    VMOVMSKPSYrr32	= 3571,
    VMOVMSKPSYrr64	= 3572,
    VMOVMSKPSr64r	= 3573,
    VMOVMSKPSrr32	= 3574,
    VMOVMSKPSrr64	= 3575,
    VMOVNTDQAYrm	= 3576,
    VMOVNTDQArm	= 3577,
    VMOVNTDQYmr	= 3578,
    VMOVNTDQmr	= 3579,
    VMOVNTPDYmr	= 3580,
    VMOVNTPDmr	= 3581,
    VMOVNTPSYmr	= 3582,
    VMOVNTPSmr	= 3583,
    VMOVPDI2DImr	= 3584,
    VMOVPDI2DIrr	= 3585,
    VMOVPQI2QImr	= 3586,
    VMOVPQIto64rr	= 3587,
    VMOVQI2PQIrm	= 3588,
    VMOVQd64rr	= 3589,
    VMOVQd64rr_alt	= 3590,
    VMOVQs64rr	= 3591,
    VMOVQxrxr	= 3592,
    VMOVSDmr	= 3593,
    VMOVSDrm	= 3594,
    VMOVSDrr	= 3595,
    VMOVSDrr_REV	= 3596,
    VMOVSDto64mr	= 3597,
    VMOVSDto64rr	= 3598,
    VMOVSHDUPYrm	= 3599,
    VMOVSHDUPYrr	= 3600,
    VMOVSHDUPrm	= 3601,
    VMOVSHDUPrr	= 3602,
    VMOVSLDUPYrm	= 3603,
    VMOVSLDUPYrr	= 3604,
    VMOVSLDUPrm	= 3605,
    VMOVSLDUPrr	= 3606,
    VMOVSS2DImr	= 3607,
    VMOVSS2DIrr	= 3608,
    VMOVSSmr	= 3609,
    VMOVSSrm	= 3610,
    VMOVSSrr	= 3611,
    VMOVSSrr_REV	= 3612,
    VMOVUPDYmr	= 3613,
    VMOVUPDYrm	= 3614,
    VMOVUPDYrr	= 3615,
    VMOVUPDYrr_REV	= 3616,
    VMOVUPDZmr	= 3617,
    VMOVUPDZrm	= 3618,
    VMOVUPDZrmk	= 3619,
    VMOVUPDZrr	= 3620,
    VMOVUPDZrrk	= 3621,
    VMOVUPDmr	= 3622,
    VMOVUPDrm	= 3623,
    VMOVUPDrr	= 3624,
    VMOVUPDrr_REV	= 3625,
    VMOVUPSYmr	= 3626,
    VMOVUPSYrm	= 3627,
    VMOVUPSYrr	= 3628,
    VMOVUPSYrr_REV	= 3629,
    VMOVUPSZmr	= 3630,
    VMOVUPSZrm	= 3631,
    VMOVUPSZrmk	= 3632,
    VMOVUPSZrr	= 3633,
    VMOVUPSZrrk	= 3634,
    VMOVUPSmr	= 3635,
    VMOVUPSrm	= 3636,
    VMOVUPSrr	= 3637,
    VMOVUPSrr_REV	= 3638,
    VMOVZDI2PDIrm	= 3639,
    VMOVZDI2PDIrr	= 3640,
    VMOVZPQILo2PQIrm	= 3641,
    VMOVZPQILo2PQIrr	= 3642,
    VMOVZQI2PQIrm	= 3643,
    VMOVZQI2PQIrr	= 3644,
    VMPSADBWYrmi	= 3645,
    VMPSADBWYrri	= 3646,
    VMPSADBWrmi	= 3647,
    VMPSADBWrri	= 3648,
    VMPTRLDm	= 3649,
    VMPTRSTm	= 3650,
    VMREAD32rm	= 3651,
    VMREAD32rr	= 3652,
    VMREAD64rm	= 3653,
    VMREAD64rr	= 3654,
    VMRESUME	= 3655,
    VMRUN32	= 3656,
    VMRUN64	= 3657,
    VMSAVE32	= 3658,
    VMSAVE64	= 3659,
    VMULPDYrm	= 3660,
    VMULPDYrr	= 3661,
    VMULPDrm	= 3662,
    VMULPDrr	= 3663,
    VMULPSYrm	= 3664,
    VMULPSYrr	= 3665,
    VMULPSrm	= 3666,
    VMULPSrr	= 3667,
    VMULSDrm	= 3668,
    VMULSDrm_Int	= 3669,
    VMULSDrr	= 3670,
    VMULSDrr_Int	= 3671,
    VMULSSrm	= 3672,
    VMULSSrm_Int	= 3673,
    VMULSSrr	= 3674,
    VMULSSrr_Int	= 3675,
    VMWRITE32rm	= 3676,
    VMWRITE32rr	= 3677,
    VMWRITE64rm	= 3678,
    VMWRITE64rr	= 3679,
    VMXOFF	= 3680,
    VMXON	= 3681,
    VORPDYrm	= 3682,
    VORPDYrr	= 3683,
    VORPDrm	= 3684,
    VORPDrr	= 3685,
    VORPSYrm	= 3686,
    VORPSYrr	= 3687,
    VORPSrm	= 3688,
    VORPSrr	= 3689,
    VPABSBrm128	= 3690,
    VPABSBrm256	= 3691,
    VPABSBrr128	= 3692,
    VPABSBrr256	= 3693,
    VPABSDrm128	= 3694,
    VPABSDrm256	= 3695,
    VPABSDrr128	= 3696,
    VPABSDrr256	= 3697,
    VPABSWrm128	= 3698,
    VPABSWrm256	= 3699,
    VPABSWrr128	= 3700,
    VPABSWrr256	= 3701,
    VPACKSSDWYrm	= 3702,
    VPACKSSDWYrr	= 3703,
    VPACKSSDWrm	= 3704,
    VPACKSSDWrr	= 3705,
    VPACKSSWBYrm	= 3706,
    VPACKSSWBYrr	= 3707,
    VPACKSSWBrm	= 3708,
    VPACKSSWBrr	= 3709,
    VPACKUSDWYrm	= 3710,
    VPACKUSDWYrr	= 3711,
    VPACKUSDWrm	= 3712,
    VPACKUSDWrr	= 3713,
    VPACKUSWBYrm	= 3714,
    VPACKUSWBYrr	= 3715,
    VPACKUSWBrm	= 3716,
    VPACKUSWBrr	= 3717,
    VPADDBYrm	= 3718,
    VPADDBYrr	= 3719,
    VPADDBrm	= 3720,
    VPADDBrr	= 3721,
    VPADDDYrm	= 3722,
    VPADDDYrr	= 3723,
    VPADDDrm	= 3724,
    VPADDDrr	= 3725,
    VPADDQYrm	= 3726,
    VPADDQYrr	= 3727,
    VPADDQrm	= 3728,
    VPADDQrr	= 3729,
    VPADDSBYrm	= 3730,
    VPADDSBYrr	= 3731,
    VPADDSBrm	= 3732,
    VPADDSBrr	= 3733,
    VPADDSWYrm	= 3734,
    VPADDSWYrr	= 3735,
    VPADDSWrm	= 3736,
    VPADDSWrr	= 3737,
    VPADDUSBYrm	= 3738,
    VPADDUSBYrr	= 3739,
    VPADDUSBrm	= 3740,
    VPADDUSBrr	= 3741,
    VPADDUSWYrm	= 3742,
    VPADDUSWYrr	= 3743,
    VPADDUSWrm	= 3744,
    VPADDUSWrr	= 3745,
    VPADDWYrm	= 3746,
    VPADDWYrr	= 3747,
    VPADDWrm	= 3748,
    VPADDWrr	= 3749,
    VPALIGNR128rm	= 3750,
    VPALIGNR128rr	= 3751,
    VPALIGNR256rm	= 3752,
    VPALIGNR256rr	= 3753,
    VPANDNYrm	= 3754,
    VPANDNYrr	= 3755,
    VPANDNrm	= 3756,
    VPANDNrr	= 3757,
    VPANDYrm	= 3758,
    VPANDYrr	= 3759,
    VPANDrm	= 3760,
    VPANDrr	= 3761,
    VPAVGBYrm	= 3762,
    VPAVGBYrr	= 3763,
    VPAVGBrm	= 3764,
    VPAVGBrr	= 3765,
    VPAVGWYrm	= 3766,
    VPAVGWYrr	= 3767,
    VPAVGWrm	= 3768,
    VPAVGWrr	= 3769,
    VPBLENDDYrmi	= 3770,
    VPBLENDDYrri	= 3771,
    VPBLENDDrmi	= 3772,
    VPBLENDDrri	= 3773,
    VPBLENDMDZrm	= 3774,
    VPBLENDMDZrr	= 3775,
    VPBLENDMQZrm	= 3776,
    VPBLENDMQZrr	= 3777,
    VPBLENDVBYrm	= 3778,
    VPBLENDVBYrr	= 3779,
    VPBLENDVBrm	= 3780,
    VPBLENDVBrr	= 3781,
    VPBLENDWYrmi	= 3782,
    VPBLENDWYrri	= 3783,
    VPBLENDWrmi	= 3784,
    VPBLENDWrri	= 3785,
    VPBROADCASTBYrm	= 3786,
    VPBROADCASTBYrr	= 3787,
    VPBROADCASTBrm	= 3788,
    VPBROADCASTBrr	= 3789,
    VPBROADCASTDYrm	= 3790,
    VPBROADCASTDYrr	= 3791,
    VPBROADCASTDZkrm	= 3792,
    VPBROADCASTDZkrr	= 3793,
    VPBROADCASTDZrm	= 3794,
    VPBROADCASTDZrr	= 3795,
    VPBROADCASTDrZkrr	= 3796,
    VPBROADCASTDrZrr	= 3797,
    VPBROADCASTDrm	= 3798,
    VPBROADCASTDrr	= 3799,
    VPBROADCASTMB2Qrr	= 3800,
    VPBROADCASTMW2Drr	= 3801,
    VPBROADCASTQYrm	= 3802,
    VPBROADCASTQYrr	= 3803,
    VPBROADCASTQZkrm	= 3804,
    VPBROADCASTQZkrr	= 3805,
    VPBROADCASTQZrm	= 3806,
    VPBROADCASTQZrr	= 3807,
    VPBROADCASTQrZkrr	= 3808,
    VPBROADCASTQrZrr	= 3809,
    VPBROADCASTQrm	= 3810,
    VPBROADCASTQrr	= 3811,
    VPBROADCASTWYrm	= 3812,
    VPBROADCASTWYrr	= 3813,
    VPBROADCASTWrm	= 3814,
    VPBROADCASTWrr	= 3815,
    VPCLMULQDQrm	= 3816,
    VPCLMULQDQrr	= 3817,
    VPCMOVmr	= 3818,
    VPCMOVmrY	= 3819,
    VPCMOVrm	= 3820,
    VPCMOVrmY	= 3821,
    VPCMOVrr	= 3822,
    VPCMOVrrY	= 3823,
    VPCMPDZrmi	= 3824,
    VPCMPDZrmi_alt	= 3825,
    VPCMPDZrri	= 3826,
    VPCMPDZrri_alt	= 3827,
    VPCMPEQBYrm	= 3828,
    VPCMPEQBYrr	= 3829,
    VPCMPEQBrm	= 3830,
    VPCMPEQBrr	= 3831,
    VPCMPEQDYrm	= 3832,
    VPCMPEQDYrr	= 3833,
    VPCMPEQDZrm	= 3834,
    VPCMPEQDZrr	= 3835,
    VPCMPEQDrm	= 3836,
    VPCMPEQDrr	= 3837,
    VPCMPEQQYrm	= 3838,
    VPCMPEQQYrr	= 3839,
    VPCMPEQQZrm	= 3840,
    VPCMPEQQZrr	= 3841,
    VPCMPEQQrm	= 3842,
    VPCMPEQQrr	= 3843,
    VPCMPEQWYrm	= 3844,
    VPCMPEQWYrr	= 3845,
    VPCMPEQWrm	= 3846,
    VPCMPEQWrr	= 3847,
    VPCMPESTRIMEM	= 3848,
    VPCMPESTRIREG	= 3849,
    VPCMPESTRIrm	= 3850,
    VPCMPESTRIrr	= 3851,
    VPCMPESTRM128MEM	= 3852,
    VPCMPESTRM128REG	= 3853,
    VPCMPESTRM128rm	= 3854,
    VPCMPESTRM128rr	= 3855,
    VPCMPGTBYrm	= 3856,
    VPCMPGTBYrr	= 3857,
    VPCMPGTBrm	= 3858,
    VPCMPGTBrr	= 3859,
    VPCMPGTDYrm	= 3860,
    VPCMPGTDYrr	= 3861,
    VPCMPGTDZrm	= 3862,
    VPCMPGTDZrr	= 3863,
    VPCMPGTDrm	= 3864,
    VPCMPGTDrr	= 3865,
    VPCMPGTQYrm	= 3866,
    VPCMPGTQYrr	= 3867,
    VPCMPGTQZrm	= 3868,
    VPCMPGTQZrr	= 3869,
    VPCMPGTQrm	= 3870,
    VPCMPGTQrr	= 3871,
    VPCMPGTWYrm	= 3872,
    VPCMPGTWYrr	= 3873,
    VPCMPGTWrm	= 3874,
    VPCMPGTWrr	= 3875,
    VPCMPISTRIMEM	= 3876,
    VPCMPISTRIREG	= 3877,
    VPCMPISTRIrm	= 3878,
    VPCMPISTRIrr	= 3879,
    VPCMPISTRM128MEM	= 3880,
    VPCMPISTRM128REG	= 3881,
    VPCMPISTRM128rm	= 3882,
    VPCMPISTRM128rr	= 3883,
    VPCMPQZrmi	= 3884,
    VPCMPQZrmi_alt	= 3885,
    VPCMPQZrri	= 3886,
    VPCMPQZrri_alt	= 3887,
    VPCMPUDZrmi	= 3888,
    VPCMPUDZrmi_alt	= 3889,
    VPCMPUDZrri	= 3890,
    VPCMPUDZrri_alt	= 3891,
    VPCMPUQZrmi	= 3892,
    VPCMPUQZrmi_alt	= 3893,
    VPCMPUQZrri	= 3894,
    VPCMPUQZrri_alt	= 3895,
    VPCOMBmi	= 3896,
    VPCOMBri	= 3897,
    VPCOMDmi	= 3898,
    VPCOMDri	= 3899,
    VPCOMQmi	= 3900,
    VPCOMQri	= 3901,
    VPCOMUBmi	= 3902,
    VPCOMUBri	= 3903,
    VPCOMUDmi	= 3904,
    VPCOMUDri	= 3905,
    VPCOMUQmi	= 3906,
    VPCOMUQri	= 3907,
    VPCOMUWmi	= 3908,
    VPCOMUWri	= 3909,
    VPCOMWmi	= 3910,
    VPCOMWri	= 3911,
    VPERM2F128rm	= 3912,
    VPERM2F128rr	= 3913,
    VPERM2I128rm	= 3914,
    VPERM2I128rr	= 3915,
    VPERMDYrm	= 3916,
    VPERMDYrr	= 3917,
    VPERMDZrm	= 3918,
    VPERMDZrr	= 3919,
    VPERMI2Drm	= 3920,
    VPERMI2Drr	= 3921,
    VPERMI2PDrm	= 3922,
    VPERMI2PDrr	= 3923,
    VPERMI2PSrm	= 3924,
    VPERMI2PSrr	= 3925,
    VPERMI2Qrm	= 3926,
    VPERMI2Qrr	= 3927,
    VPERMIL2PDmr	= 3928,
    VPERMIL2PDmrY	= 3929,
    VPERMIL2PDrm	= 3930,
    VPERMIL2PDrmY	= 3931,
    VPERMIL2PDrr	= 3932,
    VPERMIL2PDrrY	= 3933,
    VPERMIL2PSmr	= 3934,
    VPERMIL2PSmrY	= 3935,
    VPERMIL2PSrm	= 3936,
    VPERMIL2PSrmY	= 3937,
    VPERMIL2PSrr	= 3938,
    VPERMIL2PSrrY	= 3939,
    VPERMILPDYmi	= 3940,
    VPERMILPDYri	= 3941,
    VPERMILPDYrm	= 3942,
    VPERMILPDYrr	= 3943,
    VPERMILPDmi	= 3944,
    VPERMILPDri	= 3945,
    VPERMILPDrm	= 3946,
    VPERMILPDrr	= 3947,
    VPERMILPSYmi	= 3948,
    VPERMILPSYri	= 3949,
    VPERMILPSYrm	= 3950,
    VPERMILPSYrr	= 3951,
    VPERMILPSmi	= 3952,
    VPERMILPSri	= 3953,
    VPERMILPSrm	= 3954,
    VPERMILPSrr	= 3955,
    VPERMPDYmi	= 3956,
    VPERMPDYri	= 3957,
    VPERMPDZmi	= 3958,
    VPERMPDZri	= 3959,
    VPERMPDZrm	= 3960,
    VPERMPDZrr	= 3961,
    VPERMPSYrm	= 3962,
    VPERMPSYrr	= 3963,
    VPERMPSZrm	= 3964,
    VPERMPSZrr	= 3965,
    VPERMQYmi	= 3966,
    VPERMQYri	= 3967,
    VPERMQZmi	= 3968,
    VPERMQZri	= 3969,
    VPERMQZrm	= 3970,
    VPERMQZrr	= 3971,
    VPEXTRBmr	= 3972,
    VPEXTRBrr	= 3973,
    VPEXTRBrr64	= 3974,
    VPEXTRDmr	= 3975,
    VPEXTRDrr	= 3976,
    VPEXTRQmr	= 3977,
    VPEXTRQrr	= 3978,
    VPEXTRWmr	= 3979,
    VPEXTRWri	= 3980,
    VPGATHERDDYrm	= 3981,
    VPGATHERDDrm	= 3982,
    VPGATHERDQYrm	= 3983,
    VPGATHERDQrm	= 3984,
    VPGATHERQDYrm	= 3985,
    VPGATHERQDrm	= 3986,
    VPGATHERQQYrm	= 3987,
    VPGATHERQQrm	= 3988,
    VPHADDBDrm	= 3989,
    VPHADDBDrr	= 3990,
    VPHADDBQrm	= 3991,
    VPHADDBQrr	= 3992,
    VPHADDBWrm	= 3993,
    VPHADDBWrr	= 3994,
    VPHADDDQrm	= 3995,
    VPHADDDQrr	= 3996,
    VPHADDDYrm	= 3997,
    VPHADDDYrr	= 3998,
    VPHADDDrm	= 3999,
    VPHADDDrr	= 4000,
    VPHADDSWrm128	= 4001,
    VPHADDSWrm256	= 4002,
    VPHADDSWrr128	= 4003,
    VPHADDSWrr256	= 4004,
    VPHADDUBDrm	= 4005,
    VPHADDUBDrr	= 4006,
    VPHADDUBQrm	= 4007,
    VPHADDUBQrr	= 4008,
    VPHADDUBWrm	= 4009,
    VPHADDUBWrr	= 4010,
    VPHADDUDQrm	= 4011,
    VPHADDUDQrr	= 4012,
    VPHADDUWDrm	= 4013,
    VPHADDUWDrr	= 4014,
    VPHADDUWQrm	= 4015,
    VPHADDUWQrr	= 4016,
    VPHADDWDrm	= 4017,
    VPHADDWDrr	= 4018,
    VPHADDWQrm	= 4019,
    VPHADDWQrr	= 4020,
    VPHADDWYrm	= 4021,
    VPHADDWYrr	= 4022,
    VPHADDWrm	= 4023,
    VPHADDWrr	= 4024,
    VPHMINPOSUWrm128	= 4025,
    VPHMINPOSUWrr128	= 4026,
    VPHSUBBWrm	= 4027,
    VPHSUBBWrr	= 4028,
    VPHSUBDQrm	= 4029,
    VPHSUBDQrr	= 4030,
    VPHSUBDYrm	= 4031,
    VPHSUBDYrr	= 4032,
    VPHSUBDrm	= 4033,
    VPHSUBDrr	= 4034,
    VPHSUBSWrm128	= 4035,
    VPHSUBSWrm256	= 4036,
    VPHSUBSWrr128	= 4037,
    VPHSUBSWrr256	= 4038,
    VPHSUBWDrm	= 4039,
    VPHSUBWDrr	= 4040,
    VPHSUBWYrm	= 4041,
    VPHSUBWYrr	= 4042,
    VPHSUBWrm	= 4043,
    VPHSUBWrr	= 4044,
    VPINSRBrm	= 4045,
    VPINSRBrr	= 4046,
    VPINSRDrm	= 4047,
    VPINSRDrr	= 4048,
    VPINSRQrm	= 4049,
    VPINSRQrr	= 4050,
    VPINSRWrmi	= 4051,
    VPINSRWrr64i	= 4052,
    VPINSRWrri	= 4053,
    VPMACSDDrm	= 4054,
    VPMACSDDrr	= 4055,
    VPMACSDQHrm	= 4056,
    VPMACSDQHrr	= 4057,
    VPMACSDQLrm	= 4058,
    VPMACSDQLrr	= 4059,
    VPMACSSDDrm	= 4060,
    VPMACSSDDrr	= 4061,
    VPMACSSDQHrm	= 4062,
    VPMACSSDQHrr	= 4063,
    VPMACSSDQLrm	= 4064,
    VPMACSSDQLrr	= 4065,
    VPMACSSWDrm	= 4066,
    VPMACSSWDrr	= 4067,
    VPMACSSWWrm	= 4068,
    VPMACSSWWrr	= 4069,
    VPMACSWDrm	= 4070,
    VPMACSWDrr	= 4071,
    VPMACSWWrm	= 4072,
    VPMACSWWrr	= 4073,
    VPMADCSSWDrm	= 4074,
    VPMADCSSWDrr	= 4075,
    VPMADCSWDrm	= 4076,
    VPMADCSWDrr	= 4077,
    VPMADDUBSWrm128	= 4078,
    VPMADDUBSWrm256	= 4079,
    VPMADDUBSWrr128	= 4080,
    VPMADDUBSWrr256	= 4081,
    VPMADDWDYrm	= 4082,
    VPMADDWDYrr	= 4083,
    VPMADDWDrm	= 4084,
    VPMADDWDrr	= 4085,
    VPMASKMOVDYmr	= 4086,
    VPMASKMOVDYrm	= 4087,
    VPMASKMOVDmr	= 4088,
    VPMASKMOVDrm	= 4089,
    VPMASKMOVQYmr	= 4090,
    VPMASKMOVQYrm	= 4091,
    VPMASKMOVQmr	= 4092,
    VPMASKMOVQrm	= 4093,
    VPMAXSBYrm	= 4094,
    VPMAXSBYrr	= 4095,
    VPMAXSBrm	= 4096,
    VPMAXSBrr	= 4097,
    VPMAXSDYrm	= 4098,
    VPMAXSDYrr	= 4099,
    VPMAXSDrm	= 4100,
    VPMAXSDrr	= 4101,
    VPMAXSWYrm	= 4102,
    VPMAXSWYrr	= 4103,
    VPMAXSWrm	= 4104,
    VPMAXSWrr	= 4105,
    VPMAXUBYrm	= 4106,
    VPMAXUBYrr	= 4107,
    VPMAXUBrm	= 4108,
    VPMAXUBrr	= 4109,
    VPMAXUDYrm	= 4110,
    VPMAXUDYrr	= 4111,
    VPMAXUDrm	= 4112,
    VPMAXUDrr	= 4113,
    VPMAXUWYrm	= 4114,
    VPMAXUWYrr	= 4115,
    VPMAXUWrm	= 4116,
    VPMAXUWrr	= 4117,
    VPMINSBYrm	= 4118,
    VPMINSBYrr	= 4119,
    VPMINSBrm	= 4120,
    VPMINSBrr	= 4121,
    VPMINSDYrm	= 4122,
    VPMINSDYrr	= 4123,
    VPMINSDrm	= 4124,
    VPMINSDrr	= 4125,
    VPMINSWYrm	= 4126,
    VPMINSWYrr	= 4127,
    VPMINSWrm	= 4128,
    VPMINSWrr	= 4129,
    VPMINUBYrm	= 4130,
    VPMINUBYrr	= 4131,
    VPMINUBrm	= 4132,
    VPMINUBrr	= 4133,
    VPMINUDYrm	= 4134,
    VPMINUDYrr	= 4135,
    VPMINUDrm	= 4136,
    VPMINUDrr	= 4137,
    VPMINUWYrm	= 4138,
    VPMINUWYrr	= 4139,
    VPMINUWrm	= 4140,
    VPMINUWrr	= 4141,
    VPMOVMSKBYr64r	= 4142,
    VPMOVMSKBYrr	= 4143,
    VPMOVMSKBr64r	= 4144,
    VPMOVMSKBrr	= 4145,
    VPMOVSXBDYrm	= 4146,
    VPMOVSXBDYrr	= 4147,
    VPMOVSXBDrm	= 4148,
    VPMOVSXBDrr	= 4149,
    VPMOVSXBQYrm	= 4150,
    VPMOVSXBQYrr	= 4151,
    VPMOVSXBQrm	= 4152,
    VPMOVSXBQrr	= 4153,
    VPMOVSXBWYrm	= 4154,
    VPMOVSXBWYrr	= 4155,
    VPMOVSXBWrm	= 4156,
    VPMOVSXBWrr	= 4157,
    VPMOVSXDQYrm	= 4158,
    VPMOVSXDQYrr	= 4159,
    VPMOVSXDQrm	= 4160,
    VPMOVSXDQrr	= 4161,
    VPMOVSXWDYrm	= 4162,
    VPMOVSXWDYrr	= 4163,
    VPMOVSXWDrm	= 4164,
    VPMOVSXWDrr	= 4165,
    VPMOVSXWQYrm	= 4166,
    VPMOVSXWQYrr	= 4167,
    VPMOVSXWQrm	= 4168,
    VPMOVSXWQrr	= 4169,
    VPMOVZXBDYrm	= 4170,
    VPMOVZXBDYrr	= 4171,
    VPMOVZXBDrm	= 4172,
    VPMOVZXBDrr	= 4173,
    VPMOVZXBQYrm	= 4174,
    VPMOVZXBQYrr	= 4175,
    VPMOVZXBQrm	= 4176,
    VPMOVZXBQrr	= 4177,
    VPMOVZXBWYrm	= 4178,
    VPMOVZXBWYrr	= 4179,
    VPMOVZXBWrm	= 4180,
    VPMOVZXBWrr	= 4181,
    VPMOVZXDQYrm	= 4182,
    VPMOVZXDQYrr	= 4183,
    VPMOVZXDQrm	= 4184,
    VPMOVZXDQrr	= 4185,
    VPMOVZXWDYrm	= 4186,
    VPMOVZXWDYrr	= 4187,
    VPMOVZXWDrm	= 4188,
    VPMOVZXWDrr	= 4189,
    VPMOVZXWQYrm	= 4190,
    VPMOVZXWQYrr	= 4191,
    VPMOVZXWQrm	= 4192,
    VPMOVZXWQrr	= 4193,
    VPMULDQYrm	= 4194,
    VPMULDQYrr	= 4195,
    VPMULDQrm	= 4196,
    VPMULDQrr	= 4197,
    VPMULHRSWrm128	= 4198,
    VPMULHRSWrm256	= 4199,
    VPMULHRSWrr128	= 4200,
    VPMULHRSWrr256	= 4201,
    VPMULHUWYrm	= 4202,
    VPMULHUWYrr	= 4203,
    VPMULHUWrm	= 4204,
    VPMULHUWrr	= 4205,
    VPMULHWYrm	= 4206,
    VPMULHWYrr	= 4207,
    VPMULHWrm	= 4208,
    VPMULHWrr	= 4209,
    VPMULLDYrm	= 4210,
    VPMULLDYrr	= 4211,
    VPMULLDrm	= 4212,
    VPMULLDrr	= 4213,
    VPMULLWYrm	= 4214,
    VPMULLWYrr	= 4215,
    VPMULLWrm	= 4216,
    VPMULLWrr	= 4217,
    VPMULUDQYrm	= 4218,
    VPMULUDQYrr	= 4219,
    VPMULUDQrm	= 4220,
    VPMULUDQrr	= 4221,
    VPORYrm	= 4222,
    VPORYrr	= 4223,
    VPORrm	= 4224,
    VPORrr	= 4225,
    VPPERMmr	= 4226,
    VPPERMrm	= 4227,
    VPPERMrr	= 4228,
    VPROTBmi	= 4229,
    VPROTBmr	= 4230,
    VPROTBri	= 4231,
    VPROTBrm	= 4232,
    VPROTBrr	= 4233,
    VPROTDmi	= 4234,
    VPROTDmr	= 4235,
    VPROTDri	= 4236,
    VPROTDrm	= 4237,
    VPROTDrr	= 4238,
    VPROTQmi	= 4239,
    VPROTQmr	= 4240,
    VPROTQri	= 4241,
    VPROTQrm	= 4242,
    VPROTQrr	= 4243,
    VPROTWmi	= 4244,
    VPROTWmr	= 4245,
    VPROTWri	= 4246,
    VPROTWrm	= 4247,
    VPROTWrr	= 4248,
    VPSADBWYrm	= 4249,
    VPSADBWYrr	= 4250,
    VPSADBWrm	= 4251,
    VPSADBWrr	= 4252,
    VPSHABmr	= 4253,
    VPSHABrm	= 4254,
    VPSHABrr	= 4255,
    VPSHADmr	= 4256,
    VPSHADrm	= 4257,
    VPSHADrr	= 4258,
    VPSHAQmr	= 4259,
    VPSHAQrm	= 4260,
    VPSHAQrr	= 4261,
    VPSHAWmr	= 4262,
    VPSHAWrm	= 4263,
    VPSHAWrr	= 4264,
    VPSHLBmr	= 4265,
    VPSHLBrm	= 4266,
    VPSHLBrr	= 4267,
    VPSHLDmr	= 4268,
    VPSHLDrm	= 4269,
    VPSHLDrr	= 4270,
    VPSHLQmr	= 4271,
    VPSHLQrm	= 4272,
    VPSHLQrr	= 4273,
    VPSHLWmr	= 4274,
    VPSHLWrm	= 4275,
    VPSHLWrr	= 4276,
    VPSHUFBYrm	= 4277,
    VPSHUFBYrr	= 4278,
    VPSHUFBrm	= 4279,
    VPSHUFBrr	= 4280,
    VPSHUFDYmi	= 4281,
    VPSHUFDYri	= 4282,
    VPSHUFDmi	= 4283,
    VPSHUFDri	= 4284,
    VPSHUFHWYmi	= 4285,
    VPSHUFHWYri	= 4286,
    VPSHUFHWmi	= 4287,
    VPSHUFHWri	= 4288,
    VPSHUFLWYmi	= 4289,
    VPSHUFLWYri	= 4290,
    VPSHUFLWmi	= 4291,
    VPSHUFLWri	= 4292,
    VPSIGNBYrm	= 4293,
    VPSIGNBYrr	= 4294,
    VPSIGNBrm	= 4295,
    VPSIGNBrr	= 4296,
    VPSIGNDYrm	= 4297,
    VPSIGNDYrr	= 4298,
    VPSIGNDrm	= 4299,
    VPSIGNDrr	= 4300,
    VPSIGNWYrm	= 4301,
    VPSIGNWYrr	= 4302,
    VPSIGNWrm	= 4303,
    VPSIGNWrr	= 4304,
    VPSLLDQYri	= 4305,
    VPSLLDQri	= 4306,
    VPSLLDYri	= 4307,
    VPSLLDYrm	= 4308,
    VPSLLDYrr	= 4309,
    VPSLLDri	= 4310,
    VPSLLDrm	= 4311,
    VPSLLDrr	= 4312,
    VPSLLQYri	= 4313,
    VPSLLQYrm	= 4314,
    VPSLLQYrr	= 4315,
    VPSLLQri	= 4316,
    VPSLLQrm	= 4317,
    VPSLLQrr	= 4318,
    VPSLLVDYrm	= 4319,
    VPSLLVDYrr	= 4320,
    VPSLLVDrm	= 4321,
    VPSLLVDrr	= 4322,
    VPSLLVQYrm	= 4323,
    VPSLLVQYrr	= 4324,
    VPSLLVQrm	= 4325,
    VPSLLVQrr	= 4326,
    VPSLLWYri	= 4327,
    VPSLLWYrm	= 4328,
    VPSLLWYrr	= 4329,
    VPSLLWri	= 4330,
    VPSLLWrm	= 4331,
    VPSLLWrr	= 4332,
    VPSRADYri	= 4333,
    VPSRADYrm	= 4334,
    VPSRADYrr	= 4335,
    VPSRADri	= 4336,
    VPSRADrm	= 4337,
    VPSRADrr	= 4338,
    VPSRAVDYrm	= 4339,
    VPSRAVDYrr	= 4340,
    VPSRAVDrm	= 4341,
    VPSRAVDrr	= 4342,
    VPSRAWYri	= 4343,
    VPSRAWYrm	= 4344,
    VPSRAWYrr	= 4345,
    VPSRAWri	= 4346,
    VPSRAWrm	= 4347,
    VPSRAWrr	= 4348,
    VPSRLDQYri	= 4349,
    VPSRLDQri	= 4350,
    VPSRLDYri	= 4351,
    VPSRLDYrm	= 4352,
    VPSRLDYrr	= 4353,
    VPSRLDri	= 4354,
    VPSRLDrm	= 4355,
    VPSRLDrr	= 4356,
    VPSRLQYri	= 4357,
    VPSRLQYrm	= 4358,
    VPSRLQYrr	= 4359,
    VPSRLQri	= 4360,
    VPSRLQrm	= 4361,
    VPSRLQrr	= 4362,
    VPSRLVDYrm	= 4363,
    VPSRLVDYrr	= 4364,
    VPSRLVDrm	= 4365,
    VPSRLVDrr	= 4366,
    VPSRLVQYrm	= 4367,
    VPSRLVQYrr	= 4368,
    VPSRLVQrm	= 4369,
    VPSRLVQrr	= 4370,
    VPSRLWYri	= 4371,
    VPSRLWYrm	= 4372,
    VPSRLWYrr	= 4373,
    VPSRLWri	= 4374,
    VPSRLWrm	= 4375,
    VPSRLWrr	= 4376,
    VPSUBBYrm	= 4377,
    VPSUBBYrr	= 4378,
    VPSUBBrm	= 4379,
    VPSUBBrr	= 4380,
    VPSUBDYrm	= 4381,
    VPSUBDYrr	= 4382,
    VPSUBDrm	= 4383,
    VPSUBDrr	= 4384,
    VPSUBQYrm	= 4385,
    VPSUBQYrr	= 4386,
    VPSUBQrm	= 4387,
    VPSUBQrr	= 4388,
    VPSUBSBYrm	= 4389,
    VPSUBSBYrr	= 4390,
    VPSUBSBrm	= 4391,
    VPSUBSBrr	= 4392,
    VPSUBSWYrm	= 4393,
    VPSUBSWYrr	= 4394,
    VPSUBSWrm	= 4395,
    VPSUBSWrr	= 4396,
    VPSUBUSBYrm	= 4397,
    VPSUBUSBYrr	= 4398,
    VPSUBUSBrm	= 4399,
    VPSUBUSBrr	= 4400,
    VPSUBUSWYrm	= 4401,
    VPSUBUSWYrr	= 4402,
    VPSUBUSWrm	= 4403,
    VPSUBUSWrr	= 4404,
    VPSUBWYrm	= 4405,
    VPSUBWYrr	= 4406,
    VPSUBWrm	= 4407,
    VPSUBWrr	= 4408,
    VPTESTYrm	= 4409,
    VPTESTYrr	= 4410,
    VPTESTrm	= 4411,
    VPTESTrr	= 4412,
    VPUNPCKHBWYrm	= 4413,
    VPUNPCKHBWYrr	= 4414,
    VPUNPCKHBWrm	= 4415,
    VPUNPCKHBWrr	= 4416,
    VPUNPCKHDQYrm	= 4417,
    VPUNPCKHDQYrr	= 4418,
    VPUNPCKHDQrm	= 4419,
    VPUNPCKHDQrr	= 4420,
    VPUNPCKHQDQYrm	= 4421,
    VPUNPCKHQDQYrr	= 4422,
    VPUNPCKHQDQrm	= 4423,
    VPUNPCKHQDQrr	= 4424,
    VPUNPCKHWDYrm	= 4425,
    VPUNPCKHWDYrr	= 4426,
    VPUNPCKHWDrm	= 4427,
    VPUNPCKHWDrr	= 4428,
    VPUNPCKLBWYrm	= 4429,
    VPUNPCKLBWYrr	= 4430,
    VPUNPCKLBWrm	= 4431,
    VPUNPCKLBWrr	= 4432,
    VPUNPCKLDQYrm	= 4433,
    VPUNPCKLDQYrr	= 4434,
    VPUNPCKLDQrm	= 4435,
    VPUNPCKLDQrr	= 4436,
    VPUNPCKLQDQYrm	= 4437,
    VPUNPCKLQDQYrr	= 4438,
    VPUNPCKLQDQrm	= 4439,
    VPUNPCKLQDQrr	= 4440,
    VPUNPCKLWDYrm	= 4441,
    VPUNPCKLWDYrr	= 4442,
    VPUNPCKLWDrm	= 4443,
    VPUNPCKLWDrr	= 4444,
    VPXORYrm	= 4445,
    VPXORYrr	= 4446,
    VPXORrm	= 4447,
    VPXORrr	= 4448,
    VRCPPSYm	= 4449,
    VRCPPSYm_Int	= 4450,
    VRCPPSYr	= 4451,
    VRCPPSYr_Int	= 4452,
    VRCPPSm	= 4453,
    VRCPPSm_Int	= 4454,
    VRCPPSr	= 4455,
    VRCPPSr_Int	= 4456,
    VRCPSSm	= 4457,
    VRCPSSm_Int	= 4458,
    VRCPSSr	= 4459,
    VROUNDPDm	= 4460,
    VROUNDPDr	= 4461,
    VROUNDPSm	= 4462,
    VROUNDPSr	= 4463,
    VROUNDSDm	= 4464,
    VROUNDSDr	= 4465,
    VROUNDSDr_Int	= 4466,
    VROUNDSSm	= 4467,
    VROUNDSSr	= 4468,
    VROUNDSSr_Int	= 4469,
    VROUNDYPDm	= 4470,
    VROUNDYPDr	= 4471,
    VROUNDYPSm	= 4472,
    VROUNDYPSr	= 4473,
    VRSQRTPSYm	= 4474,
    VRSQRTPSYm_Int	= 4475,
    VRSQRTPSYr	= 4476,
    VRSQRTPSYr_Int	= 4477,
    VRSQRTPSm	= 4478,
    VRSQRTPSm_Int	= 4479,
    VRSQRTPSr	= 4480,
    VRSQRTPSr_Int	= 4481,
    VRSQRTSSm	= 4482,
    VRSQRTSSm_Int	= 4483,
    VRSQRTSSr	= 4484,
    VSHUFPDYrmi	= 4485,
    VSHUFPDYrri	= 4486,
    VSHUFPDrmi	= 4487,
    VSHUFPDrri	= 4488,
    VSHUFPSYrmi	= 4489,
    VSHUFPSYrri	= 4490,
    VSHUFPSrmi	= 4491,
    VSHUFPSrri	= 4492,
    VSQRTPDYm	= 4493,
    VSQRTPDYr	= 4494,
    VSQRTPDm	= 4495,
    VSQRTPDr	= 4496,
    VSQRTPSYm	= 4497,
    VSQRTPSYr	= 4498,
    VSQRTPSm	= 4499,
    VSQRTPSr	= 4500,
    VSQRTSDm	= 4501,
    VSQRTSDm_Int	= 4502,
    VSQRTSDr	= 4503,
    VSQRTSSm	= 4504,
    VSQRTSSm_Int	= 4505,
    VSQRTSSr	= 4506,
    VSTMXCSR	= 4507,
    VSUBPDYrm	= 4508,
    VSUBPDYrr	= 4509,
    VSUBPDrm	= 4510,
    VSUBPDrr	= 4511,
    VSUBPSYrm	= 4512,
    VSUBPSYrr	= 4513,
    VSUBPSrm	= 4514,
    VSUBPSrr	= 4515,
    VSUBSDrm	= 4516,
    VSUBSDrm_Int	= 4517,
    VSUBSDrr	= 4518,
    VSUBSDrr_Int	= 4519,
    VSUBSSrm	= 4520,
    VSUBSSrm_Int	= 4521,
    VSUBSSrr	= 4522,
    VSUBSSrr_Int	= 4523,
    VTESTPDYrm	= 4524,
    VTESTPDYrr	= 4525,
    VTESTPDrm	= 4526,
    VTESTPDrr	= 4527,
    VTESTPSYrm	= 4528,
    VTESTPSYrr	= 4529,
    VTESTPSrm	= 4530,
    VTESTPSrr	= 4531,
    VUCOMISDrm	= 4532,
    VUCOMISDrr	= 4533,
    VUCOMISSrm	= 4534,
    VUCOMISSrr	= 4535,
    VUNPCKHPDYrm	= 4536,
    VUNPCKHPDYrr	= 4537,
    VUNPCKHPDrm	= 4538,
    VUNPCKHPDrr	= 4539,
    VUNPCKHPSYrm	= 4540,
    VUNPCKHPSYrr	= 4541,
    VUNPCKHPSrm	= 4542,
    VUNPCKHPSrr	= 4543,
    VUNPCKLPDYrm	= 4544,
    VUNPCKLPDYrr	= 4545,
    VUNPCKLPDrm	= 4546,
    VUNPCKLPDrr	= 4547,
    VUNPCKLPSYrm	= 4548,
    VUNPCKLPSYrr	= 4549,
    VUNPCKLPSrm	= 4550,
    VUNPCKLPSrr	= 4551,
    VXORPDYrm	= 4552,
    VXORPDYrr	= 4553,
    VXORPDrm	= 4554,
    VXORPDrr	= 4555,
    VXORPSYrm	= 4556,
    VXORPSYrr	= 4557,
    VXORPSrm	= 4558,
    VXORPSrr	= 4559,
    VZEROALL	= 4560,
    VZEROUPPER	= 4561,
    V_SET0	= 4562,
    V_SETALLONES	= 4563,
    W64ALLOCA	= 4564,
    WAIT	= 4565,
    WBINVD	= 4566,
    WIN_ALLOCA	= 4567,
    WIN_FTOL_32	= 4568,
    WIN_FTOL_64	= 4569,
    WRFSBASE	= 4570,
    WRFSBASE64	= 4571,
    WRGSBASE	= 4572,
    WRGSBASE64	= 4573,
    WRMSR	= 4574,
    XABORT	= 4575,
    XACQUIRE_PREFIX	= 4576,
    XADD16rm	= 4577,
    XADD16rr	= 4578,
    XADD32rm	= 4579,
    XADD32rr	= 4580,
    XADD64rm	= 4581,
    XADD64rr	= 4582,
    XADD8rm	= 4583,
    XADD8rr	= 4584,
    XBEGIN	= 4585,
    XBEGIN_4	= 4586,
    XCHG16ar	= 4587,
    XCHG16rm	= 4588,
    XCHG16rr	= 4589,
    XCHG32ar	= 4590,
    XCHG32ar64	= 4591,
    XCHG32rm	= 4592,
    XCHG32rr	= 4593,
    XCHG64ar	= 4594,
    XCHG64rm	= 4595,
    XCHG64rr	= 4596,
    XCHG8rm	= 4597,
    XCHG8rr	= 4598,
    XCH_F	= 4599,
    XCRYPTCBC	= 4600,
    XCRYPTCFB	= 4601,
    XCRYPTCTR	= 4602,
    XCRYPTECB	= 4603,
    XCRYPTOFB	= 4604,
    XEND	= 4605,
    XGETBV	= 4606,
    XLAT	= 4607,
    XOR16i16	= 4608,
    XOR16mi	= 4609,
    XOR16mi8	= 4610,
    XOR16mr	= 4611,
    XOR16ri	= 4612,
    XOR16ri8	= 4613,
    XOR16rm	= 4614,
    XOR16rr	= 4615,
    XOR16rr_REV	= 4616,
    XOR32i32	= 4617,
    XOR32mi	= 4618,
    XOR32mi8	= 4619,
    XOR32mr	= 4620,
    XOR32ri	= 4621,
    XOR32ri8	= 4622,
    XOR32rm	= 4623,
    XOR32rr	= 4624,
    XOR32rr_REV	= 4625,
    XOR64i32	= 4626,
    XOR64mi32	= 4627,
    XOR64mi8	= 4628,
    XOR64mr	= 4629,
    XOR64ri32	= 4630,
    XOR64ri8	= 4631,
    XOR64rm	= 4632,
    XOR64rr	= 4633,
    XOR64rr_REV	= 4634,
    XOR8i8	= 4635,
    XOR8mi	= 4636,
    XOR8mr	= 4637,
    XOR8ri	= 4638,
    XOR8rm	= 4639,
    XOR8rr	= 4640,
    XOR8rr_REV	= 4641,
    XORPDrm	= 4642,
    XORPDrr	= 4643,
    XORPSrm	= 4644,
    XORPSrr	= 4645,
    XRELEASE_PREFIX	= 4646,
    XRSTOR	= 4647,
    XRSTOR64	= 4648,
    XSAVE	= 4649,
    XSAVE64	= 4650,
    XSAVEOPT	= 4651,
    XSAVEOPT64	= 4652,
    XSETBV	= 4653,
    XSHA1	= 4654,
    XSHA256	= 4655,
    XSTORE	= 4656,
    XTEST	= 4657,
    INSTRUCTION_LIST_END = 4658
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Descriptors                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { X86::FPSW, 0 };
static const uint16_t ImplicitList2[] = { X86::AX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList3[] = { X86::EFLAGS, 0 };
static const uint16_t ImplicitList4[] = { X86::EAX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList5[] = { X86::RAX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList6[] = { X86::AL, X86::EFLAGS, 0 };
static const uint16_t ImplicitList7[] = { X86::AX, 0 };
static const uint16_t ImplicitList8[] = { X86::EAX, 0 };
static const uint16_t ImplicitList9[] = { X86::RAX, 0 };
static const uint16_t ImplicitList10[] = { X86::AL, 0 };
static const uint16_t ImplicitList11[] = { X86::ESP, 0 };
static const uint16_t ImplicitList12[] = { X86::ESP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList13[] = { X86::RSP, 0 };
static const uint16_t ImplicitList14[] = { X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList15[] = { X86::EFLAGS, X86::EAX, X86::EDX, 0 };
static const uint16_t ImplicitList16[] = { X86::EFLAGS, X86::AX, 0 };
static const uint16_t ImplicitList17[] = { X86::EFLAGS, X86::EAX, 0 };
static const uint16_t ImplicitList18[] = { X86::EFLAGS, X86::RAX, 0 };
static const uint16_t ImplicitList19[] = { X86::EFLAGS, X86::AL, 0 };
static const uint16_t ImplicitList20[] = { X86::XMM0, 0 };
static const uint16_t ImplicitList21[] = { X86::EAX, X86::EDX, 0 };
static const uint16_t ImplicitList22[] = { X86::RAX, X86::RBX, X86::RCX, X86::RDX, 0 };
static const uint16_t ImplicitList23[] = { X86::RAX, X86::RDX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList24[] = { X86::EAX, X86::EBX, X86::ECX, X86::EDX, 0 };
static const uint16_t ImplicitList25[] = { X86::EAX, X86::EDX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList26[] = { X86::EFLAGS, X86::FPSW, 0 };
static const uint16_t ImplicitList27[] = { X86::RAX, X86::RDX, 0 };
static const uint16_t ImplicitList28[] = { X86::AX, X86::DX, 0 };
static const uint16_t ImplicitList29[] = { X86::AX, X86::DX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList30[] = { X86::AL, X86::AH, X86::EFLAGS, 0 };
static const uint16_t ImplicitList31[] = { X86::AL, X86::EFLAGS, X86::AX, 0 };
static const uint16_t ImplicitList32[] = { X86::DX, 0 };
static const uint16_t ImplicitList33[] = { X86::EAX, X86::ECX, 0 };
static const uint16_t ImplicitList34[] = { X86::RAX, X86::ECX, 0 };
static const uint16_t ImplicitList35[] = { X86::CX, 0 };
static const uint16_t ImplicitList36[] = { X86::ECX, 0 };
static const uint16_t ImplicitList37[] = { X86::RCX, 0 };
static const uint16_t ImplicitList38[] = { X86::AH, 0 };
static const uint16_t ImplicitList39[] = { X86::EBP, X86::ESP, 0 };
static const uint16_t ImplicitList40[] = { X86::RBP, X86::RSP, 0 };
static const uint16_t ImplicitList41[] = { X86::EDI, 0 };
static const uint16_t ImplicitList42[] = { X86::RDI, 0 };
static const uint16_t ImplicitList43[] = { X86::EAX, X86::ECX, X86::EDX, 0 };
static const uint16_t ImplicitList44[] = { X86::RAX, X86::RSI, 0 };
static const uint16_t ImplicitList45[] = { X86::RAX, X86::RDX, X86::RSI, 0 };
static const uint16_t ImplicitList46[] = { X86::EDI, X86::ESI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList47[] = { X86::EDI, X86::ESI, 0 };
static const uint16_t ImplicitList48[] = { X86::EDX, 0 };
static const uint16_t ImplicitList49[] = { X86::RDX, 0 };
static const uint16_t ImplicitList50[] = { X86::ECX, X86::EAX, 0 };
static const uint16_t ImplicitList51[] = { X86::DX, X86::AX, 0 };
static const uint16_t ImplicitList52[] = { X86::DX, X86::EAX, 0 };
static const uint16_t ImplicitList53[] = { X86::DX, X86::AL, 0 };
static const uint16_t ImplicitList54[] = { X86::ECX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList55[] = { X86::XMM0, X86::EFLAGS, 0 };
static const uint16_t ImplicitList56[] = { X86::EDI, X86::ESI, X86::EBP, X86::EBX, X86::EDX, X86::ECX, X86::EAX, X86::ESP, 0 };
static const uint16_t ImplicitList57[] = { X86::CL, 0 };
static const uint16_t ImplicitList58[] = { X86::RAX, X86::RCX, X86::RDX, 0 };
static const uint16_t ImplicitList59[] = { X86::ECX, X86::EDI, X86::ESI, 0 };
static const uint16_t ImplicitList60[] = { X86::RCX, X86::RDI, X86::RSI, 0 };
static const uint16_t ImplicitList61[] = { X86::AL, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList62[] = { X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList63[] = { X86::AL, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList64[] = { X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList65[] = { X86::EAX, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList66[] = { X86::RAX, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList67[] = { X86::AX, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList68[] = { X86::AX, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList69[] = { X86::EAX, X86::ESP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList70[] = { X86::RAX, X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList71[] = { X86::AL, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList72[] = { X86::EAX, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList73[] = { X86::RAX, X86::RCX, X86::RDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList74[] = { X86::AX, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList75[] = { X86::EAX, X86::ECX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList76[] = { X86::RSP, X86::RDI, 0 };
static const uint16_t ImplicitList77[] = { X86::EAX, X86::ECX, X86::EDX, X86::FP0, X86::FP1, X86::FP2, X86::FP3, X86::FP4, X86::FP5, X86::FP6, X86::ST0, X86::MM0, X86::MM1, X86::MM2, X86::MM3, X86::MM4, X86::MM5, X86::MM6, X86::MM7, X86::XMM0, X86::XMM1, X86::XMM2, X86::XMM3, X86::XMM4, X86::XMM5, X86::XMM6, X86::XMM7, X86::XMM8, X86::XMM9, X86::XMM10, X86::XMM11, X86::XMM12, X86::XMM13, X86::XMM14, X86::XMM15, X86::EFLAGS, 0 };
static const uint16_t ImplicitList78[] = { X86::RAX, X86::RCX, X86::RDX, X86::RSI, X86::RDI, X86::R8, X86::R9, X86::R10, X86::R11, X86::FP0, X86::FP1, X86::FP2, X86::FP3, X86::FP4, X86::FP5, X86::FP6, X86::ST0, X86::ST1, X86::MM0, X86::MM1, X86::MM2, X86::MM3, X86::MM4, X86::MM5, X86::MM6, X86::MM7, X86::XMM0, X86::XMM1, X86::XMM2, X86::XMM3, X86::XMM4, X86::XMM5, X86::XMM6, X86::XMM7, X86::XMM8, X86::XMM9, X86::XMM10, X86::XMM11, X86::XMM12, X86::XMM13, X86::XMM14, X86::XMM15, X86::EFLAGS, 0 };
static const uint16_t ImplicitList79[] = { X86::ST0, 0 };
static const uint16_t ImplicitList80[] = { X86::YMM0, X86::YMM1, X86::YMM2, X86::YMM3, X86::YMM4, X86::YMM5, X86::YMM6, X86::YMM7, X86::YMM8, X86::YMM9, X86::YMM10, X86::YMM11, X86::YMM12, X86::YMM13, X86::YMM14, X86::YMM15, 0 };
static const uint16_t ImplicitList81[] = { X86::RAX, X86::R10, X86::R11, X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList82[] = { X86::EAX, X86::EDX, X86::ECX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList83[] = { X86::RBX, X86::RDX, X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList84[] = { X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList85[] = { X86::RDX, X86::RAX, 0 };
static const uint16_t ImplicitList86[] = { X86::RDX, X86::RAX, X86::RCX, 0 };
static const uint16_t ImplicitList87[] = { X86::RAX, X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList88[] = { X86::RDX, X86::RDI, 0 };
static const uint16_t ImplicitList89[] = { X86::RAX, X86::RDI, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { X86::RSTRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo67[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo68[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo111[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo112[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { X86::VK8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { X86::GR64_NOSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { X86::GR64_NOSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { X86::GR32_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { X86::GR32_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK8WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK8WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { X86::VK8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { X86::VK8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo268[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo269[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo271[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo272[] = { { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo273[] = { { X86::VR256XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo274[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo275[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo276[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo277[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo278[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo279[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo280[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo281[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo282[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo283[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo284[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo285[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo286[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo287[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo288[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo289[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo290[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo291[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo292[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, (1 << MCOI::EARLY_CLOBBER) }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, (1 << MCOI::EARLY_CLOBBER) }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo293[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, (1 << MCOI::EARLY_CLOBBER) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, (1 << MCOI::EARLY_CLOBBER) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo294[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, (1 << MCOI::EARLY_CLOBBER) }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, (1 << MCOI::EARLY_CLOBBER) }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo295[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, (1 << MCOI::EARLY_CLOBBER) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, (1 << MCOI::EARLY_CLOBBER) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo296[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo297[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo298[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo299[] = { { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo300[] = { { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo301[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo302[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo303[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo304[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo305[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VK8WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo306[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo307[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VK8WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo308[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VK16WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo309[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VK16WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo310[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo311[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo312[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo313[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo314[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo315[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo316[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo317[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo318[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo319[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo320[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK8WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo321[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK8WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128XRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo322[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VK8WMRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo323[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo324[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo325[] = { { X86::VK16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo326[] = { { X86::VK8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo327[] = { { X86::VK8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo328[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo329[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo330[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo331[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo332[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo333[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo334[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo335[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo336[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo337[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo338[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo339[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo340[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo341[] = { { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR512RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo342[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo343[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo344[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo345[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo346[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo347[] = { { X86::GR32_NOAXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc X86Insts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #16 = LIFETIME_END
  { 17,	0,	0,	1,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6e000001ULL, NULL, NULL, 0 },  // Inst #17 = AAA
  { 18,	1,	0,	2,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1aa004001ULL, NULL, NULL, OperandInfo2 },  // Inst #18 = AAD8i8
  { 19,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a8004001ULL, NULL, NULL, OperandInfo2 },  // Inst #19 = AAM8i8
  { 20,	0,	0,	4,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7e000001ULL, NULL, NULL, 0 },  // Inst #20 = AAS
  { 21,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c2000401ULL, NULL, ImplicitList1, 0 },  // Inst #21 = ABS_F
  { 22,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #22 = ABS_Fp32
  { 23,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #23 = ABS_Fp64
  { 24,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #24 = ABS_Fp80
  { 25,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #25 = ACQUIRE_MOV16rm
  { 26,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #26 = ACQUIRE_MOV32rm
  { 27,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #27 = ACQUIRE_MOV64rm
  { 28,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #28 = ACQUIRE_MOV8rm
  { 29,	1,	0,	5,	0,	0, 0x2a00c041ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #29 = ADC16i16
  { 30,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05aULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #30 = ADC16mi
  { 31,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405aULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #31 = ADC16mi8
  { 32,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22000044ULL, ImplicitList3, ImplicitList3, OperandInfo16 },  // Inst #32 = ADC16mr
  { 33,	3,	1,	5,	0,	0, 0x10200c052ULL, ImplicitList3, ImplicitList3, OperandInfo17 },  // Inst #33 = ADC16ri
  { 34,	3,	1,	5,	0,	0, 0x106004052ULL, ImplicitList3, ImplicitList3, OperandInfo17 },  // Inst #34 = ADC16ri8
  { 35,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x26000046ULL, ImplicitList3, ImplicitList3, OperandInfo18 },  // Inst #35 = ADC16rm
  { 36,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x22000043ULL, ImplicitList3, ImplicitList3, OperandInfo19 },  // Inst #36 = ADC16rr
  { 37,	3,	1,	5,	0,	0, 0x26000045ULL, ImplicitList3, ImplicitList3, OperandInfo19 },  // Inst #37 = ADC16rr_REV
  { 38,	1,	0,	5,	0,	0, 0x2a014001ULL, ImplicitList4, ImplicitList4, OperandInfo2 },  // Inst #38 = ADC32i32
  { 39,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401aULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #39 = ADC32mi
  { 40,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401aULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #40 = ADC32mi8
  { 41,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22000004ULL, ImplicitList3, ImplicitList3, OperandInfo20 },  // Inst #41 = ADC32mr
  { 42,	3,	1,	5,	0,	0, 0x102014012ULL, ImplicitList3, ImplicitList3, OperandInfo21 },  // Inst #42 = ADC32ri
  { 43,	3,	1,	5,	0,	0, 0x106004012ULL, ImplicitList3, ImplicitList3, OperandInfo21 },  // Inst #43 = ADC32ri8
  { 44,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x26000006ULL, ImplicitList3, ImplicitList3, OperandInfo22 },  // Inst #44 = ADC32rm
  { 45,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x22000003ULL, ImplicitList3, ImplicitList3, OperandInfo23 },  // Inst #45 = ADC32rr
  { 46,	3,	1,	5,	0,	0, 0x26000005ULL, ImplicitList3, ImplicitList3, OperandInfo23 },  // Inst #46 = ADC32rr_REV
  { 47,	1,	0,	5,	0,	0, 0x2a016001ULL, ImplicitList5, ImplicitList5, OperandInfo2 },  // Inst #47 = ADC64i32
  { 48,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601aULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #48 = ADC64mi32
  { 49,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601aULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #49 = ADC64mi8
  { 50,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22002004ULL, ImplicitList3, ImplicitList3, OperandInfo24 },  // Inst #50 = ADC64mr
  { 51,	3,	1,	5,	0,	0, 0x102016012ULL, ImplicitList3, ImplicitList3, OperandInfo25 },  // Inst #51 = ADC64ri32
  { 52,	3,	1,	5,	0,	0, 0x106006012ULL, ImplicitList3, ImplicitList3, OperandInfo25 },  // Inst #52 = ADC64ri8
  { 53,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x26002006ULL, ImplicitList3, ImplicitList3, OperandInfo26 },  // Inst #53 = ADC64rm
  { 54,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x22002003ULL, ImplicitList3, ImplicitList3, OperandInfo27 },  // Inst #54 = ADC64rr
  { 55,	3,	1,	5,	0,	0, 0x26002005ULL, ImplicitList3, ImplicitList3, OperandInfo27 },  // Inst #55 = ADC64rr_REV
  { 56,	1,	0,	5,	0,	0, 0x28004001ULL, ImplicitList6, ImplicitList6, OperandInfo2 },  // Inst #56 = ADC8i8
  { 57,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401aULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #57 = ADC8mi
  { 58,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x20000004ULL, ImplicitList3, ImplicitList3, OperandInfo28 },  // Inst #58 = ADC8mr
  { 59,	3,	1,	5,	0,	0, 0x100004012ULL, ImplicitList3, ImplicitList3, OperandInfo29 },  // Inst #59 = ADC8ri
  { 60,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x24000006ULL, ImplicitList3, ImplicitList3, OperandInfo30 },  // Inst #60 = ADC8rm
  { 61,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x20000003ULL, ImplicitList3, ImplicitList3, OperandInfo31 },  // Inst #61 = ADC8rr
  { 62,	3,	1,	5,	0,	0, 0x24000005ULL, ImplicitList3, ImplicitList3, OperandInfo31 },  // Inst #62 = ADC8rr_REV
  { 63,	6,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x1ec000d46ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #63 = ADCX32rm
  { 64,	2,	1,	5,	0,	0, 0x1ec000d45ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #64 = ADCX32rr
  { 65,	6,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x1ec002d46ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #65 = ADCX64rm
  { 66,	2,	1,	5,	0,	0, 0x1ec002d45ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #66 = ADCX64rr
  { 67,	1,	0,	5,	0,	0, 0xa00c041ULL, ImplicitList7, ImplicitList2, OperandInfo2 },  // Inst #67 = ADD16i16
  { 68,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c058ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #68 = ADD16mi
  { 69,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004058ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #69 = ADD16mi8
  { 70,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2000044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #70 = ADD16mr
  { 71,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x10200c050ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #71 = ADD16ri
  { 72,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106004050ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #72 = ADD16ri8
  { 73,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #73 = ADD16ri8_DB
  { 74,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #74 = ADD16ri_DB
  { 75,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x6000046ULL, NULL, ImplicitList3, OperandInfo18 },  // Inst #75 = ADD16rm
  { 76,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2000043ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #76 = ADD16rr
  { 77,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #77 = ADD16rr_DB
  { 78,	3,	1,	5,	0,	0, 0x6000045ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #78 = ADD16rr_REV
  { 79,	1,	0,	5,	0,	0, 0xa014001ULL, ImplicitList8, ImplicitList4, OperandInfo2 },  // Inst #79 = ADD32i32
  { 80,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102014018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #80 = ADD32mi
  { 81,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #81 = ADD32mi8
  { 82,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2000004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #82 = ADD32mr
  { 83,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x102014010ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #83 = ADD32ri
  { 84,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106004010ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #84 = ADD32ri8
  { 85,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #85 = ADD32ri8_DB
  { 86,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #86 = ADD32ri_DB
  { 87,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x6000006ULL, NULL, ImplicitList3, OperandInfo22 },  // Inst #87 = ADD32rm
  { 88,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2000003ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #88 = ADD32rr
  { 89,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #89 = ADD32rr_DB
  { 90,	3,	1,	5,	0,	0, 0x6000005ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #90 = ADD32rr_REV
  { 91,	1,	0,	5,	0,	0, 0xa016001ULL, ImplicitList9, ImplicitList5, OperandInfo2 },  // Inst #91 = ADD64i32
  { 92,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102016018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #92 = ADD64mi32
  { 93,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106006018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #93 = ADD64mi8
  { 94,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2002004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #94 = ADD64mr
  { 95,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x102016010ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #95 = ADD64ri32
  { 96,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #96 = ADD64ri32_DB
  { 97,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106006010ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #97 = ADD64ri8
  { 98,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #98 = ADD64ri8_DB
  { 99,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x6002006ULL, NULL, ImplicitList3, OperandInfo26 },  // Inst #99 = ADD64rm
  { 100,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2002003ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #100 = ADD64rr
  { 101,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #101 = ADD64rr_DB
  { 102,	3,	1,	5,	0,	0, 0x6002005ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #102 = ADD64rr_REV
  { 103,	1,	0,	5,	0,	0, 0x8004001ULL, ImplicitList10, ImplicitList6, OperandInfo2 },  // Inst #103 = ADD8i8
  { 104,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x100004018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #104 = ADD8mi
  { 105,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #105 = ADD8mr
  { 106,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x100004010ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #106 = ADD8ri
  { 107,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x4000006ULL, NULL, ImplicitList3, OperandInfo30 },  // Inst #107 = ADD8rm
  { 108,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x3ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #108 = ADD8rr
  { 109,	3,	1,	5,	0,	0, 0x4000005ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #109 = ADD8rr_REV
  { 110,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xb1000146ULL, NULL, NULL, OperandInfo34 },  // Inst #110 = ADDPDrm
  { 111,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xb1000145ULL, NULL, NULL, OperandInfo35 },  // Inst #111 = ADDPDrr
  { 112,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xb0800106ULL, NULL, NULL, OperandInfo34 },  // Inst #112 = ADDPSrm
  { 113,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xb0800105ULL, NULL, NULL, OperandInfo35 },  // Inst #113 = ADDPSrr
  { 114,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xb0000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #114 = ADDSDrm
  { 115,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xb0000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #115 = ADDSDrm_Int
  { 116,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0xb0000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #116 = ADDSDrr
  { 117,	3,	1,	15,	0,	0, 0xb0000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #117 = ADDSDrr_Int
  { 118,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb0000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #118 = ADDSSrm
  { 119,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb0000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #119 = ADDSSrm_Int
  { 120,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0xb0000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #120 = ADDSSrr
  { 121,	3,	1,	17,	0,	0, 0xb0000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #121 = ADDSSrr_Int
  { 122,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1a1000146ULL, NULL, NULL, OperandInfo34 },  // Inst #122 = ADDSUBPDrm
  { 123,	3,	1,	11,	0,	0, 0x1a1000145ULL, NULL, NULL, OperandInfo35 },  // Inst #123 = ADDSUBPDrr
  { 124,	7,	1,	19,	0,	0|(1<<MCID::MayLoad), 0x1a0800b06ULL, NULL, NULL, OperandInfo34 },  // Inst #124 = ADDSUBPSrm
  { 125,	3,	1,	13,	0,	0, 0x1a0800b05ULL, NULL, NULL, OperandInfo35 },  // Inst #125 = ADDSUBPSrr
  { 126,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b0000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #126 = ADD_F32m
  { 127,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b8000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #127 = ADD_F64m
  { 128,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #128 = ADD_FI16m
  { 129,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b4000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #129 = ADD_FI32m
  { 130,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000902ULL, NULL, NULL, OperandInfo41 },  // Inst #130 = ADD_FPrST0
  { 131,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000302ULL, NULL, NULL, OperandInfo41 },  // Inst #131 = ADD_FST0r
  { 132,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #132 = ADD_Fp32
  { 133,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #133 = ADD_Fp32m
  { 134,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #134 = ADD_Fp64
  { 135,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #135 = ADD_Fp64m
  { 136,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #136 = ADD_Fp64m32
  { 137,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #137 = ADD_Fp80
  { 138,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #138 = ADD_Fp80m32
  { 139,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #139 = ADD_Fp80m64
  { 140,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #140 = ADD_FpI16m32
  { 141,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #141 = ADD_FpI16m64
  { 142,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #142 = ADD_FpI16m80
  { 143,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #143 = ADD_FpI32m32
  { 144,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #144 = ADD_FpI32m64
  { 145,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #145 = ADD_FpI32m80
  { 146,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000702ULL, NULL, NULL, OperandInfo41 },  // Inst #146 = ADD_FrST0
  { 147,	1,	0,	0,	0,	0, 0x0ULL, ImplicitList11, ImplicitList12, OperandInfo2 },  // Inst #147 = ADJCALLSTACKDOWN32
  { 148,	1,	0,	0,	0,	0, 0x0ULL, ImplicitList13, ImplicitList14, OperandInfo2 },  // Inst #148 = ADJCALLSTACKDOWN64
  { 149,	2,	0,	0,	0,	0, 0x0ULL, ImplicitList11, ImplicitList12, OperandInfo48 },  // Inst #149 = ADJCALLSTACKUP32
  { 150,	2,	0,	0,	0,	0, 0x0ULL, ImplicitList13, ImplicitList14, OperandInfo48 },  // Inst #150 = ADJCALLSTACKUP64
  { 151,	6,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x1ec001206ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #151 = ADOX32rm
  { 152,	2,	1,	5,	0,	0, 0x1ec001205ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #152 = ADOX32rr
  { 153,	6,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x1ec003206ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #153 = ADOX64rm
  { 154,	2,	1,	5,	0,	0, 0x1ec003205ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #154 = ADOX64rr
  { 155,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1bf800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #155 = AESDECLASTrm
  { 156,	3,	1,	0,	0,	0, 0x1bf800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #156 = AESDECLASTrr
  { 157,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1bd800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #157 = AESDECrm
  { 158,	3,	1,	0,	0,	0, 0x1bd800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #158 = AESDECrr
  { 159,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1bb800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #159 = AESENCLASTrm
  { 160,	3,	1,	0,	0,	0, 0x1bb800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #160 = AESENCLASTrr
  { 161,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1b9800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #161 = AESENCrm
  { 162,	3,	1,	0,	0,	0, 0x1b9800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #162 = AESENCrr
  { 163,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1b7800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #163 = AESIMCrm
  { 164,	2,	1,	0,	0,	0, 0x1b7800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #164 = AESIMCrr
  { 165,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1bf804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #165 = AESKEYGENASSIST128rm
  { 166,	3,	1,	0,	0,	0, 0x1bf804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #166 = AESKEYGENASSIST128rr
  { 167,	1,	0,	5,	0,	0, 0x4a00c041ULL, ImplicitList7, ImplicitList2, OperandInfo2 },  // Inst #167 = AND16i16
  { 168,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #168 = AND16mi
  { 169,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #169 = AND16mi8
  { 170,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42000044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #170 = AND16mr
  { 171,	3,	1,	5,	0,	0, 0x10200c054ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #171 = AND16ri
  { 172,	3,	1,	5,	0,	0, 0x106004054ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #172 = AND16ri8
  { 173,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x46000046ULL, NULL, ImplicitList3, OperandInfo18 },  // Inst #173 = AND16rm
  { 174,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x42000043ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #174 = AND16rr
  { 175,	3,	1,	5,	0,	0, 0x46000045ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #175 = AND16rr_REV
  { 176,	1,	0,	5,	0,	0, 0x4a014001ULL, ImplicitList8, ImplicitList4, OperandInfo2 },  // Inst #176 = AND32i32
  { 177,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #177 = AND32mi
  { 178,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #178 = AND32mi8
  { 179,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42000004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #179 = AND32mr
  { 180,	3,	1,	5,	0,	0, 0x102014014ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #180 = AND32ri
  { 181,	3,	1,	5,	0,	0, 0x106004014ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #181 = AND32ri8
  { 182,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x46000006ULL, NULL, ImplicitList3, OperandInfo22 },  // Inst #182 = AND32rm
  { 183,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x42000003ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #183 = AND32rr
  { 184,	3,	1,	5,	0,	0, 0x46000005ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #184 = AND32rr_REV
  { 185,	1,	0,	5,	0,	0, 0x4a016001ULL, ImplicitList9, ImplicitList5, OperandInfo2 },  // Inst #185 = AND64i32
  { 186,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #186 = AND64mi32
  { 187,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #187 = AND64mi8
  { 188,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42002004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #188 = AND64mr
  { 189,	3,	1,	5,	0,	0, 0x102016014ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #189 = AND64ri32
  { 190,	3,	1,	5,	0,	0, 0x106006014ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #190 = AND64ri8
  { 191,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x46002006ULL, NULL, ImplicitList3, OperandInfo26 },  // Inst #191 = AND64rm
  { 192,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x42002003ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #192 = AND64rr
  { 193,	3,	1,	5,	0,	0, 0x46002005ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #193 = AND64rr_REV
  { 194,	1,	0,	5,	0,	0, 0x48004001ULL, ImplicitList10, ImplicitList6, OperandInfo2 },  // Inst #194 = AND8i8
  { 195,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #195 = AND8mi
  { 196,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x40000004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #196 = AND8mr
  { 197,	3,	1,	5,	0,	0, 0x100004014ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #197 = AND8ri
  { 198,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x44000006ULL, NULL, ImplicitList3, OperandInfo30 },  // Inst #198 = AND8rm
  { 199,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x40000003ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #199 = AND8rr
  { 200,	3,	1,	5,	0,	0, 0x44000005ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #200 = AND8rr_REV
  { 201,	7,	1,	20,	0,	0|(1<<MCID::MayLoad), 0xbe4000d06ULL, NULL, ImplicitList3, OperandInfo53 },  // Inst #201 = ANDN32rm
  { 202,	3,	1,	5,	0,	0, 0xbe4000d05ULL, NULL, ImplicitList3, OperandInfo54 },  // Inst #202 = ANDN32rr
  { 203,	7,	1,	20,	0,	0|(1<<MCID::MayLoad), 0xfe4000d06ULL, NULL, ImplicitList3, OperandInfo55 },  // Inst #203 = ANDN64rm
  { 204,	3,	1,	5,	0,	0, 0xfe4000d05ULL, NULL, ImplicitList3, OperandInfo56 },  // Inst #204 = ANDN64rr
  { 205,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xab000146ULL, NULL, NULL, OperandInfo34 },  // Inst #205 = ANDNPDrm
  { 206,	3,	1,	22,	0,	0, 0xab000145ULL, NULL, NULL, OperandInfo35 },  // Inst #206 = ANDNPDrr
  { 207,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaa800106ULL, NULL, NULL, OperandInfo34 },  // Inst #207 = ANDNPSrm
  { 208,	3,	1,	22,	0,	0, 0xaa800105ULL, NULL, NULL, OperandInfo35 },  // Inst #208 = ANDNPSrr
  { 209,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xa9000146ULL, NULL, NULL, OperandInfo34 },  // Inst #209 = ANDPDrm
  { 210,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xa9000145ULL, NULL, NULL, OperandInfo35 },  // Inst #210 = ANDPDrr
  { 211,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xa8800106ULL, NULL, NULL, OperandInfo34 },  // Inst #211 = ANDPSrm
  { 212,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xa8800105ULL, NULL, NULL, OperandInfo35 },  // Inst #212 = ANDPSrr
  { 213,	6,	0,	23,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc6000004ULL, NULL, NULL, OperandInfo16 },  // Inst #213 = ARPL16mr
  { 214,	2,	1,	24,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc6000003ULL, NULL, NULL, OperandInfo57 },  // Inst #214 = ARPL16rr
  { 215,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #215 = ATOMADD6432
  { 216,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList16, OperandInfo59 },  // Inst #216 = ATOMAND16
  { 217,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList17, OperandInfo60 },  // Inst #217 = ATOMAND32
  { 218,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList18, OperandInfo61 },  // Inst #218 = ATOMAND64
  { 219,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #219 = ATOMAND6432
  { 220,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList19, OperandInfo62 },  // Inst #220 = ATOMAND8
  { 221,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList16, OperandInfo59 },  // Inst #221 = ATOMMAX16
  { 222,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList17, OperandInfo60 },  // Inst #222 = ATOMMAX32
  { 223,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList18, OperandInfo61 },  // Inst #223 = ATOMMAX64
  { 224,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #224 = ATOMMAX6432
  { 225,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList19, OperandInfo62 },  // Inst #225 = ATOMMAX8
  { 226,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList16, OperandInfo59 },  // Inst #226 = ATOMMIN16
  { 227,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList17, OperandInfo60 },  // Inst #227 = ATOMMIN32
  { 228,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList18, OperandInfo61 },  // Inst #228 = ATOMMIN64
  { 229,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #229 = ATOMMIN6432
  { 230,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList19, OperandInfo62 },  // Inst #230 = ATOMMIN8
  { 231,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList16, OperandInfo59 },  // Inst #231 = ATOMNAND16
  { 232,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList17, OperandInfo60 },  // Inst #232 = ATOMNAND32
  { 233,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList18, OperandInfo61 },  // Inst #233 = ATOMNAND64
  { 234,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #234 = ATOMNAND6432
  { 235,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList19, OperandInfo62 },  // Inst #235 = ATOMNAND8
  { 236,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList16, OperandInfo59 },  // Inst #236 = ATOMOR16
  { 237,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList17, OperandInfo60 },  // Inst #237 = ATOMOR32
  { 238,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList18, OperandInfo61 },  // Inst #238 = ATOMOR64
  { 239,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #239 = ATOMOR6432
  { 240,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList19, OperandInfo62 },  // Inst #240 = ATOMOR8
  { 241,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #241 = ATOMSUB6432
  { 242,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #242 = ATOMSWAP6432
  { 243,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList16, OperandInfo59 },  // Inst #243 = ATOMUMAX16
  { 244,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList17, OperandInfo60 },  // Inst #244 = ATOMUMAX32
  { 245,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList18, OperandInfo61 },  // Inst #245 = ATOMUMAX64
  { 246,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #246 = ATOMUMAX6432
  { 247,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList19, OperandInfo62 },  // Inst #247 = ATOMUMAX8
  { 248,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList16, OperandInfo59 },  // Inst #248 = ATOMUMIN16
  { 249,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList17, OperandInfo60 },  // Inst #249 = ATOMUMIN32
  { 250,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList18, OperandInfo61 },  // Inst #250 = ATOMUMIN64
  { 251,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #251 = ATOMUMIN6432
  { 252,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList19, OperandInfo62 },  // Inst #252 = ATOMUMIN8
  { 253,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList16, OperandInfo59 },  // Inst #253 = ATOMXOR16
  { 254,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList17, OperandInfo60 },  // Inst #254 = ATOMXOR32
  { 255,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList18, OperandInfo61 },  // Inst #255 = ATOMXOR64
  { 256,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo58 },  // Inst #256 = ATOMXOR6432
  { 257,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList19, OperandInfo62 },  // Inst #257 = ATOMXOR8
  { 258,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #258 = AVX2_SETALLONES
  { 259,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #259 = AVX_SET0
  { 260,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x13ee000d06ULL, NULL, ImplicitList3, OperandInfo60 },  // Inst #260 = BEXTR32rm
  { 261,	3,	1,	0,	0,	0, 0x13ee000d05ULL, NULL, ImplicitList3, OperandInfo54 },  // Inst #261 = BEXTR32rr
  { 262,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17ee000d06ULL, NULL, ImplicitList3, OperandInfo61 },  // Inst #262 = BEXTR64rm
  { 263,	3,	1,	0,	0,	0, 0x17ee000d05ULL, NULL, ImplicitList3, OperandInfo56 },  // Inst #263 = BEXTR64rr
  { 264,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1b004e46ULL, NULL, NULL, OperandInfo64 },  // Inst #264 = BLENDPDrmi
  { 265,	4,	1,	0,	0,	0, 0x1b004e45ULL, NULL, NULL, OperandInfo65 },  // Inst #265 = BLENDPDrri
  { 266,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x18804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #266 = BLENDPSrmi
  { 267,	4,	1,	0,	0,	0, 0x18804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #267 = BLENDPSrri
  { 268,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2b000d46ULL, ImplicitList20, NULL, OperandInfo34 },  // Inst #268 = BLENDVPDrm0
  { 269,	3,	1,	0,	0,	0, 0x2b000d45ULL, ImplicitList20, NULL, OperandInfo35 },  // Inst #269 = BLENDVPDrr0
  { 270,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x28800d46ULL, ImplicitList20, NULL, OperandInfo34 },  // Inst #270 = BLENDVPSrm0
  { 271,	3,	1,	0,	0,	0, 0x28800d45ULL, ImplicitList20, NULL, OperandInfo35 },  // Inst #271 = BLENDVPSrr0
  { 272,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbe6000d1bULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #272 = BLSI32rm
  { 273,	2,	1,	0,	0,	0, 0xbe6000d13ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #273 = BLSI32rr
  { 274,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfe6000d1bULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #274 = BLSI64rm
  { 275,	2,	1,	0,	0,	0, 0xfe6000d13ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #275 = BLSI64rr
  { 276,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbe6000d1aULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #276 = BLSMSK32rm
  { 277,	2,	1,	0,	0,	0, 0xbe6000d12ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #277 = BLSMSK32rr
  { 278,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfe6000d1aULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #278 = BLSMSK64rm
  { 279,	2,	1,	0,	0,	0, 0xfe6000d12ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #279 = BLSMSK64rr
  { 280,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbe6000d19ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #280 = BLSR32rm
  { 281,	2,	1,	0,	0,	0, 0xbe6000d11ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #281 = BLSR32rr
  { 282,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfe6000d19ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #282 = BLSR64rm
  { 283,	2,	1,	0,	0,	0, 0xfe6000d11ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #283 = BLSR64rr
  { 284,	6,	1,	26,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc4000046ULL, NULL, NULL, OperandInfo11 },  // Inst #284 = BOUNDS16rm
  { 285,	6,	1,	26,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc4000006ULL, NULL, NULL, OperandInfo12 },  // Inst #285 = BOUNDS32rm
  { 286,	6,	1,	27,	0,	0|(1<<MCID::MayLoad), 0x178000146ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #286 = BSF16rm
  { 287,	2,	1,	28,	0,	0, 0x178000145ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #287 = BSF16rr
  { 288,	6,	1,	27,	0,	0|(1<<MCID::MayLoad), 0x178000106ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #288 = BSF32rm
  { 289,	2,	1,	28,	0,	0, 0x178000105ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #289 = BSF32rr
  { 290,	6,	1,	27,	0,	0|(1<<MCID::MayLoad), 0x178002106ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #290 = BSF64rm
  { 291,	2,	1,	28,	0,	0, 0x178002105ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #291 = BSF64rr
  { 292,	6,	1,	29,	0,	0|(1<<MCID::MayLoad), 0x17a000146ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #292 = BSR16rm
  { 293,	2,	1,	30,	0,	0, 0x17a000145ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #293 = BSR16rr
  { 294,	6,	1,	29,	0,	0|(1<<MCID::MayLoad), 0x17a000106ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #294 = BSR32rm
  { 295,	2,	1,	30,	0,	0, 0x17a000105ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #295 = BSR32rr
  { 296,	6,	1,	29,	0,	0|(1<<MCID::MayLoad), 0x17a002106ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #296 = BSR64rm
  { 297,	2,	1,	30,	0,	0, 0x17a002105ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #297 = BSR64rr
  { 298,	2,	1,	31,	0,	0, 0x190000102ULL, NULL, NULL, OperandInfo66 },  // Inst #298 = BSWAP32r
  { 299,	2,	1,	31,	0,	0, 0x190002102ULL, NULL, NULL, OperandInfo67 },  // Inst #299 = BSWAP64r
  { 300,	6,	0,	32,	0,	0|(1<<MCID::MayLoad), 0x17400415cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #300 = BT16mi8
  { 301,	6,	0,	33,	0,	0|(1<<MCID::MayLoad), 0x146000144ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #301 = BT16mr
  { 302,	2,	0,	34,	0,	0, 0x174004154ULL, NULL, ImplicitList3, OperandInfo68 },  // Inst #302 = BT16ri8
  { 303,	2,	0,	35,	0,	0, 0x146000143ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #303 = BT16rr
  { 304,	6,	0,	32,	0,	0|(1<<MCID::MayLoad), 0x17400411cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #304 = BT32mi8
  { 305,	6,	0,	33,	0,	0|(1<<MCID::MayLoad), 0x146000104ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #305 = BT32mr
  { 306,	2,	0,	34,	0,	0, 0x174004114ULL, NULL, ImplicitList3, OperandInfo69 },  // Inst #306 = BT32ri8
  { 307,	2,	0,	35,	0,	0, 0x146000103ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #307 = BT32rr
  { 308,	6,	0,	32,	0,	0|(1<<MCID::MayLoad), 0x17400611cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #308 = BT64mi8
  { 309,	6,	0,	33,	0,	0|(1<<MCID::MayLoad), 0x146002104ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #309 = BT64mr
  { 310,	2,	0,	34,	0,	0, 0x174006114ULL, NULL, ImplicitList3, OperandInfo70 },  // Inst #310 = BT64ri8
  { 311,	2,	0,	35,	0,	0, 0x146002103ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #311 = BT64rr
  { 312,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400415fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #312 = BTC16mi8
  { 313,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x176000144ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #313 = BTC16mr
  { 314,	2,	0,	38,	0,	0, 0x174004157ULL, NULL, ImplicitList3, OperandInfo68 },  // Inst #314 = BTC16ri8
  { 315,	2,	0,	39,	0,	0, 0x176000143ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #315 = BTC16rr
  { 316,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400411fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #316 = BTC32mi8
  { 317,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x176000104ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #317 = BTC32mr
  { 318,	2,	0,	38,	0,	0, 0x174004117ULL, NULL, ImplicitList3, OperandInfo69 },  // Inst #318 = BTC32ri8
  { 319,	2,	0,	39,	0,	0, 0x176000103ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #319 = BTC32rr
  { 320,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400611fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #320 = BTC64mi8
  { 321,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x176002104ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #321 = BTC64mr
  { 322,	2,	0,	38,	0,	0, 0x174006117ULL, NULL, ImplicitList3, OperandInfo70 },  // Inst #322 = BTC64ri8
  { 323,	2,	0,	39,	0,	0, 0x176002103ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #323 = BTC64rr
  { 324,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400415eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #324 = BTR16mi8
  { 325,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x166000144ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #325 = BTR16mr
  { 326,	2,	0,	38,	0,	0, 0x174004156ULL, NULL, ImplicitList3, OperandInfo68 },  // Inst #326 = BTR16ri8
  { 327,	2,	0,	39,	0,	0, 0x166000143ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #327 = BTR16rr
  { 328,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400411eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #328 = BTR32mi8
  { 329,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x166000104ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #329 = BTR32mr
  { 330,	2,	0,	38,	0,	0, 0x174004116ULL, NULL, ImplicitList3, OperandInfo69 },  // Inst #330 = BTR32ri8
  { 331,	2,	0,	39,	0,	0, 0x166000103ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #331 = BTR32rr
  { 332,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400611eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #332 = BTR64mi8
  { 333,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x166002104ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #333 = BTR64mr
  { 334,	2,	0,	38,	0,	0, 0x174006116ULL, NULL, ImplicitList3, OperandInfo70 },  // Inst #334 = BTR64ri8
  { 335,	2,	0,	9,	0,	0, 0x166002103ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #335 = BTR64rr
  { 336,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400415dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #336 = BTS16mi8
  { 337,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x156000144ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #337 = BTS16mr
  { 338,	2,	0,	38,	0,	0, 0x174004155ULL, NULL, ImplicitList3, OperandInfo68 },  // Inst #338 = BTS16ri8
  { 339,	2,	0,	39,	0,	0, 0x156000143ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #339 = BTS16rr
  { 340,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400411dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #340 = BTS32mi8
  { 341,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x156000104ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #341 = BTS32mr
  { 342,	2,	0,	38,	0,	0, 0x174004115ULL, NULL, ImplicitList3, OperandInfo69 },  // Inst #342 = BTS32ri8
  { 343,	2,	0,	39,	0,	0, 0x156000103ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #343 = BTS32rr
  { 344,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400611dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #344 = BTS64mi8
  { 345,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x156002104ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #345 = BTS64mr
  { 346,	2,	0,	38,	0,	0, 0x174006115ULL, NULL, ImplicitList3, OperandInfo70 },  // Inst #346 = BTS64ri8
  { 347,	2,	0,	39,	0,	0, 0x156002103ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #347 = BTS64rr
  { 348,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x13ea000d06ULL, NULL, ImplicitList3, OperandInfo60 },  // Inst #348 = BZHI32rm
  { 349,	3,	1,	0,	0,	0, 0x13ea000d05ULL, NULL, ImplicitList3, OperandInfo54 },  // Inst #349 = BZHI32rr
  { 350,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17ea000d06ULL, NULL, ImplicitList3, OperandInfo61 },  // Inst #350 = BZHI64rm
  { 351,	3,	1,	0,	0,	0, 0x17ea000d05ULL, NULL, ImplicitList3, OperandInfo56 },  // Inst #351 = BZHI64rr
  { 352,	5,	0,	40,	0,	0|(1<<MCID::Call)|(1<<MCID::MayLoad), 0x1fe00001aULL, ImplicitList11, NULL, OperandInfo40 },  // Inst #352 = CALL32m
  { 353,	1,	0,	41,	0,	0|(1<<MCID::Call), 0x1fe000012ULL, ImplicitList11, NULL, OperandInfo71 },  // Inst #353 = CALL32r
  { 354,	5,	0,	42,	0,	0|(1<<MCID::Call)|(1<<MCID::MayLoad), 0x1fe00001aULL, ImplicitList13, NULL, OperandInfo40 },  // Inst #354 = CALL64m
  { 355,	1,	0,	41,	0,	0|(1<<MCID::Call), 0x1d0018001ULL, ImplicitList13, NULL, OperandInfo72 },  // Inst #355 = CALL64pcrel32
  { 356,	1,	0,	41,	0,	0|(1<<MCID::Call), 0x1fe000012ULL, ImplicitList13, NULL, OperandInfo73 },  // Inst #356 = CALL64r
  { 357,	1,	0,	0,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1d0010041ULL, ImplicitList11, NULL, OperandInfo72 },  // Inst #357 = CALLpcrel16
  { 358,	1,	0,	41,	0,	0|(1<<MCID::Call), 0x1d0018001ULL, ImplicitList11, NULL, OperandInfo72 },  // Inst #358 = CALLpcrel32
  { 359,	0,	0,	0,	0,	0, 0x130000041ULL, ImplicitList10, ImplicitList7, 0 },  // Inst #359 = CBW
  { 360,	0,	0,	0,	0,	0, 0x132000001ULL, ImplicitList8, ImplicitList21, 0 },  // Inst #360 = CDQ
  { 361,	0,	0,	0,	0,	0, 0x130002001ULL, ImplicitList8, ImplicitList9, 0 },  // Inst #361 = CDQE
  { 362,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000401ULL, NULL, ImplicitList1, 0 },  // Inst #362 = CHS_F
  { 363,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #363 = CHS_Fp32
  { 364,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #364 = CHS_Fp64
  { 365,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #365 = CHS_Fp80
  { 366,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000127ULL, ImplicitList3, ImplicitList3, 0 },  // Inst #366 = CLAC
  { 367,	0,	0,	43,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000001ULL, NULL, NULL, 0 },  // Inst #367 = CLC
  { 368,	0,	0,	44,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f8000001ULL, NULL, NULL, 0 },  // Inst #368 = CLD
  { 369,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c00011fULL, NULL, NULL, OperandInfo40 },  // Inst #369 = CLFLUSH
  { 370,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000139ULL, NULL, NULL, 0 },  // Inst #370 = CLGI
  { 371,	0,	0,	46,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f4000001ULL, NULL, NULL, 0 },  // Inst #371 = CLI
  { 372,	0,	0,	47,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000101ULL, NULL, NULL, 0 },  // Inst #372 = CLTS
  { 373,	0,	0,	48,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ea000001ULL, NULL, NULL, 0 },  // Inst #373 = CMC
  { 374,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x8e000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #374 = CMOVA16rm
  { 375,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x8e000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #375 = CMOVA16rr
  { 376,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8e000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #376 = CMOVA32rm
  { 377,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8e000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #377 = CMOVA32rr
  { 378,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8e002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #378 = CMOVA64rm
  { 379,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8e002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #379 = CMOVA64rr
  { 380,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x86000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #380 = CMOVAE16rm
  { 381,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x86000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #381 = CMOVAE16rr
  { 382,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x86000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #382 = CMOVAE32rm
  { 383,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x86000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #383 = CMOVAE32rr
  { 384,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x86002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #384 = CMOVAE64rm
  { 385,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x86002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #385 = CMOVAE64rr
  { 386,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x84000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #386 = CMOVB16rm
  { 387,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x84000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #387 = CMOVB16rr
  { 388,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x84000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #388 = CMOVB32rm
  { 389,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x84000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #389 = CMOVB32rr
  { 390,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x84002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #390 = CMOVB64rm
  { 391,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x84002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #391 = CMOVB64rr
  { 392,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x8c000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #392 = CMOVBE16rm
  { 393,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x8c000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #393 = CMOVBE16rr
  { 394,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8c000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #394 = CMOVBE32rm
  { 395,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8c000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #395 = CMOVBE32rr
  { 396,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8c002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #396 = CMOVBE64rm
  { 397,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8c002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #397 = CMOVBE64rr
  { 398,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000502ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #398 = CMOVBE_F
  { 399,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo74 },  // Inst #399 = CMOVBE_Fp32
  { 400,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo75 },  // Inst #400 = CMOVBE_Fp64
  { 401,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo76 },  // Inst #401 = CMOVBE_Fp80
  { 402,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000502ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #402 = CMOVB_F
  { 403,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo74 },  // Inst #403 = CMOVB_Fp32
  { 404,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo75 },  // Inst #404 = CMOVB_Fp64
  { 405,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo76 },  // Inst #405 = CMOVB_Fp80
  { 406,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x88000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #406 = CMOVE16rm
  { 407,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x88000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #407 = CMOVE16rr
  { 408,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x88000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #408 = CMOVE32rm
  { 409,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x88000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #409 = CMOVE32rr
  { 410,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x88002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #410 = CMOVE64rm
  { 411,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x88002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #411 = CMOVE64rr
  { 412,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000502ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #412 = CMOVE_F
  { 413,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo74 },  // Inst #413 = CMOVE_Fp32
  { 414,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo75 },  // Inst #414 = CMOVE_Fp64
  { 415,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo76 },  // Inst #415 = CMOVE_Fp80
  { 416,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x9e000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #416 = CMOVG16rm
  { 417,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x9e000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #417 = CMOVG16rr
  { 418,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9e000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #418 = CMOVG32rm
  { 419,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9e000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #419 = CMOVG32rr
  { 420,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9e002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #420 = CMOVG64rm
  { 421,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9e002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #421 = CMOVG64rr
  { 422,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x9a000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #422 = CMOVGE16rm
  { 423,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x9a000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #423 = CMOVGE16rr
  { 424,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9a000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #424 = CMOVGE32rm
  { 425,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9a000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #425 = CMOVGE32rr
  { 426,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9a002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #426 = CMOVGE64rm
  { 427,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9a002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #427 = CMOVGE64rr
  { 428,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x98000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #428 = CMOVL16rm
  { 429,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x98000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #429 = CMOVL16rr
  { 430,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x98000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #430 = CMOVL32rm
  { 431,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x98000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #431 = CMOVL32rr
  { 432,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x98002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #432 = CMOVL64rm
  { 433,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x98002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #433 = CMOVL64rr
  { 434,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x9c000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #434 = CMOVLE16rm
  { 435,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x9c000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #435 = CMOVLE16rr
  { 436,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9c000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #436 = CMOVLE32rm
  { 437,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9c000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #437 = CMOVLE32rr
  { 438,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9c002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #438 = CMOVLE64rm
  { 439,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9c002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #439 = CMOVLE64rr
  { 440,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000602ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #440 = CMOVNBE_F
  { 441,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo74 },  // Inst #441 = CMOVNBE_Fp32
  { 442,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo75 },  // Inst #442 = CMOVNBE_Fp64
  { 443,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo76 },  // Inst #443 = CMOVNBE_Fp80
  { 444,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000602ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #444 = CMOVNB_F
  { 445,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo74 },  // Inst #445 = CMOVNB_Fp32
  { 446,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo75 },  // Inst #446 = CMOVNB_Fp64
  { 447,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo76 },  // Inst #447 = CMOVNB_Fp80
  { 448,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x8a000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #448 = CMOVNE16rm
  { 449,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x8a000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #449 = CMOVNE16rr
  { 450,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8a000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #450 = CMOVNE32rm
  { 451,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8a000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #451 = CMOVNE32rr
  { 452,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8a002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #452 = CMOVNE64rm
  { 453,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8a002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #453 = CMOVNE64rr
  { 454,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000602ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #454 = CMOVNE_F
  { 455,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo74 },  // Inst #455 = CMOVNE_Fp32
  { 456,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo75 },  // Inst #456 = CMOVNE_Fp64
  { 457,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo76 },  // Inst #457 = CMOVNE_Fp80
  { 458,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x82000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #458 = CMOVNO16rm
  { 459,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x82000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #459 = CMOVNO16rr
  { 460,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x82000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #460 = CMOVNO32rm
  { 461,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x82000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #461 = CMOVNO32rr
  { 462,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x82002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #462 = CMOVNO64rm
  { 463,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x82002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #463 = CMOVNO64rr
  { 464,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x96000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #464 = CMOVNP16rm
  { 465,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x96000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #465 = CMOVNP16rr
  { 466,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x96000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #466 = CMOVNP32rm
  { 467,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x96000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #467 = CMOVNP32rr
  { 468,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x96002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #468 = CMOVNP64rm
  { 469,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x96002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #469 = CMOVNP64rr
  { 470,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000602ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #470 = CMOVNP_F
  { 471,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo74 },  // Inst #471 = CMOVNP_Fp32
  { 472,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo75 },  // Inst #472 = CMOVNP_Fp64
  { 473,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo76 },  // Inst #473 = CMOVNP_Fp80
  { 474,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x92000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #474 = CMOVNS16rm
  { 475,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x92000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #475 = CMOVNS16rr
  { 476,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x92000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #476 = CMOVNS32rm
  { 477,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x92000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #477 = CMOVNS32rr
  { 478,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x92002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #478 = CMOVNS64rm
  { 479,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x92002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #479 = CMOVNS64rr
  { 480,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x80000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #480 = CMOVO16rm
  { 481,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x80000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #481 = CMOVO16rr
  { 482,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x80000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #482 = CMOVO32rm
  { 483,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x80000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #483 = CMOVO32rr
  { 484,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x80002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #484 = CMOVO64rm
  { 485,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x80002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #485 = CMOVO64rr
  { 486,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x94000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #486 = CMOVP16rm
  { 487,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x94000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #487 = CMOVP16rr
  { 488,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x94000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #488 = CMOVP32rm
  { 489,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x94000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #489 = CMOVP32rr
  { 490,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x94002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #490 = CMOVP64rm
  { 491,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x94002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #491 = CMOVP64rr
  { 492,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000502ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #492 = CMOVP_F
  { 493,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo74 },  // Inst #493 = CMOVP_Fp32
  { 494,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo75 },  // Inst #494 = CMOVP_Fp64
  { 495,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList3, ImplicitList1, OperandInfo76 },  // Inst #495 = CMOVP_Fp80
  { 496,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x90000146ULL, ImplicitList3, NULL, OperandInfo18 },  // Inst #496 = CMOVS16rm
  { 497,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x90000145ULL, ImplicitList3, NULL, OperandInfo19 },  // Inst #497 = CMOVS16rr
  { 498,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x90000106ULL, ImplicitList3, NULL, OperandInfo22 },  // Inst #498 = CMOVS32rm
  { 499,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x90000105ULL, ImplicitList3, NULL, OperandInfo23 },  // Inst #499 = CMOVS32rr
  { 500,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x90002106ULL, ImplicitList3, NULL, OperandInfo26 },  // Inst #500 = CMOVS64rm
  { 501,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x90002105ULL, ImplicitList3, NULL, OperandInfo27 },  // Inst #501 = CMOVS64rr
  { 502,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo77 },  // Inst #502 = CMOV_FR32
  { 503,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo78 },  // Inst #503 = CMOV_FR64
  { 504,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo79 },  // Inst #504 = CMOV_GR16
  { 505,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo80 },  // Inst #505 = CMOV_GR32
  { 506,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo81 },  // Inst #506 = CMOV_GR8
  { 507,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo82 },  // Inst #507 = CMOV_RFP32
  { 508,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo83 },  // Inst #508 = CMOV_RFP64
  { 509,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo84 },  // Inst #509 = CMOV_RFP80
  { 510,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo85 },  // Inst #510 = CMOV_V2F64
  { 511,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo85 },  // Inst #511 = CMOV_V2I64
  { 512,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo85 },  // Inst #512 = CMOV_V4F32
  { 513,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo86 },  // Inst #513 = CMOV_V4F64
  { 514,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo86 },  // Inst #514 = CMOV_V4I64
  { 515,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList3, NULL, OperandInfo86 },  // Inst #515 = CMOV_V8F32
  { 516,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x7a00c041ULL, ImplicitList7, ImplicitList2, OperandInfo2 },  // Inst #516 = CMP16i16
  { 517,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10200c05fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #517 = CMP16mi
  { 518,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10600405fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #518 = CMP16mi8
  { 519,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x72000044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #519 = CMP16mr
  { 520,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x10200c057ULL, NULL, ImplicitList3, OperandInfo68 },  // Inst #520 = CMP16ri
  { 521,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x106004057ULL, NULL, ImplicitList3, OperandInfo68 },  // Inst #521 = CMP16ri8
  { 522,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x76000046ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #522 = CMP16rm
  { 523,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x72000043ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #523 = CMP16rr
  { 524,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x76000045ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #524 = CMP16rr_REV
  { 525,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x7a014001ULL, ImplicitList8, ImplicitList4, OperandInfo2 },  // Inst #525 = CMP32i32
  { 526,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10201401fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #526 = CMP32mi
  { 527,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10600401fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #527 = CMP32mi8
  { 528,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x72000004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #528 = CMP32mr
  { 529,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x102014017ULL, NULL, ImplicitList3, OperandInfo69 },  // Inst #529 = CMP32ri
  { 530,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x106004017ULL, NULL, ImplicitList3, OperandInfo69 },  // Inst #530 = CMP32ri8
  { 531,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x76000006ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #531 = CMP32rm
  { 532,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x72000003ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #532 = CMP32rr
  { 533,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x76000005ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #533 = CMP32rr_REV
  { 534,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x7a016001ULL, ImplicitList9, ImplicitList5, OperandInfo2 },  // Inst #534 = CMP64i32
  { 535,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10201601fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #535 = CMP64mi32
  { 536,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10600601fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #536 = CMP64mi8
  { 537,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x72002004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #537 = CMP64mr
  { 538,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x102016017ULL, NULL, ImplicitList3, OperandInfo70 },  // Inst #538 = CMP64ri32
  { 539,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x106006017ULL, NULL, ImplicitList3, OperandInfo70 },  // Inst #539 = CMP64ri8
  { 540,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x76002006ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #540 = CMP64rm
  { 541,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x72002003ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #541 = CMP64rr
  { 542,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x76002005ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #542 = CMP64rr_REV
  { 543,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x78004001ULL, ImplicitList10, ImplicitList6, OperandInfo2 },  // Inst #543 = CMP8i8
  { 544,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10000401fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #544 = CMP8mi
  { 545,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x70000004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #545 = CMP8mr
  { 546,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x100004017ULL, NULL, ImplicitList3, OperandInfo87 },  // Inst #546 = CMP8ri
  { 547,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x74000006ULL, NULL, ImplicitList3, OperandInfo14 },  // Inst #547 = CMP8rm
  { 548,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x70000003ULL, NULL, ImplicitList3, OperandInfo88 },  // Inst #548 = CMP8rr
  { 549,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x74000005ULL, NULL, ImplicitList3, OperandInfo88 },  // Inst #549 = CMP8rr_REV
  { 550,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0x185004146ULL, NULL, NULL, OperandInfo64 },  // Inst #550 = CMPPDrmi
  { 551,	8,	1,	53,	0,	0, 0x185004146ULL, NULL, NULL, OperandInfo64 },  // Inst #551 = CMPPDrmi_alt
  { 552,	4,	1,	54,	0,	0, 0x185004145ULL, NULL, NULL, OperandInfo65 },  // Inst #552 = CMPPDrri
  { 553,	4,	1,	54,	0,	0, 0x185004145ULL, NULL, NULL, OperandInfo65 },  // Inst #553 = CMPPDrri_alt
  { 554,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0x184804106ULL, NULL, NULL, OperandInfo64 },  // Inst #554 = CMPPSrmi
  { 555,	8,	1,	53,	0,	0, 0x184804106ULL, NULL, NULL, OperandInfo64 },  // Inst #555 = CMPPSrmi_alt
  { 556,	4,	1,	54,	0,	0, 0x184804105ULL, NULL, NULL, OperandInfo65 },  // Inst #556 = CMPPSrri
  { 557,	4,	1,	54,	0,	0, 0x184804105ULL, NULL, NULL, OperandInfo65 },  // Inst #557 = CMPPSrri_alt
  { 558,	0,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e000041ULL, NULL, NULL, 0 },  // Inst #558 = CMPS16
  { 559,	0,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e000001ULL, NULL, NULL, 0 },  // Inst #559 = CMPS32
  { 560,	0,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e002001ULL, NULL, NULL, 0 },  // Inst #560 = CMPS64
  { 561,	0,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14c000001ULL, NULL, NULL, 0 },  // Inst #561 = CMPS8
  { 562,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo89 },  // Inst #562 = CMPSDrm
  { 563,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo89 },  // Inst #563 = CMPSDrm_alt
  { 564,	4,	1,	17,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo90 },  // Inst #564 = CMPSDrr
  { 565,	4,	1,	17,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo90 },  // Inst #565 = CMPSDrr_alt
  { 566,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo91 },  // Inst #566 = CMPSSrm
  { 567,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo91 },  // Inst #567 = CMPSSrm_alt
  { 568,	4,	1,	17,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo92 },  // Inst #568 = CMPSSrr
  { 569,	4,	1,	17,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo92 },  // Inst #569 = CMPSSrr_alt
  { 570,	5,	0,	56,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e002119ULL, ImplicitList22, ImplicitList23, OperandInfo40 },  // Inst #570 = CMPXCHG16B
  { 571,	6,	0,	57,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162000144ULL, NULL, NULL, OperandInfo16 },  // Inst #571 = CMPXCHG16rm
  { 572,	2,	1,	58,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162000143ULL, NULL, NULL, OperandInfo57 },  // Inst #572 = CMPXCHG16rr
  { 573,	6,	0,	57,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162000104ULL, NULL, NULL, OperandInfo20 },  // Inst #573 = CMPXCHG32rm
  { 574,	2,	1,	58,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162000103ULL, NULL, NULL, OperandInfo32 },  // Inst #574 = CMPXCHG32rr
  { 575,	6,	0,	57,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162002104ULL, NULL, NULL, OperandInfo24 },  // Inst #575 = CMPXCHG64rm
  { 576,	2,	1,	58,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162002103ULL, NULL, NULL, OperandInfo33 },  // Inst #576 = CMPXCHG64rr
  { 577,	5,	0,	59,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000119ULL, ImplicitList24, ImplicitList25, OperandInfo40 },  // Inst #577 = CMPXCHG8B
  { 578,	6,	0,	60,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x160000104ULL, NULL, NULL, OperandInfo28 },  // Inst #578 = CMPXCHG8rm
  { 579,	2,	1,	61,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x160000103ULL, NULL, NULL, OperandInfo88 },  // Inst #579 = CMPXCHG8rr
  { 580,	6,	0,	62,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e000146ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #580 = COMISDrm
  { 581,	2,	0,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e000145ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #581 = COMISDrr
  { 582,	6,	0,	62,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e000106ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #582 = COMISSrm
  { 583,	2,	0,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e000105ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #583 = COMISSrr
  { 584,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #584 = COMP_FST0r
  { 585,	1,	0,	64,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000a02ULL, NULL, ImplicitList26, OperandInfo41 },  // Inst #585 = COM_FIPr
  { 586,	1,	0,	64,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000602ULL, NULL, ImplicitList26, OperandInfo41 },  // Inst #586 = COM_FIr
  { 587,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #587 = COM_FST0r
  { 588,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fe000401ULL, NULL, ImplicitList1, 0 },  // Inst #588 = COS_F
  { 589,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #589 = COS_Fp32
  { 590,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #590 = COS_Fp64
  { 591,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #591 = COS_Fp80
  { 592,	0,	0,	65,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x144000101ULL, NULL, NULL, 0 },  // Inst #592 = CPUID
  { 593,	0,	0,	0,	0,	0, 0x132002001ULL, ImplicitList9, ImplicitList27, 0 },  // Inst #593 = CQO
  { 594,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e2001146ULL, NULL, NULL, OperandInfo22 },  // Inst #594 = CRC32r32m16
  { 595,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e2001106ULL, NULL, NULL, OperandInfo22 },  // Inst #595 = CRC32r32m32
  { 596,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e0001106ULL, NULL, NULL, OperandInfo22 },  // Inst #596 = CRC32r32m8
  { 597,	3,	1,	0,	0,	0, 0x1e2001145ULL, NULL, NULL, OperandInfo93 },  // Inst #597 = CRC32r32r16
  { 598,	3,	1,	0,	0,	0, 0x1e2001105ULL, NULL, NULL, OperandInfo23 },  // Inst #598 = CRC32r32r32
  { 599,	3,	1,	0,	0,	0, 0x1e0001105ULL, NULL, NULL, OperandInfo94 },  // Inst #599 = CRC32r32r8
  { 600,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e2003106ULL, NULL, NULL, OperandInfo26 },  // Inst #600 = CRC32r64m64
  { 601,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e0003106ULL, NULL, NULL, OperandInfo26 },  // Inst #601 = CRC32r64m8
  { 602,	3,	1,	0,	0,	0, 0x1e2003105ULL, NULL, NULL, OperandInfo27 },  // Inst #602 = CRC32r64r64
  { 603,	3,	1,	0,	0,	0, 0x1e0003105ULL, NULL, NULL, OperandInfo95 },  // Inst #603 = CRC32r64r8
  { 604,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5c000001ULL, NULL, NULL, 0 },  // Inst #604 = CS_PREFIX
  { 605,	6,	1,	66,	0,	0|(1<<MCID::MayLoad), 0x1cc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #605 = CVTDQ2PDrm
  { 606,	2,	1,	67,	0,	0, 0x1cc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #606 = CVTDQ2PDrr
  { 607,	6,	1,	68,	0,	0|(1<<MCID::MayLoad), 0xb6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #607 = CVTDQ2PSrm
  { 608,	2,	1,	69,	0,	0, 0xb6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #608 = CVTDQ2PSrr
  { 609,	6,	1,	70,	0,	0|(1<<MCID::MayLoad), 0x1cc000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #609 = CVTPD2DQrm
  { 610,	2,	1,	71,	0,	0, 0x1cc000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #610 = CVTPD2DQrr
  { 611,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0xb5000146ULL, NULL, NULL, OperandInfo49 },  // Inst #611 = CVTPD2PSrm
  { 612,	2,	1,	73,	0,	0, 0xb5000145ULL, NULL, NULL, OperandInfo50 },  // Inst #612 = CVTPD2PSrr
  { 613,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0xb7000146ULL, NULL, NULL, OperandInfo49 },  // Inst #613 = CVTPS2DQrm
  { 614,	2,	1,	75,	0,	0, 0xb7000145ULL, NULL, NULL, OperandInfo50 },  // Inst #614 = CVTPS2DQrr
  { 615,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0xb4000106ULL, NULL, NULL, OperandInfo49 },  // Inst #615 = CVTPS2PDrm
  { 616,	2,	1,	73,	0,	0, 0xb4000105ULL, NULL, NULL, OperandInfo50 },  // Inst #616 = CVTPS2PDrr
  { 617,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x5a002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #617 = CVTSD2SI64rm
  { 618,	2,	1,	77,	0,	0, 0x5a002b05ULL, NULL, NULL, OperandInfo96 },  // Inst #618 = CVTSD2SI64rr
  { 619,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x5a000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #619 = CVTSD2SIrm
  { 620,	2,	1,	77,	0,	0, 0x5a000b05ULL, NULL, NULL, OperandInfo97 },  // Inst #620 = CVTSD2SIrr
  { 621,	6,	1,	78,	0,	0|(1<<MCID::MayLoad), 0xb4000b06ULL, NULL, NULL, OperandInfo98 },  // Inst #621 = CVTSD2SSrm
  { 622,	2,	1,	79,	0,	0, 0xb4000b05ULL, NULL, NULL, OperandInfo99 },  // Inst #622 = CVTSD2SSrr
  { 623,	6,	1,	80,	0,	0|(1<<MCID::MayLoad), 0x54002b06ULL, NULL, NULL, OperandInfo100 },  // Inst #623 = CVTSI2SD64rm
  { 624,	2,	1,	81,	0,	0, 0x54002b05ULL, NULL, NULL, OperandInfo101 },  // Inst #624 = CVTSI2SD64rr
  { 625,	6,	1,	80,	0,	0|(1<<MCID::MayLoad), 0x54000b06ULL, NULL, NULL, OperandInfo100 },  // Inst #625 = CVTSI2SDrm
  { 626,	2,	1,	81,	0,	0, 0x54000b05ULL, NULL, NULL, OperandInfo102 },  // Inst #626 = CVTSI2SDrr
  { 627,	6,	1,	80,	0,	0|(1<<MCID::MayLoad), 0x54002c06ULL, NULL, NULL, OperandInfo98 },  // Inst #627 = CVTSI2SS64rm
  { 628,	2,	1,	81,	0,	0, 0x54002c05ULL, NULL, NULL, OperandInfo103 },  // Inst #628 = CVTSI2SS64rr
  { 629,	6,	1,	80,	0,	0|(1<<MCID::MayLoad), 0x54000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #629 = CVTSI2SSrm
  { 630,	2,	1,	81,	0,	0, 0x54000c05ULL, NULL, NULL, OperandInfo104 },  // Inst #630 = CVTSI2SSrr
  { 631,	6,	1,	78,	0,	0|(1<<MCID::MayLoad), 0xb4000c06ULL, NULL, NULL, OperandInfo100 },  // Inst #631 = CVTSS2SDrm
  { 632,	2,	1,	79,	0,	0, 0xb4000c05ULL, NULL, NULL, OperandInfo105 },  // Inst #632 = CVTSS2SDrr
  { 633,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x5a002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #633 = CVTSS2SI64rm
  { 634,	2,	1,	83,	0,	0, 0x5a002c05ULL, NULL, NULL, OperandInfo96 },  // Inst #634 = CVTSS2SI64rr
  { 635,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x5a000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #635 = CVTSS2SIrm
  { 636,	2,	1,	85,	0,	0, 0x5a000c05ULL, NULL, NULL, OperandInfo97 },  // Inst #636 = CVTSS2SIrr
  { 637,	6,	1,	70,	0,	0|(1<<MCID::MayLoad), 0x1cd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #637 = CVTTPD2DQrm
  { 638,	2,	1,	71,	0,	0, 0x1cd000145ULL, NULL, NULL, OperandInfo50 },  // Inst #638 = CVTTPD2DQrr
  { 639,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0xb6000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #639 = CVTTPS2DQrm
  { 640,	2,	1,	75,	0,	0, 0xb6000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #640 = CVTTPS2DQrr
  { 641,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x58002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #641 = CVTTSD2SI64rm
  { 642,	2,	1,	77,	0,	0, 0x58002b05ULL, NULL, NULL, OperandInfo106 },  // Inst #642 = CVTTSD2SI64rr
  { 643,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x58000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #643 = CVTTSD2SIrm
  { 644,	2,	1,	77,	0,	0, 0x58000b05ULL, NULL, NULL, OperandInfo107 },  // Inst #644 = CVTTSD2SIrr
  { 645,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x58002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #645 = CVTTSS2SI64rm
  { 646,	2,	1,	83,	0,	0, 0x58002c05ULL, NULL, NULL, OperandInfo108 },  // Inst #646 = CVTTSS2SI64rr
  { 647,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x58000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #647 = CVTTSS2SIrm
  { 648,	2,	1,	85,	0,	0, 0x58000c05ULL, NULL, NULL, OperandInfo109 },  // Inst #648 = CVTTSS2SIrr
  { 649,	0,	0,	0,	0,	0, 0x132000041ULL, ImplicitList7, ImplicitList28, 0 },  // Inst #649 = CWD
  { 650,	0,	0,	0,	0,	0, 0x130000001ULL, ImplicitList7, ImplicitList8, 0 },  // Inst #650 = CWDE
  { 651,	0,	0,	86,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4e000001ULL, NULL, NULL, 0 },  // Inst #651 = DAA
  { 652,	0,	0,	87,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e000001ULL, NULL, NULL, 0 },  // Inst #652 = DAS
  { 653,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xcc000001ULL, NULL, NULL, 0 },  // Inst #653 = DATA16_PREFIX
  { 654,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000059ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #654 = DEC16m
  { 655,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x90000042ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #655 = DEC16r
  { 656,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #656 = DEC32m
  { 657,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x90000002ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #657 = DEC32r
  { 658,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000059ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #658 = DEC64_16m
  { 659,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000051ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #659 = DEC64_16r
  { 660,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #660 = DEC64_32m
  { 661,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000011ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #661 = DEC64_32r
  { 662,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe002019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #662 = DEC64m
  { 663,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe002011ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #663 = DEC64r
  { 664,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fc000019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #664 = DEC8m
  { 665,	2,	1,	89,	0,	0, 0x1fc000011ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #665 = DEC8r
  { 666,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00005eULL, ImplicitList28, ImplicitList29, OperandInfo40 },  // Inst #666 = DIV16m
  { 667,	1,	0,	91,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000056ULL, ImplicitList28, ImplicitList29, OperandInfo112 },  // Inst #667 = DIV16r
  { 668,	5,	0,	92,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00001eULL, ImplicitList21, ImplicitList25, OperandInfo40 },  // Inst #668 = DIV32m
  { 669,	1,	0,	93,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000016ULL, ImplicitList21, ImplicitList25, OperandInfo71 },  // Inst #669 = DIV32r
  { 670,	5,	0,	94,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00201eULL, ImplicitList27, ImplicitList23, OperandInfo40 },  // Inst #670 = DIV64m
  { 671,	1,	0,	95,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee002016ULL, ImplicitList27, ImplicitList23, OperandInfo73 },  // Inst #671 = DIV64r
  { 672,	5,	0,	96,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ec00001eULL, ImplicitList7, ImplicitList30, OperandInfo40 },  // Inst #672 = DIV8m
  { 673,	1,	0,	97,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000016ULL, ImplicitList7, ImplicitList30, OperandInfo113 },  // Inst #673 = DIV8r
  { 674,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0xbd000146ULL, NULL, NULL, OperandInfo34 },  // Inst #674 = DIVPDrm
  { 675,	3,	1,	99,	0,	0, 0xbd000145ULL, NULL, NULL, OperandInfo35 },  // Inst #675 = DIVPDrr
  { 676,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0xbc800106ULL, NULL, NULL, OperandInfo34 },  // Inst #676 = DIVPSrm
  { 677,	3,	1,	100,	0,	0, 0xbc800105ULL, NULL, NULL, OperandInfo35 },  // Inst #677 = DIVPSrr
  { 678,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #678 = DIVR_F32m
  { 679,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #679 = DIVR_F64m
  { 680,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #680 = DIVR_FI16m
  { 681,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #681 = DIVR_FI32m
  { 682,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000902ULL, NULL, NULL, OperandInfo41 },  // Inst #682 = DIVR_FPrST0
  { 683,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #683 = DIVR_FST0r
  { 684,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #684 = DIVR_Fp32m
  { 685,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #685 = DIVR_Fp64m
  { 686,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #686 = DIVR_Fp64m32
  { 687,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #687 = DIVR_Fp80m32
  { 688,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #688 = DIVR_Fp80m64
  { 689,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #689 = DIVR_FpI16m32
  { 690,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #690 = DIVR_FpI16m64
  { 691,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #691 = DIVR_FpI16m80
  { 692,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #692 = DIVR_FpI32m32
  { 693,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #693 = DIVR_FpI32m64
  { 694,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #694 = DIVR_FpI32m80
  { 695,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000702ULL, NULL, NULL, OperandInfo41 },  // Inst #695 = DIVR_FrST0
  { 696,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xbc000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #696 = DIVSDrm
  { 697,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xbc000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #697 = DIVSDrm_Int
  { 698,	3,	1,	102,	0,	0, 0xbc000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #698 = DIVSDrr
  { 699,	3,	1,	102,	0,	0, 0xbc000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #699 = DIVSDrr_Int
  { 700,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xbc000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #700 = DIVSSrm
  { 701,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xbc000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #701 = DIVSSrm_Int
  { 702,	3,	1,	103,	0,	0, 0xbc000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #702 = DIVSSrr
  { 703,	3,	1,	103,	0,	0, 0xbc000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #703 = DIVSSrr_Int
  { 704,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001eULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #704 = DIV_F32m
  { 705,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001eULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #705 = DIV_F64m
  { 706,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001eULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #706 = DIV_FI16m
  { 707,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001eULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #707 = DIV_FI32m
  { 708,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000902ULL, NULL, NULL, OperandInfo41 },  // Inst #708 = DIV_FPrST0
  { 709,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #709 = DIV_FST0r
  { 710,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #710 = DIV_Fp32
  { 711,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #711 = DIV_Fp32m
  { 712,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #712 = DIV_Fp64
  { 713,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #713 = DIV_Fp64m
  { 714,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #714 = DIV_Fp64m32
  { 715,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #715 = DIV_Fp80
  { 716,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #716 = DIV_Fp80m32
  { 717,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #717 = DIV_Fp80m64
  { 718,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #718 = DIV_FpI16m32
  { 719,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #719 = DIV_FpI16m64
  { 720,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #720 = DIV_FpI16m80
  { 721,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #721 = DIV_FpI32m32
  { 722,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #722 = DIV_FpI32m64
  { 723,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #723 = DIV_FpI32m80
  { 724,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000702ULL, NULL, NULL, OperandInfo41 },  // Inst #724 = DIV_FrST0
  { 725,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x83004e46ULL, NULL, NULL, OperandInfo64 },  // Inst #725 = DPPDrmi
  { 726,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x83004e45ULL, NULL, NULL, OperandInfo65 },  // Inst #726 = DPPDrri
  { 727,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x80804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #727 = DPPSrmi
  { 728,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x80804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #728 = DPPSrri
  { 729,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7c000001ULL, NULL, NULL, 0 },  // Inst #729 = DS_PREFIX
  { 730,	1,	0,	104,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x186000001ULL, NULL, NULL, OperandInfo71 },  // Inst #730 = EH_RETURN
  { 731,	1,	0,	104,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x186000001ULL, NULL, NULL, OperandInfo73 },  // Inst #731 = EH_RETURN64
  { 732,	5,	0,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #732 = EH_SjLj_LongJmp32
  { 733,	5,	0,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #733 = EH_SjLj_LongJmp64
  { 734,	6,	1,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #734 = EH_SjLj_SetJmp32
  { 735,	6,	1,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #735 = EH_SjLj_SetJmp64
  { 736,	1,	0,	0,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo72 },  // Inst #736 = EH_SjLj_Setup
  { 737,	2,	0,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19000c02bULL, NULL, NULL, OperandInfo48 },  // Inst #737 = ENTER
  { 738,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4c000001ULL, NULL, NULL, 0 },  // Inst #738 = ES_PREFIX
  { 739,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x2e804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #739 = EXTRACTPSmr
  { 740,	3,	1,	0,	0,	0, 0x2e804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #740 = EXTRACTPSrr
  { 741,	3,	1,	0,	0,	0, 0xf2000145ULL, NULL, NULL, OperandInfo35 },  // Inst #741 = EXTRQ
  { 742,	4,	1,	0,	0,	0, 0xf0004150ULL, NULL, NULL, OperandInfo116 },  // Inst #742 = EXTRQI
  { 743,	0,	0,	107,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000401ULL, NULL, NULL, 0 },  // Inst #743 = F2XM1
  { 744,	2,	0,	108,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x13400c06cULL, ImplicitList11, NULL, OperandInfo48 },  // Inst #744 = FARCALL16i
  { 745,	5,	0,	109,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00005bULL, ImplicitList11, NULL, OperandInfo40 },  // Inst #745 = FARCALL16m
  { 746,	2,	0,	108,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x13401402cULL, ImplicitList11, NULL, OperandInfo48 },  // Inst #746 = FARCALL32i
  { 747,	5,	0,	109,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001bULL, ImplicitList11, NULL, OperandInfo40 },  // Inst #747 = FARCALL32m
  { 748,	5,	0,	110,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00201bULL, ImplicitList13, NULL, OperandInfo40 },  // Inst #748 = FARCALL64
  { 749,	2,	0,	111,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d400c06cULL, NULL, NULL, OperandInfo48 },  // Inst #749 = FARJMP16i
  { 750,	5,	0,	112,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00005dULL, NULL, NULL, OperandInfo40 },  // Inst #750 = FARJMP16m
  { 751,	2,	0,	111,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d401402cULL, NULL, NULL, OperandInfo48 },  // Inst #751 = FARJMP32i
  { 752,	5,	0,	112,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001dULL, NULL, NULL, OperandInfo40 },  // Inst #752 = FARJMP32m
  { 753,	5,	0,	113,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00201dULL, NULL, NULL, OperandInfo40 },  // Inst #753 = FARJMP64
  { 754,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1be00001cULL, NULL, NULL, OperandInfo40 },  // Inst #754 = FBLDm
  { 755,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1be00001eULL, NULL, NULL, OperandInfo40 },  // Inst #755 = FBSTPm
  { 756,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b000001aULL, NULL, NULL, OperandInfo40 },  // Inst #756 = FCOM32m
  { 757,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b800001aULL, NULL, NULL, OperandInfo40 },  // Inst #757 = FCOM64m
  { 758,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b000001bULL, NULL, NULL, OperandInfo40 },  // Inst #758 = FCOMP32m
  { 759,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b800001bULL, NULL, NULL, OperandInfo40 },  // Inst #759 = FCOMP64m
  { 760,	0,	0,	114,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b2000901ULL, NULL, NULL, 0 },  // Inst #760 = FCOMPP
  { 761,	0,	0,	115,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000401ULL, NULL, NULL, 0 },  // Inst #761 = FDECSTP
  { 762,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1c000101ULL, NULL, NULL, 0 },  // Inst #762 = FEMMS
  { 763,	1,	0,	116,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000802ULL, NULL, NULL, OperandInfo41 },  // Inst #763 = FFREE
  { 764,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1bc00001aULL, NULL, NULL, OperandInfo40 },  // Inst #764 = FICOM16m
  { 765,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b400001aULL, NULL, NULL, OperandInfo40 },  // Inst #765 = FICOM32m
  { 766,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1bc00001bULL, NULL, NULL, OperandInfo40 },  // Inst #766 = FICOMP16m
  { 767,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b400001bULL, NULL, NULL, OperandInfo40 },  // Inst #767 = FICOMP32m
  { 768,	0,	0,	115,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000401ULL, NULL, NULL, 0 },  // Inst #768 = FINCSTP
  { 769,	5,	0,	117,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b200001dULL, NULL, NULL, OperandInfo40 },  // Inst #769 = FLDCW16m
  { 770,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b200001cULL, NULL, NULL, OperandInfo40 },  // Inst #770 = FLDENVm
  { 771,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d4000401ULL, NULL, NULL, 0 },  // Inst #771 = FLDL2E
  { 772,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d2000401ULL, NULL, NULL, 0 },  // Inst #772 = FLDL2T
  { 773,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d8000401ULL, NULL, NULL, 0 },  // Inst #773 = FLDLG2
  { 774,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000401ULL, NULL, NULL, 0 },  // Inst #774 = FLDLN2
  { 775,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d6000401ULL, NULL, NULL, 0 },  // Inst #775 = FLDPI
  { 776,	0,	0,	119,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c4000601ULL, NULL, ImplicitList1, 0 },  // Inst #776 = FNCLEX
  { 777,	0,	0,	120,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c6000601ULL, NULL, ImplicitList1, 0 },  // Inst #777 = FNINIT
  { 778,	0,	0,	121,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000401ULL, NULL, NULL, 0 },  // Inst #778 = FNOP
  { 779,	5,	0,	122,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001fULL, NULL, NULL, OperandInfo40 },  // Inst #779 = FNSTCW16m
  { 780,	0,	0,	123,	0,	0, 0x1c0000a01ULL, ImplicitList1, ImplicitList7, 0 },  // Inst #780 = FNSTSW16r
  { 781,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001fULL, NULL, NULL, OperandInfo40 },  // Inst #781 = FNSTSWm
  { 782,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo117 },  // Inst #782 = FP32_TO_INT16_IN_MEM
  { 783,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo117 },  // Inst #783 = FP32_TO_INT32_IN_MEM
  { 784,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo117 },  // Inst #784 = FP32_TO_INT64_IN_MEM
  { 785,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo118 },  // Inst #785 = FP64_TO_INT16_IN_MEM
  { 786,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo118 },  // Inst #786 = FP64_TO_INT32_IN_MEM
  { 787,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo118 },  // Inst #787 = FP64_TO_INT64_IN_MEM
  { 788,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #788 = FP80_TO_INT16_IN_MEM
  { 789,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #789 = FP80_TO_INT32_IN_MEM
  { 790,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #790 = FP80_TO_INT64_IN_MEM
  { 791,	0,	0,	124,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e6000401ULL, NULL, NULL, 0 },  // Inst #791 = FPATAN
  { 792,	0,	0,	125,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000401ULL, NULL, NULL, 0 },  // Inst #792 = FPREM
  { 793,	0,	0,	126,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ea000401ULL, NULL, NULL, 0 },  // Inst #793 = FPREM1
  { 794,	0,	0,	127,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e4000401ULL, NULL, NULL, 0 },  // Inst #794 = FPTAN
  { 795,	0,	0,	128,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f8000401ULL, NULL, NULL, 0 },  // Inst #795 = FRNDINT
  { 796,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001cULL, NULL, NULL, OperandInfo40 },  // Inst #796 = FRSTORm
  { 797,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001eULL, NULL, NULL, OperandInfo40 },  // Inst #797 = FSAVEm
  { 798,	0,	0,	129,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fa000401ULL, NULL, NULL, 0 },  // Inst #798 = FSCALE
  { 799,	0,	0,	130,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f6000401ULL, NULL, NULL, 0 },  // Inst #799 = FSINCOS
  { 800,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b200001eULL, NULL, NULL, OperandInfo40 },  // Inst #800 = FSTENVm
  { 801,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc8000001ULL, NULL, NULL, 0 },  // Inst #801 = FS_PREFIX
  { 802,	0,	0,	131,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca000401ULL, NULL, NULL, 0 },  // Inst #802 = FXAM
  { 803,	5,	0,	132,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000119ULL, NULL, NULL, OperandInfo40 },  // Inst #803 = FXRSTOR
  { 804,	5,	0,	132,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c002119ULL, NULL, NULL, OperandInfo40 },  // Inst #804 = FXRSTOR64
  { 805,	5,	1,	133,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000118ULL, NULL, NULL, OperandInfo40 },  // Inst #805 = FXSAVE
  { 806,	5,	1,	133,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c002118ULL, NULL, NULL, OperandInfo40 },  // Inst #806 = FXSAVE64
  { 807,	0,	0,	134,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e8000401ULL, NULL, NULL, 0 },  // Inst #807 = FXTRACT
  { 808,	0,	0,	135,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e2000401ULL, NULL, NULL, 0 },  // Inst #808 = FYL2X
  { 809,	0,	0,	136,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f2000401ULL, NULL, NULL, 0 },  // Inst #809 = FYL2XP1
  { 810,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe0000ULL, NULL, NULL, OperandInfo120 },  // Inst #810 = FpPOP_RETVAL
  { 811,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xab000146ULL, NULL, NULL, OperandInfo36 },  // Inst #811 = FsANDNPDrm
  { 812,	3,	1,	138,	0,	0, 0xab000145ULL, NULL, NULL, OperandInfo37 },  // Inst #812 = FsANDNPDrr
  { 813,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaa800106ULL, NULL, NULL, OperandInfo38 },  // Inst #813 = FsANDNPSrm
  { 814,	3,	1,	138,	0,	0, 0xaa800105ULL, NULL, NULL, OperandInfo39 },  // Inst #814 = FsANDNPSrr
  { 815,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xa9000146ULL, NULL, NULL, OperandInfo36 },  // Inst #815 = FsANDPDrm
  { 816,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xa9000145ULL, NULL, NULL, OperandInfo37 },  // Inst #816 = FsANDPDrr
  { 817,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xa8800106ULL, NULL, NULL, OperandInfo38 },  // Inst #817 = FsANDPSrm
  { 818,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xa8800105ULL, NULL, NULL, OperandInfo39 },  // Inst #818 = FsANDPSrr
  { 819,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo121 },  // Inst #819 = FsFLD0SD
  { 820,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo122 },  // Inst #820 = FsFLD0SS
  { 821,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x51000146ULL, NULL, NULL, OperandInfo100 },  // Inst #821 = FsMOVAPDrm
  { 822,	2,	1,	140,	0,	0, 0x51000145ULL, NULL, NULL, OperandInfo123 },  // Inst #822 = FsMOVAPDrr
  { 823,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x50800106ULL, NULL, NULL, OperandInfo98 },  // Inst #823 = FsMOVAPSrm
  { 824,	2,	1,	140,	0,	0, 0x50800105ULL, NULL, NULL, OperandInfo124 },  // Inst #824 = FsMOVAPSrr
  { 825,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xad000146ULL, NULL, NULL, OperandInfo36 },  // Inst #825 = FsORPDrm
  { 826,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xad000145ULL, NULL, NULL, OperandInfo37 },  // Inst #826 = FsORPDrr
  { 827,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xac800106ULL, NULL, NULL, OperandInfo38 },  // Inst #827 = FsORPSrm
  { 828,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xac800105ULL, NULL, NULL, OperandInfo39 },  // Inst #828 = FsORPSrr
  { 829,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x251000146ULL, NULL, NULL, OperandInfo100 },  // Inst #829 = FsVMOVAPDrm
  { 830,	2,	1,	140,	0,	0, 0x251000145ULL, NULL, NULL, OperandInfo123 },  // Inst #830 = FsVMOVAPDrr
  { 831,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x250800106ULL, NULL, NULL, OperandInfo98 },  // Inst #831 = FsVMOVAPSrm
  { 832,	2,	1,	140,	0,	0, 0x250800105ULL, NULL, NULL, OperandInfo124 },  // Inst #832 = FsVMOVAPSrr
  { 833,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaf000146ULL, NULL, NULL, OperandInfo36 },  // Inst #833 = FsXORPDrm
  { 834,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaf000145ULL, NULL, NULL, OperandInfo37 },  // Inst #834 = FsXORPDrr
  { 835,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xae800106ULL, NULL, NULL, OperandInfo38 },  // Inst #835 = FsXORPSrm
  { 836,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xae800105ULL, NULL, NULL, OperandInfo39 },  // Inst #836 = FsXORPSrr
  { 837,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xca000001ULL, NULL, NULL, 0 },  // Inst #837 = GS_PREFIX
  { 838,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xf9000146ULL, NULL, NULL, OperandInfo34 },  // Inst #838 = HADDPDrm
  { 839,	3,	1,	142,	0,	0, 0xf9000145ULL, NULL, NULL, OperandInfo35 },  // Inst #839 = HADDPDrr
  { 840,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xf8800b06ULL, NULL, NULL, OperandInfo34 },  // Inst #840 = HADDPSrm
  { 841,	3,	1,	142,	0,	0, 0xf8800b05ULL, NULL, NULL, OperandInfo35 },  // Inst #841 = HADDPSrr
  { 842,	0,	0,	143,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e8000001ULL, NULL, NULL, 0 },  // Inst #842 = HLT
  { 843,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xfb000146ULL, NULL, NULL, OperandInfo34 },  // Inst #843 = HSUBPDrm
  { 844,	3,	1,	142,	0,	0, 0xfb000145ULL, NULL, NULL, OperandInfo35 },  // Inst #844 = HSUBPDrr
  { 845,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xfa800b06ULL, NULL, NULL, OperandInfo34 },  // Inst #845 = HSUBPSrm
  { 846,	3,	1,	142,	0,	0, 0xfa800b05ULL, NULL, NULL, OperandInfo35 },  // Inst #846 = HSUBPSrr
  { 847,	5,	0,	144,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00005fULL, ImplicitList28, ImplicitList29, OperandInfo40 },  // Inst #847 = IDIV16m
  { 848,	1,	0,	145,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000057ULL, ImplicitList28, ImplicitList29, OperandInfo112 },  // Inst #848 = IDIV16r
  { 849,	5,	0,	146,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00001fULL, ImplicitList21, ImplicitList25, OperandInfo40 },  // Inst #849 = IDIV32m
  { 850,	1,	0,	147,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000017ULL, ImplicitList21, ImplicitList25, OperandInfo71 },  // Inst #850 = IDIV32r
  { 851,	5,	0,	148,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00201fULL, ImplicitList27, ImplicitList23, OperandInfo40 },  // Inst #851 = IDIV64m
  { 852,	1,	0,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee002017ULL, ImplicitList27, ImplicitList23, OperandInfo73 },  // Inst #852 = IDIV64r
  { 853,	5,	0,	150,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ec00001fULL, ImplicitList7, ImplicitList30, OperandInfo40 },  // Inst #853 = IDIV8m
  { 854,	1,	0,	151,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000017ULL, ImplicitList7, ImplicitList30, OperandInfo113 },  // Inst #854 = IDIV8r
  { 855,	5,	0,	152,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1be000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #855 = ILD_F16m
  { 856,	5,	0,	152,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b6000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #856 = ILD_F32m
  { 857,	5,	0,	152,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1be00001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #857 = ILD_F64m
  { 858,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #858 = ILD_Fp16m32
  { 859,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #859 = ILD_Fp16m64
  { 860,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #860 = ILD_Fp16m80
  { 861,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #861 = ILD_Fp32m32
  { 862,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #862 = ILD_Fp32m64
  { 863,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #863 = ILD_Fp32m80
  { 864,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #864 = ILD_Fp64m32
  { 865,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #865 = ILD_Fp64m64
  { 866,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #866 = ILD_Fp64m80
  { 867,	5,	0,	153,	0,	0|(1<<MCID::MayLoad), 0x1ee00005dULL, ImplicitList7, ImplicitList29, OperandInfo40 },  // Inst #867 = IMUL16m
  { 868,	1,	0,	154,	0,	0, 0x1ee000055ULL, ImplicitList7, ImplicitList29, OperandInfo112 },  // Inst #868 = IMUL16r
  { 869,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x15e000146ULL, NULL, ImplicitList3, OperandInfo18 },  // Inst #869 = IMUL16rm
  { 870,	7,	1,	156,	0,	0|(1<<MCID::MayLoad), 0xd200c046ULL, NULL, ImplicitList3, OperandInfo128 },  // Inst #870 = IMUL16rmi
  { 871,	7,	1,	156,	0,	0|(1<<MCID::MayLoad), 0xd6004046ULL, NULL, ImplicitList3, OperandInfo128 },  // Inst #871 = IMUL16rmi8
  { 872,	3,	1,	154,	0,	0|(1<<MCID::Commutable), 0x15e000145ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #872 = IMUL16rr
  { 873,	3,	1,	157,	0,	0, 0xd200c045ULL, NULL, ImplicitList3, OperandInfo129 },  // Inst #873 = IMUL16rri
  { 874,	3,	1,	157,	0,	0, 0xd6004045ULL, NULL, ImplicitList3, OperandInfo129 },  // Inst #874 = IMUL16rri8
  { 875,	5,	0,	158,	0,	0|(1<<MCID::MayLoad), 0x1ee00001dULL, ImplicitList8, ImplicitList25, OperandInfo40 },  // Inst #875 = IMUL32m
  { 876,	1,	0,	159,	0,	0, 0x1ee000015ULL, ImplicitList8, ImplicitList25, OperandInfo71 },  // Inst #876 = IMUL32r
  { 877,	7,	1,	160,	0,	0|(1<<MCID::MayLoad), 0x15e000106ULL, NULL, ImplicitList3, OperandInfo22 },  // Inst #877 = IMUL32rm
  { 878,	7,	1,	161,	0,	0|(1<<MCID::MayLoad), 0xd2014006ULL, NULL, ImplicitList3, OperandInfo130 },  // Inst #878 = IMUL32rmi
  { 879,	7,	1,	161,	0,	0|(1<<MCID::MayLoad), 0xd6004006ULL, NULL, ImplicitList3, OperandInfo130 },  // Inst #879 = IMUL32rmi8
  { 880,	3,	1,	159,	0,	0|(1<<MCID::Commutable), 0x15e000105ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #880 = IMUL32rr
  { 881,	3,	1,	162,	0,	0, 0xd2014005ULL, NULL, ImplicitList3, OperandInfo131 },  // Inst #881 = IMUL32rri
  { 882,	3,	1,	162,	0,	0, 0xd6004005ULL, NULL, ImplicitList3, OperandInfo131 },  // Inst #882 = IMUL32rri8
  { 883,	5,	0,	163,	0,	0|(1<<MCID::MayLoad), 0x1ee00201dULL, ImplicitList9, ImplicitList23, OperandInfo40 },  // Inst #883 = IMUL64m
  { 884,	1,	0,	164,	0,	0, 0x1ee002015ULL, ImplicitList9, ImplicitList23, OperandInfo73 },  // Inst #884 = IMUL64r
  { 885,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0x15e002106ULL, NULL, ImplicitList3, OperandInfo26 },  // Inst #885 = IMUL64rm
  { 886,	7,	1,	166,	0,	0|(1<<MCID::MayLoad), 0xd2016006ULL, NULL, ImplicitList3, OperandInfo132 },  // Inst #886 = IMUL64rmi32
  { 887,	7,	1,	166,	0,	0|(1<<MCID::MayLoad), 0xd6006006ULL, NULL, ImplicitList3, OperandInfo132 },  // Inst #887 = IMUL64rmi8
  { 888,	3,	1,	164,	0,	0|(1<<MCID::Commutable), 0x15e002105ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #888 = IMUL64rr
  { 889,	3,	1,	167,	0,	0, 0xd2016005ULL, NULL, ImplicitList3, OperandInfo133 },  // Inst #889 = IMUL64rri32
  { 890,	3,	1,	167,	0,	0, 0xd6006005ULL, NULL, ImplicitList3, OperandInfo133 },  // Inst #890 = IMUL64rri8
  { 891,	5,	0,	168,	0,	0|(1<<MCID::MayLoad), 0x1ec00001dULL, ImplicitList10, ImplicitList31, OperandInfo40 },  // Inst #891 = IMUL8m
  { 892,	1,	0,	169,	0,	0, 0x1ec000015ULL, ImplicitList10, ImplicitList31, OperandInfo113 },  // Inst #892 = IMUL8r
  { 893,	0,	0,	170,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xda000041ULL, NULL, NULL, 0 },  // Inst #893 = IN16
  { 894,	1,	0,	171,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca004041ULL, NULL, ImplicitList7, OperandInfo2 },  // Inst #894 = IN16ri
  { 895,	0,	0,	172,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000041ULL, ImplicitList32, ImplicitList7, 0 },  // Inst #895 = IN16rr
  { 896,	0,	0,	170,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xda000001ULL, NULL, NULL, 0 },  // Inst #896 = IN32
  { 897,	1,	0,	171,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca004001ULL, NULL, ImplicitList8, OperandInfo2 },  // Inst #897 = IN32ri
  { 898,	0,	0,	172,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000001ULL, ImplicitList32, ImplicitList8, 0 },  // Inst #898 = IN32rr
  { 899,	0,	0,	170,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xd8000001ULL, NULL, NULL, 0 },  // Inst #899 = IN8
  { 900,	1,	0,	171,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c8004001ULL, NULL, ImplicitList10, OperandInfo2 },  // Inst #900 = IN8ri
  { 901,	0,	0,	172,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d8000001ULL, ImplicitList32, ImplicitList10, 0 },  // Inst #901 = IN8rr
  { 902,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000058ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #902 = INC16m
  { 903,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x80000042ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #903 = INC16r
  { 904,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #904 = INC32m
  { 905,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x80000002ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #905 = INC32r
  { 906,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000058ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #906 = INC64_16m
  { 907,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000050ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #907 = INC64_16r
  { 908,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #908 = INC64_32m
  { 909,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000010ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #909 = INC64_32r
  { 910,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe002018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #910 = INC64m
  { 911,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe002010ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #911 = INC64r
  { 912,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fc000018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #912 = INC8m
  { 913,	2,	1,	89,	0,	0, 0x1fc000010ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #913 = INC8r
  { 914,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #914 = INSERTPSrm
  { 915,	4,	1,	0,	0,	0, 0x42804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #915 = INSERTPSrr
  { 916,	3,	1,	0,	0,	0, 0xf2000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #916 = INSERTQ
  { 917,	5,	1,	0,	0,	0, 0xf0004b05ULL, NULL, NULL, OperandInfo134 },  // Inst #917 = INSERTQI
  { 918,	1,	0,	173,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x19a004001ULL, NULL, NULL, OperandInfo2 },  // Inst #918 = INT
  { 919,	0,	0,	174,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x198000001ULL, NULL, NULL, 0 },  // Inst #919 = INT3
  { 920,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19c000001ULL, ImplicitList3, NULL, 0 },  // Inst #920 = INTO
  { 921,	0,	0,	175,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10000101ULL, NULL, NULL, 0 },  // Inst #921 = INVD
  { 922,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x100000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #922 = INVEPT32
  { 923,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x100000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #923 = INVEPT64
  { 924,	5,	0,	176,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011fULL, NULL, NULL, OperandInfo40 },  // Inst #924 = INVLPG
  { 925,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200013bULL, ImplicitList33, NULL, 0 },  // Inst #925 = INVLPGA32
  { 926,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200013bULL, ImplicitList34, NULL, 0 },  // Inst #926 = INVLPGA64
  { 927,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x104000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #927 = INVPCID32
  { 928,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x104000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #928 = INVPCID64
  { 929,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x102000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #929 = INVVPID32
  { 930,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x102000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #930 = INVVPID64
  { 931,	0,	0,	177,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e000041ULL, NULL, NULL, 0 },  // Inst #931 = IRET16
  { 932,	0,	0,	177,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e000001ULL, NULL, NULL, 0 },  // Inst #932 = IRET32
  { 933,	0,	0,	177,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e002001ULL, NULL, NULL, 0 },  // Inst #933 = IRET64
  { 934,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #934 = ISTT_FP16m
  { 935,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b6000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #935 = ISTT_FP32m
  { 936,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #936 = ISTT_FP64m
  { 937,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #937 = ISTT_Fp16m32
  { 938,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #938 = ISTT_Fp16m64
  { 939,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #939 = ISTT_Fp16m80
  { 940,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #940 = ISTT_Fp32m32
  { 941,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #941 = ISTT_Fp32m64
  { 942,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #942 = ISTT_Fp32m80
  { 943,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #943 = ISTT_Fp64m32
  { 944,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #944 = ISTT_Fp64m64
  { 945,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #945 = ISTT_Fp64m80
  { 946,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001aULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #946 = IST_F16m
  { 947,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001aULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #947 = IST_F32m
  { 948,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001bULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #948 = IST_FP16m
  { 949,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001bULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #949 = IST_FP32m
  { 950,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #950 = IST_FP64m
  { 951,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #951 = IST_Fp16m32
  { 952,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #952 = IST_Fp16m64
  { 953,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #953 = IST_Fp16m80
  { 954,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #954 = IST_Fp32m32
  { 955,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #955 = IST_Fp32m64
  { 956,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #956 = IST_Fp32m80
  { 957,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #957 = IST_Fp64m32
  { 958,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #958 = IST_Fp64m64
  { 959,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #959 = IST_Fp64m80
  { 960,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo64 },  // Inst #960 = Int_CMPSDrm
  { 961,	4,	1,	17,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo65 },  // Inst #961 = Int_CMPSDrr
  { 962,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo64 },  // Inst #962 = Int_CMPSSrm
  { 963,	4,	1,	17,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo65 },  // Inst #963 = Int_CMPSSrr
  { 964,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5e000146ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #964 = Int_COMISDrm
  { 965,	2,	0,	63,	0,	0, 0x5e000145ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #965 = Int_COMISDrr
  { 966,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5e000106ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #966 = Int_COMISSrm
  { 967,	2,	0,	63,	0,	0, 0x5e000105ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #967 = Int_COMISSrr
  { 968,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xb4000b05ULL, NULL, NULL, OperandInfo34 },  // Inst #968 = Int_CVTSD2SSrm
  { 969,	3,	1,	79,	0,	0, 0xb4000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #969 = Int_CVTSD2SSrr
  { 970,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0x54002b06ULL, NULL, NULL, OperandInfo34 },  // Inst #970 = Int_CVTSI2SD64rm
  { 971,	3,	1,	81,	0,	0, 0x54002b05ULL, NULL, NULL, OperandInfo135 },  // Inst #971 = Int_CVTSI2SD64rr
  { 972,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0x54000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #972 = Int_CVTSI2SDrm
  { 973,	3,	1,	81,	0,	0, 0x54000b05ULL, NULL, NULL, OperandInfo136 },  // Inst #973 = Int_CVTSI2SDrr
  { 974,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0x54002c06ULL, NULL, NULL, OperandInfo34 },  // Inst #974 = Int_CVTSI2SS64rm
  { 975,	3,	1,	81,	0,	0, 0x54002c05ULL, NULL, NULL, OperandInfo135 },  // Inst #975 = Int_CVTSI2SS64rr
  { 976,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0x54000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #976 = Int_CVTSI2SSrm
  { 977,	3,	1,	81,	0,	0, 0x54000c05ULL, NULL, NULL, OperandInfo136 },  // Inst #977 = Int_CVTSI2SSrr
  { 978,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xb4000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #978 = Int_CVTSS2SDrm
  { 979,	3,	1,	79,	0,	0, 0xb4000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #979 = Int_CVTSS2SDrr
  { 980,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x58002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #980 = Int_CVTTSD2SI64rm
  { 981,	2,	1,	77,	0,	0, 0x58002b05ULL, NULL, NULL, OperandInfo96 },  // Inst #981 = Int_CVTTSD2SI64rr
  { 982,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x58000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #982 = Int_CVTTSD2SIrm
  { 983,	2,	1,	77,	0,	0, 0x58000b05ULL, NULL, NULL, OperandInfo97 },  // Inst #983 = Int_CVTTSD2SIrr
  { 984,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x58002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #984 = Int_CVTTSS2SI64rm
  { 985,	2,	1,	83,	0,	0, 0x58002c05ULL, NULL, NULL, OperandInfo96 },  // Inst #985 = Int_CVTTSS2SI64rr
  { 986,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x58000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #986 = Int_CVTTSS2SIrm
  { 987,	2,	1,	85,	0,	0, 0x58000c05ULL, NULL, NULL, OperandInfo97 },  // Inst #987 = Int_CVTTSS2SIrr
  { 988,	0,	0,	182,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #988 = Int_MemBarrier
  { 989,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5c000146ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #989 = Int_UCOMISDrm
  { 990,	2,	0,	63,	0,	0, 0x5c000145ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #990 = Int_UCOMISDrr
  { 991,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5c000106ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #991 = Int_UCOMISSrm
  { 992,	2,	0,	63,	0,	0, 0x5c000105ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #992 = Int_UCOMISSrr
  { 993,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb84004b06ULL, NULL, NULL, OperandInfo137 },  // Inst #993 = Int_VCMPSDrm
  { 994,	4,	1,	17,	0,	0, 0xb84004b05ULL, NULL, NULL, OperandInfo85 },  // Inst #994 = Int_VCMPSDrr
  { 995,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb84004c06ULL, NULL, NULL, OperandInfo137 },  // Inst #995 = Int_VCMPSSrm
  { 996,	4,	1,	17,	0,	0, 0xb84004c05ULL, NULL, NULL, OperandInfo85 },  // Inst #996 = Int_VCMPSSrr
  { 997,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x25e000146ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #997 = Int_VCOMISDrm
  { 998,	2,	0,	63,	0,	0, 0x25e000145ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #998 = Int_VCOMISDrr
  { 999,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x25e000106ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #999 = Int_VCOMISSrm
  { 1000,	2,	0,	63,	0,	0, 0x25e000105ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #1000 = Int_VCOMISSrr
  { 1001,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xab4000b05ULL, NULL, NULL, OperandInfo138 },  // Inst #1001 = Int_VCVTSD2SSrm
  { 1002,	3,	1,	79,	0,	0, 0xab4000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #1002 = Int_VCVTSD2SSrr
  { 1003,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0xe54000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #1003 = Int_VCVTSI2SD64rm
  { 1004,	3,	1,	81,	0,	0, 0xe54000b05ULL, NULL, NULL, OperandInfo140 },  // Inst #1004 = Int_VCVTSI2SD64rr
  { 1005,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0xa54000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #1005 = Int_VCVTSI2SDrm
  { 1006,	3,	1,	81,	0,	0, 0xa54000b05ULL, NULL, NULL, OperandInfo141 },  // Inst #1006 = Int_VCVTSI2SDrr
  { 1007,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0xe54000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #1007 = Int_VCVTSI2SS64rm
  { 1008,	3,	1,	81,	0,	0, 0xe54000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #1008 = Int_VCVTSI2SS64rr
  { 1009,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0xa54000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #1009 = Int_VCVTSI2SSrm
  { 1010,	3,	1,	81,	0,	0, 0xa54000c05ULL, NULL, NULL, OperandInfo141 },  // Inst #1010 = Int_VCVTSI2SSrr
  { 1011,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xab4000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #1011 = Int_VCVTSS2SDrm
  { 1012,	3,	1,	79,	0,	0, 0xab4000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #1012 = Int_VCVTSS2SDrr
  { 1013,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x658000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #1013 = Int_VCVTTSD2SI64rm
  { 1014,	2,	1,	77,	0,	0, 0x658000b05ULL, NULL, NULL, OperandInfo96 },  // Inst #1014 = Int_VCVTTSD2SI64rr
  { 1015,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x258000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #1015 = Int_VCVTTSD2SIrm
  { 1016,	2,	1,	77,	0,	0, 0x258000b05ULL, NULL, NULL, OperandInfo97 },  // Inst #1016 = Int_VCVTTSD2SIrr
  { 1017,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x658000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #1017 = Int_VCVTTSS2SI64rm
  { 1018,	2,	1,	83,	0,	0, 0x658000c05ULL, NULL, NULL, OperandInfo96 },  // Inst #1018 = Int_VCVTTSS2SI64rr
  { 1019,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x258000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #1019 = Int_VCVTTSS2SIrm
  { 1020,	2,	1,	85,	0,	0, 0x258000c05ULL, NULL, NULL, OperandInfo97 },  // Inst #1020 = Int_VCVTTSS2SIrr
  { 1021,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x25c000146ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #1021 = Int_VUCOMISDrm
  { 1022,	2,	0,	63,	0,	0, 0x25c000145ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #1022 = Int_VUCOMISDrr
  { 1023,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x25c000106ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #1023 = Int_VUCOMISSrm
  { 1024,	2,	0,	63,	0,	0, 0x25c000105ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #1024 = Int_VUCOMISSrr
  { 1025,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe6008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1025 = JAE_1
  { 1026,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x106018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1026 = JAE_4
  { 1027,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xee008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1027 = JA_1
  { 1028,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10e018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1028 = JA_4
  { 1029,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xec008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1029 = JBE_1
  { 1030,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10c018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1030 = JBE_4
  { 1031,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe4008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1031 = JB_1
  { 1032,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x104018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1032 = JB_4
  { 1033,	1,	0,	184,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008081ULL, ImplicitList35, NULL, OperandInfo72 },  // Inst #1033 = JCXZ
  { 1034,	1,	0,	184,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008001ULL, ImplicitList36, NULL, OperandInfo72 },  // Inst #1034 = JECXZ_32
  { 1035,	1,	0,	184,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008081ULL, ImplicitList36, NULL, OperandInfo72 },  // Inst #1035 = JECXZ_64
  { 1036,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe8008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1036 = JE_1
  { 1037,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x108018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1037 = JE_4
  { 1038,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfa008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1038 = JGE_1
  { 1039,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11a018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1039 = JGE_4
  { 1040,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfe008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1040 = JG_1
  { 1041,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11e018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1041 = JG_4
  { 1042,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfc008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1042 = JLE_1
  { 1043,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11c018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1043 = JLE_4
  { 1044,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf8008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1044 = JL_1
  { 1045,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x118018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1045 = JL_4
  { 1046,	5,	0,	185,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x1fe00001cULL, NULL, NULL, OperandInfo40 },  // Inst #1046 = JMP32m
  { 1047,	1,	0,	186,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1fe000014ULL, NULL, NULL, OperandInfo71 },  // Inst #1047 = JMP32r
  { 1048,	5,	0,	185,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x1fe00001cULL, NULL, NULL, OperandInfo40 },  // Inst #1048 = JMP64m
  { 1049,	1,	0,	187,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d2000001ULL, NULL, NULL, OperandInfo72 },  // Inst #1049 = JMP64pcrel32
  { 1050,	1,	0,	186,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1fe000014ULL, NULL, NULL, OperandInfo73 },  // Inst #1050 = JMP64r
  { 1051,	1,	0,	187,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d6008001ULL, NULL, NULL, OperandInfo72 },  // Inst #1051 = JMP_1
  { 1052,	1,	0,	187,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1d2018001ULL, NULL, NULL, OperandInfo72 },  // Inst #1052 = JMP_4
  { 1053,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xea008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1053 = JNE_1
  { 1054,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10a018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1054 = JNE_4
  { 1055,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe2008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1055 = JNO_1
  { 1056,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x102018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1056 = JNO_4
  { 1057,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf6008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1057 = JNP_1
  { 1058,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x116018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1058 = JNP_4
  { 1059,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf2008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1059 = JNS_1
  { 1060,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x112018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1060 = JNS_4
  { 1061,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe0008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1061 = JO_1
  { 1062,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x100018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1062 = JO_4
  { 1063,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf4008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1063 = JP_1
  { 1064,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x114018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1064 = JP_4
  { 1065,	1,	0,	184,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008001ULL, ImplicitList37, NULL, OperandInfo72 },  // Inst #1065 = JRCXZ
  { 1066,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf0008001ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1066 = JS_1
  { 1067,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x110018101ULL, ImplicitList3, NULL, OperandInfo72 },  // Inst #1067 = JS_4
  { 1068,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a94000105ULL, NULL, NULL, OperandInfo142 },  // Inst #1068 = KADDWrr
  { 1069,	3,	1,	0,	0,	0, 0x4a84000105ULL, NULL, NULL, OperandInfo142 },  // Inst #1069 = KANDNWrr
  { 1070,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a82000105ULL, NULL, NULL, OperandInfo142 },  // Inst #1070 = KANDWrr
  { 1071,	2,	1,	0,	0,	0, 0x320000105ULL, NULL, NULL, OperandInfo143 },  // Inst #1071 = KMOVWkk
  { 1072,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x320000106ULL, NULL, NULL, OperandInfo144 },  // Inst #1072 = KMOVWkm
  { 1073,	2,	1,	0,	0,	0, 0x324000105ULL, NULL, NULL, OperandInfo145 },  // Inst #1073 = KMOVWkr
  { 1074,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x322000104ULL, NULL, NULL, OperandInfo146 },  // Inst #1074 = KMOVWmk
  { 1075,	2,	1,	0,	0,	0, 0x326000105ULL, NULL, NULL, OperandInfo147 },  // Inst #1075 = KMOVWrk
  { 1076,	2,	1,	0,	0,	0, 0x288000105ULL, NULL, NULL, OperandInfo143 },  // Inst #1076 = KNOTWrr
  { 1077,	2,	0,	0,	0,	0, 0x330000105ULL, NULL, ImplicitList3, OperandInfo143 },  // Inst #1077 = KORTESTWrr
  { 1078,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a8a000105ULL, NULL, NULL, OperandInfo142 },  // Inst #1078 = KORWrr
  { 1079,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo148 },  // Inst #1079 = KSET0B
  { 1080,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo149 },  // Inst #1080 = KSET0W
  { 1081,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo148 },  // Inst #1081 = KSET1B
  { 1082,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo149 },  // Inst #1082 = KSET1W
  { 1083,	3,	1,	0,	0,	0, 0x664004e45ULL, NULL, NULL, OperandInfo150 },  // Inst #1083 = KSHIFTLWri
  { 1084,	3,	1,	0,	0,	0, 0x660004e45ULL, NULL, NULL, OperandInfo150 },  // Inst #1084 = KSHIFTRWri
  { 1085,	2,	0,	0,	0,	0, 0x332000105ULL, NULL, ImplicitList3, OperandInfo143 },  // Inst #1085 = KTESTWrr
  { 1086,	3,	1,	0,	0,	0, 0x4a96000145ULL, NULL, NULL, OperandInfo151 },  // Inst #1086 = KUNPCKBWrr
  { 1087,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a8c000105ULL, NULL, NULL, OperandInfo142 },  // Inst #1087 = KXNORWrr
  { 1088,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a8e000105ULL, NULL, NULL, OperandInfo142 },  // Inst #1088 = KXORWrr
  { 1089,	0,	0,	188,	0,	0, 0x13e000001ULL, ImplicitList3, ImplicitList38, 0 },  // Inst #1089 = LAHF
  { 1090,	6,	1,	189,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1090 = LAR16rm
  { 1091,	2,	1,	190,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000145ULL, NULL, NULL, OperandInfo57 },  // Inst #1091 = LAR16rr
  { 1092,	6,	1,	189,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1092 = LAR32rm
  { 1093,	2,	1,	190,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000105ULL, NULL, NULL, OperandInfo32 },  // Inst #1093 = LAR32rr
  { 1094,	6,	1,	189,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1094 = LAR64rm
  { 1095,	2,	1,	190,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4002105ULL, NULL, NULL, OperandInfo152 },  // Inst #1095 = LAR64rr
  { 1096,	6,	0,	191,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162100144ULL, ImplicitList7, ImplicitList2, OperandInfo16 },  // Inst #1096 = LCMPXCHG16
  { 1097,	5,	0,	192,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18e102119ULL, ImplicitList22, ImplicitList23, OperandInfo40 },  // Inst #1097 = LCMPXCHG16B
  { 1098,	6,	0,	191,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162100104ULL, ImplicitList8, ImplicitList4, OperandInfo20 },  // Inst #1098 = LCMPXCHG32
  { 1099,	6,	0,	191,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162102104ULL, ImplicitList9, ImplicitList5, OperandInfo24 },  // Inst #1099 = LCMPXCHG64
  { 1100,	6,	0,	193,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x160100104ULL, ImplicitList10, ImplicitList6, OperandInfo28 },  // Inst #1100 = LCMPXCHG8
  { 1101,	5,	0,	194,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18e100119ULL, ImplicitList24, ImplicitList25, OperandInfo40 },  // Inst #1101 = LCMPXCHG8B
  { 1102,	6,	1,	195,	0,	0|(1<<MCID::MayLoad), 0x1e1000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #1102 = LDDQUrm
  { 1103,	5,	0,	196,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c80011aULL, NULL, NULL, OperandInfo40 },  // Inst #1103 = LDMXCSR
  { 1104,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18a000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1104 = LDS16rm
  { 1105,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18a000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1105 = LDS32rm
  { 1106,	0,	0,	198,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1dc000401ULL, NULL, ImplicitList1, 0 },  // Inst #1106 = LD_F0
  { 1107,	0,	0,	199,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000401ULL, NULL, ImplicitList1, 0 },  // Inst #1107 = LD_F1
  { 1108,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b2000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1108 = LD_F32m
  { 1109,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ba000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1109 = LD_F64m
  { 1110,	5,	0,	201,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b600001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1110 = LD_F80m
  { 1111,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo153 },  // Inst #1111 = LD_Fp032
  { 1112,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo154 },  // Inst #1112 = LD_Fp064
  { 1113,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo120 },  // Inst #1113 = LD_Fp080
  { 1114,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo153 },  // Inst #1114 = LD_Fp132
  { 1115,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo154 },  // Inst #1115 = LD_Fp164
  { 1116,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo120 },  // Inst #1116 = LD_Fp180
  { 1117,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #1117 = LD_Fp32m
  { 1118,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #1118 = LD_Fp32m64
  { 1119,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #1119 = LD_Fp32m80
  { 1120,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #1120 = LD_Fp64m
  { 1121,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #1121 = LD_Fp64m80
  { 1122,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #1122 = LD_Fp80m
  { 1123,	1,	0,	202,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000402ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #1123 = LD_Frr
  { 1124,	6,	1,	203,	0,	0, 0x11a000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1124 = LEA16r
  { 1125,	6,	1,	204,	0,	0|(1<<MCID::Rematerializable), 0x11a000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1125 = LEA32r
  { 1126,	6,	1,	204,	0,	0, 0x11a000006ULL, NULL, NULL, OperandInfo155 },  // Inst #1126 = LEA64_32r
  { 1127,	6,	1,	204,	0,	0|(1<<MCID::Rematerializable), 0x11a002006ULL, NULL, NULL, OperandInfo156 },  // Inst #1127 = LEA64r
  { 1128,	0,	0,	205,	0,	0|(1<<MCID::MayLoad), 0x192000001ULL, ImplicitList39, ImplicitList39, 0 },  // Inst #1128 = LEAVE
  { 1129,	0,	0,	205,	0,	0|(1<<MCID::MayLoad), 0x192000001ULL, ImplicitList40, ImplicitList40, 0 },  // Inst #1129 = LEAVE64
  { 1130,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x188000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1130 = LES16rm
  { 1131,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x188000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1131 = LES32rm
  { 1132,	0,	0,	206,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000129ULL, NULL, NULL, 0 },  // Inst #1132 = LFENCE
  { 1133,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1133 = LFS16rm
  { 1134,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1134 = LFS32rm
  { 1135,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1135 = LFS64rm
  { 1136,	5,	0,	207,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200015aULL, NULL, NULL, OperandInfo40 },  // Inst #1136 = LGDT16m
  { 1137,	5,	0,	207,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011aULL, NULL, NULL, OperandInfo40 },  // Inst #1137 = LGDTm
  { 1138,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1138 = LGS16rm
  { 1139,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1139 = LGS32rm
  { 1140,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1140 = LGS64rm
  { 1141,	5,	0,	208,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200015bULL, NULL, NULL, OperandInfo40 },  // Inst #1141 = LIDT16m
  { 1142,	5,	0,	208,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011bULL, NULL, NULL, OperandInfo40 },  // Inst #1142 = LIDTm
  { 1143,	5,	0,	209,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11aULL, NULL, NULL, OperandInfo40 },  // Inst #1143 = LLDT16m
  { 1144,	1,	0,	210,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x112ULL, NULL, NULL, OperandInfo112 },  // Inst #1144 = LLDT16r
  { 1145,	5,	0,	211,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011eULL, NULL, NULL, OperandInfo40 },  // Inst #1145 = LMSW16m
  { 1146,	1,	0,	212,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000116ULL, NULL, NULL, OperandInfo112 },  // Inst #1146 = LMSW16r
  { 1147,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c058ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1147 = LOCK_ADD16mi
  { 1148,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104058ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1148 = LOCK_ADD16mi8
  { 1149,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2100044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #1149 = LOCK_ADD16mr
  { 1150,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102114018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1150 = LOCK_ADD32mi
  { 1151,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1151 = LOCK_ADD32mi8
  { 1152,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2100004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #1152 = LOCK_ADD32mr
  { 1153,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102116018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1153 = LOCK_ADD64mi32
  { 1154,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106106018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1154 = LOCK_ADD64mi8
  { 1155,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2102004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #1155 = LOCK_ADD64mr
  { 1156,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100104018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1156 = LOCK_ADD8mi
  { 1157,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #1157 = LOCK_ADD8mr
  { 1158,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c05cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1158 = LOCK_AND16mi
  { 1159,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610405cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1159 = LOCK_AND16mi8
  { 1160,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42100044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #1160 = LOCK_AND16mr
  { 1161,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1161 = LOCK_AND32mi
  { 1162,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1162 = LOCK_AND32mi8
  { 1163,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42100004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #1163 = LOCK_AND32mr
  { 1164,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1164 = LOCK_AND64mi32
  { 1165,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1165 = LOCK_AND64mi8
  { 1166,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42102004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #1166 = LOCK_AND64mr
  { 1167,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1167 = LOCK_AND8mi
  { 1168,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x40100004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #1168 = LOCK_AND8mr
  { 1169,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100059ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1169 = LOCK_DEC16m
  { 1170,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1170 = LOCK_DEC32m
  { 1171,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe102019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1171 = LOCK_DEC64m
  { 1172,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fc100019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1172 = LOCK_DEC8m
  { 1173,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100058ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1173 = LOCK_INC16m
  { 1174,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1174 = LOCK_INC32m
  { 1175,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe102018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1175 = LOCK_INC64m
  { 1176,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fc100018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1176 = LOCK_INC8m
  { 1177,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c059ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1177 = LOCK_OR16mi
  { 1178,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104059ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1178 = LOCK_OR16mi8
  { 1179,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12100044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #1179 = LOCK_OR16mr
  { 1180,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102114019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1180 = LOCK_OR32mi
  { 1181,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1181 = LOCK_OR32mi8
  { 1182,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12100004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #1182 = LOCK_OR32mr
  { 1183,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102116019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1183 = LOCK_OR64mi32
  { 1184,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106106019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1184 = LOCK_OR64mi8
  { 1185,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12102004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #1185 = LOCK_OR64mr
  { 1186,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100104019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1186 = LOCK_OR8mi
  { 1187,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10100004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #1187 = LOCK_OR8mr
  { 1188,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000001ULL, NULL, NULL, 0 },  // Inst #1188 = LOCK_PREFIX
  { 1189,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c05dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1189 = LOCK_SUB16mi
  { 1190,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610405dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1190 = LOCK_SUB16mi8
  { 1191,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52100044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #1191 = LOCK_SUB16mr
  { 1192,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1192 = LOCK_SUB32mi
  { 1193,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1193 = LOCK_SUB32mi8
  { 1194,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52100004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #1194 = LOCK_SUB32mr
  { 1195,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1195 = LOCK_SUB64mi32
  { 1196,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1196 = LOCK_SUB64mi8
  { 1197,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52102004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #1197 = LOCK_SUB64mr
  { 1198,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1198 = LOCK_SUB8mi
  { 1199,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x50100004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #1199 = LOCK_SUB8mr
  { 1200,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c05eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1200 = LOCK_XOR16mi
  { 1201,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610405eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1201 = LOCK_XOR16mi8
  { 1202,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62100044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #1202 = LOCK_XOR16mr
  { 1203,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1203 = LOCK_XOR32mi
  { 1204,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1204 = LOCK_XOR32mi8
  { 1205,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62100004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #1205 = LOCK_XOR32mr
  { 1206,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1206 = LOCK_XOR64mi32
  { 1207,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1207 = LOCK_XOR64mi8
  { 1208,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62102004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #1208 = LOCK_XOR64mr
  { 1209,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1209 = LOCK_XOR8mi
  { 1210,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x60100004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #1210 = LOCK_XOR8mr
  { 1211,	0,	0,	215,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x158000001ULL, NULL, NULL, 0 },  // Inst #1211 = LODSB
  { 1212,	0,	0,	215,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a000001ULL, NULL, NULL, 0 },  // Inst #1212 = LODSD
  { 1213,	0,	0,	215,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a002001ULL, NULL, NULL, 0 },  // Inst #1213 = LODSQ
  { 1214,	0,	0,	215,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a000041ULL, NULL, NULL, 0 },  // Inst #1214 = LODSW
  { 1215,	1,	0,	216,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c4008001ULL, NULL, NULL, OperandInfo72 },  // Inst #1215 = LOOP
  { 1216,	1,	0,	217,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c2008001ULL, NULL, NULL, OperandInfo72 },  // Inst #1216 = LOOPE
  { 1217,	1,	0,	218,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0008001ULL, NULL, NULL, OperandInfo72 },  // Inst #1217 = LOOPNE
  { 1218,	1,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1940ec001ULL, NULL, NULL, OperandInfo2 },  // Inst #1218 = LRETI
  { 1219,	1,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1940ec041ULL, NULL, NULL, OperandInfo2 },  // Inst #1219 = LRETIW
  { 1220,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e0001ULL, NULL, NULL, 0 },  // Inst #1220 = LRETL
  { 1221,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e2001ULL, NULL, NULL, 0 },  // Inst #1221 = LRETQ
  { 1222,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e0041ULL, NULL, NULL, 0 },  // Inst #1222 = LRETW
  { 1223,	6,	1,	220,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1223 = LSL16rm
  { 1224,	2,	1,	221,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000145ULL, NULL, NULL, OperandInfo57 },  // Inst #1224 = LSL16rr
  { 1225,	6,	1,	220,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1225 = LSL32rm
  { 1226,	2,	1,	221,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000105ULL, NULL, NULL, OperandInfo32 },  // Inst #1226 = LSL32rr
  { 1227,	6,	1,	220,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1227 = LSL64rm
  { 1228,	2,	1,	221,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6002105ULL, NULL, NULL, OperandInfo33 },  // Inst #1228 = LSL64rr
  { 1229,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1229 = LSS16rm
  { 1230,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1230 = LSS32rm
  { 1231,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1231 = LSS64rm
  { 1232,	5,	0,	222,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11bULL, NULL, NULL, OperandInfo40 },  // Inst #1232 = LTRm
  { 1233,	1,	0,	222,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x113ULL, NULL, NULL, OperandInfo112 },  // Inst #1233 = LTRr
  { 1234,	7,	1,	223,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182100146ULL, NULL, ImplicitList3, OperandInfo18 },  // Inst #1234 = LXADD16
  { 1235,	7,	1,	223,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182100106ULL, NULL, ImplicitList3, OperandInfo22 },  // Inst #1235 = LXADD32
  { 1236,	7,	1,	223,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182102106ULL, NULL, ImplicitList3, OperandInfo26 },  // Inst #1236 = LXADD64
  { 1237,	7,	1,	224,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180100106ULL, NULL, ImplicitList3, OperandInfo30 },  // Inst #1237 = LXADD8
  { 1238,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17a000c46ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #1238 = LZCNT16rm
  { 1239,	2,	1,	0,	0,	0, 0x17a000c45ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #1239 = LZCNT16rr
  { 1240,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17a000c06ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #1240 = LZCNT32rm
  { 1241,	2,	1,	0,	0,	0, 0x17a000c05ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #1241 = LZCNT32rr
  { 1242,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17a002c06ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #1242 = LZCNT64rm
  { 1243,	2,	1,	0,	0,	0, 0x17a002c05ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #1243 = LZCNT64rr
  { 1244,	2,	0,	225,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ef800145ULL, ImplicitList41, NULL, OperandInfo50 },  // Inst #1244 = MASKMOVDQU
  { 1245,	2,	0,	225,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ef800145ULL, ImplicitList42, NULL, OperandInfo50 },  // Inst #1245 = MASKMOVDQU64
  { 1246,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xbf000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1246 = MAXCPDrm
  { 1247,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xbf000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1247 = MAXCPDrr
  { 1248,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xbe800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1248 = MAXCPSrm
  { 1249,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xbe800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1249 = MAXCPSrr
  { 1250,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xbe000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1250 = MAXCSDrm
  { 1251,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0xbe000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1251 = MAXCSDrr
  { 1252,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xbe000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1252 = MAXCSSrm
  { 1253,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0xbe000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1253 = MAXCSSrr
  { 1254,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xbf000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1254 = MAXPDrm
  { 1255,	3,	1,	11,	0,	0, 0xbf000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1255 = MAXPDrr
  { 1256,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xbe800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1256 = MAXPSrm
  { 1257,	3,	1,	13,	0,	0, 0xbe800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1257 = MAXPSrr
  { 1258,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xbe000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1258 = MAXSDrm
  { 1259,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xbe000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1259 = MAXSDrm_Int
  { 1260,	3,	1,	15,	0,	0, 0xbe000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1260 = MAXSDrr
  { 1261,	3,	1,	15,	0,	0, 0xbe000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1261 = MAXSDrr_Int
  { 1262,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xbe000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1262 = MAXSSrm
  { 1263,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xbe000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #1263 = MAXSSrm_Int
  { 1264,	3,	1,	17,	0,	0, 0xbe000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1264 = MAXSSrr
  { 1265,	3,	1,	17,	0,	0, 0xbe000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #1265 = MAXSSrr_Int
  { 1266,	0,	0,	226,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c00012aULL, NULL, NULL, 0 },  // Inst #1266 = MFENCE
  { 1267,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xbb000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1267 = MINCPDrm
  { 1268,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xbb000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1268 = MINCPDrr
  { 1269,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xba800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1269 = MINCPSrm
  { 1270,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xba800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1270 = MINCPSrr
  { 1271,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xba000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1271 = MINCSDrm
  { 1272,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0xba000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1272 = MINCSDrr
  { 1273,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xba000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1273 = MINCSSrm
  { 1274,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0xba000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1274 = MINCSSrr
  { 1275,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xbb000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1275 = MINPDrm
  { 1276,	3,	1,	11,	0,	0, 0xbb000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1276 = MINPDrr
  { 1277,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xba800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1277 = MINPSrm
  { 1278,	3,	1,	13,	0,	0, 0xba800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1278 = MINPSrr
  { 1279,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xba000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1279 = MINSDrm
  { 1280,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xba000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1280 = MINSDrm_Int
  { 1281,	3,	1,	15,	0,	0, 0xba000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1281 = MINSDrr
  { 1282,	3,	1,	15,	0,	0, 0xba000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1282 = MINSDrr_Int
  { 1283,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xba000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1283 = MINSSrm
  { 1284,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xba000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #1284 = MINSSrm_Int
  { 1285,	3,	1,	17,	0,	0, 0xba000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1285 = MINSSrr
  { 1286,	3,	1,	17,	0,	0, 0xba000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #1286 = MINSSrr_Int
  { 1287,	6,	1,	227,	0,	0|(1<<MCID::MayLoad), 0x5b000146ULL, NULL, NULL, OperandInfo157 },  // Inst #1287 = MMX_CVTPD2PIirm
  { 1288,	2,	1,	228,	0,	0, 0x5b000145ULL, NULL, NULL, OperandInfo158 },  // Inst #1288 = MMX_CVTPD2PIirr
  { 1289,	6,	1,	227,	0,	0|(1<<MCID::MayLoad), 0x55000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1289 = MMX_CVTPI2PDirm
  { 1290,	2,	1,	228,	0,	0, 0x55000145ULL, NULL, NULL, OperandInfo159 },  // Inst #1290 = MMX_CVTPI2PDirr
  { 1291,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x54800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1291 = MMX_CVTPI2PSirm
  { 1292,	3,	1,	0,	0,	0, 0x54800105ULL, NULL, NULL, OperandInfo160 },  // Inst #1292 = MMX_CVTPI2PSirr
  { 1293,	6,	1,	229,	0,	0|(1<<MCID::MayLoad), 0x5a800106ULL, NULL, NULL, OperandInfo157 },  // Inst #1293 = MMX_CVTPS2PIirm
  { 1294,	2,	1,	230,	0,	0, 0x5a800105ULL, NULL, NULL, OperandInfo158 },  // Inst #1294 = MMX_CVTPS2PIirr
  { 1295,	6,	1,	227,	0,	0|(1<<MCID::MayLoad), 0x59000146ULL, NULL, NULL, OperandInfo157 },  // Inst #1295 = MMX_CVTTPD2PIirm
  { 1296,	2,	1,	228,	0,	0, 0x59000145ULL, NULL, NULL, OperandInfo158 },  // Inst #1296 = MMX_CVTTPD2PIirr
  { 1297,	6,	1,	229,	0,	0|(1<<MCID::MayLoad), 0x58800106ULL, NULL, NULL, OperandInfo157 },  // Inst #1297 = MMX_CVTTPS2PIirm
  { 1298,	2,	1,	230,	0,	0, 0x58800105ULL, NULL, NULL, OperandInfo158 },  // Inst #1298 = MMX_CVTTPS2PIirr
  { 1299,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xee000101ULL, NULL, NULL, 0 },  // Inst #1299 = MMX_EMMS
  { 1300,	2,	0,	231,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ee000105ULL, ImplicitList41, NULL, OperandInfo161 },  // Inst #1300 = MMX_MASKMOVQ
  { 1301,	2,	0,	231,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ee000105ULL, ImplicitList42, NULL, OperandInfo161 },  // Inst #1301 = MMX_MASKMOVQ64
  { 1302,	2,	1,	232,	0,	0|(1<<MCID::Bitcast), 0xfc002103ULL, NULL, NULL, OperandInfo162 },  // Inst #1302 = MMX_MOVD64from64rr
  { 1303,	2,	1,	232,	0,	0, 0xfc000103ULL, NULL, NULL, OperandInfo163 },  // Inst #1303 = MMX_MOVD64grr
  { 1304,	6,	0,	233,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xfc000104ULL, NULL, NULL, OperandInfo164 },  // Inst #1304 = MMX_MOVD64mr
  { 1305,	6,	1,	234,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xdc000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1305 = MMX_MOVD64rm
  { 1306,	2,	1,	235,	0,	0, 0xdc000105ULL, NULL, NULL, OperandInfo165 },  // Inst #1306 = MMX_MOVD64rr
  { 1307,	2,	1,	235,	0,	0|(1<<MCID::Bitcast), 0xdc002105ULL, NULL, NULL, OperandInfo166 },  // Inst #1307 = MMX_MOVD64rrv164
  { 1308,	2,	1,	235,	0,	0, 0xdc002105ULL, NULL, NULL, OperandInfo166 },  // Inst #1308 = MMX_MOVD64to64rr
  { 1309,	2,	1,	236,	0,	0, 0x1ac004b05ULL, NULL, NULL, OperandInfo158 },  // Inst #1309 = MMX_MOVDQ2Qrr
  { 1310,	2,	1,	236,	0,	0, 0x1ac004b05ULL, NULL, NULL, OperandInfo167 },  // Inst #1310 = MMX_MOVFR642Qrr
  { 1311,	6,	0,	237,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ce000104ULL, NULL, NULL, OperandInfo164 },  // Inst #1311 = MMX_MOVNTQmr
  { 1312,	2,	1,	238,	0,	0, 0x1ac004c05ULL, NULL, NULL, OperandInfo159 },  // Inst #1312 = MMX_MOVQ2DQrr
  { 1313,	2,	1,	238,	0,	0, 0x1ac004c05ULL, NULL, NULL, OperandInfo168 },  // Inst #1313 = MMX_MOVQ2FR64rr
  { 1314,	6,	0,	239,	0,	0|(1<<MCID::MayStore), 0xfe000104ULL, NULL, NULL, OperandInfo164 },  // Inst #1314 = MMX_MOVQ64mr
  { 1315,	6,	1,	239,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xde000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1315 = MMX_MOVQ64rm
  { 1316,	2,	1,	236,	0,	0, 0xde000105ULL, NULL, NULL, OperandInfo161 },  // Inst #1316 = MMX_MOVQ64rr
  { 1317,	6,	1,	234,	0,	0|(1<<MCID::MayLoad), 0xdc000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1317 = MMX_MOVZDI2PDIrm
  { 1318,	2,	1,	235,	0,	0, 0xdc000105ULL, NULL, NULL, OperandInfo165 },  // Inst #1318 = MMX_MOVZDI2PDIrr
  { 1319,	6,	1,	240,	0,	0|(1<<MCID::MayLoad), 0x39800d06ULL, NULL, NULL, OperandInfo157 },  // Inst #1319 = MMX_PABSBrm64
  { 1320,	2,	1,	241,	0,	0, 0x39800d05ULL, NULL, NULL, OperandInfo161 },  // Inst #1320 = MMX_PABSBrr64
  { 1321,	6,	1,	240,	0,	0|(1<<MCID::MayLoad), 0x3d800d06ULL, NULL, NULL, OperandInfo157 },  // Inst #1321 = MMX_PABSDrm64
  { 1322,	2,	1,	241,	0,	0, 0x3d800d05ULL, NULL, NULL, OperandInfo161 },  // Inst #1322 = MMX_PABSDrr64
  { 1323,	6,	1,	240,	0,	0|(1<<MCID::MayLoad), 0x3b800d06ULL, NULL, NULL, OperandInfo157 },  // Inst #1323 = MMX_PABSWrm64
  { 1324,	2,	1,	241,	0,	0, 0x3b800d05ULL, NULL, NULL, OperandInfo161 },  // Inst #1324 = MMX_PABSWrr64
  { 1325,	7,	1,	242,	0,	0|(1<<MCID::MayLoad), 0xd6000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1325 = MMX_PACKSSDWirm
  { 1326,	3,	1,	243,	0,	0, 0xd6000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1326 = MMX_PACKSSDWirr
  { 1327,	7,	1,	242,	0,	0|(1<<MCID::MayLoad), 0xc6000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1327 = MMX_PACKSSWBirm
  { 1328,	3,	1,	243,	0,	0, 0xc6000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1328 = MMX_PACKSSWBirr
  { 1329,	7,	1,	242,	0,	0|(1<<MCID::MayLoad), 0xce000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1329 = MMX_PACKUSWBirm
  { 1330,	3,	1,	243,	0,	0, 0xce000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1330 = MMX_PACKUSWBirr
  { 1331,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1f8000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1331 = MMX_PADDBirm
  { 1332,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1f8000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1332 = MMX_PADDBirr
  { 1333,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1fc000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1333 = MMX_PADDDirm
  { 1334,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1fc000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1334 = MMX_PADDDirr
  { 1335,	7,	1,	245,	0,	0|(1<<MCID::MayLoad), 0x1a8000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1335 = MMX_PADDQirm
  { 1336,	3,	1,	246,	0,	0|(1<<MCID::Commutable), 0x1a8000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1336 = MMX_PADDQirr
  { 1337,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1d8000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1337 = MMX_PADDSBirm
  { 1338,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1d8000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1338 = MMX_PADDSBirr
  { 1339,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1da000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1339 = MMX_PADDSWirm
  { 1340,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1da000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1340 = MMX_PADDSWirr
  { 1341,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1b8000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1341 = MMX_PADDUSBirm
  { 1342,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1b8000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1342 = MMX_PADDUSBirr
  { 1343,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1ba000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1343 = MMX_PADDUSWirm
  { 1344,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1ba000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1344 = MMX_PADDUSWirr
  { 1345,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1fa000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1345 = MMX_PADDWirm
  { 1346,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1fa000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1346 = MMX_PADDWirr
  { 1347,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1f804e06ULL, NULL, NULL, OperandInfo171 },  // Inst #1347 = MMX_PALIGNR64irm
  { 1348,	4,	1,	0,	0,	0, 0x1f804e05ULL, NULL, NULL, OperandInfo172 },  // Inst #1348 = MMX_PALIGNR64irr
  { 1349,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1be000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1349 = MMX_PANDNirm
  { 1350,	3,	1,	241,	0,	0, 0x1be000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1350 = MMX_PANDNirr
  { 1351,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1b6000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1351 = MMX_PANDirm
  { 1352,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1b6000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1352 = MMX_PANDirr
  { 1353,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1c0000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1353 = MMX_PAVGBirm
  { 1354,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1c0000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1354 = MMX_PAVGBirr
  { 1355,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1c6000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1355 = MMX_PAVGWirm
  { 1356,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1c6000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1356 = MMX_PAVGWirr
  { 1357,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xe8000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1357 = MMX_PCMPEQBirm
  { 1358,	3,	1,	241,	0,	0, 0xe8000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1358 = MMX_PCMPEQBirr
  { 1359,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xec000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1359 = MMX_PCMPEQDirm
  { 1360,	3,	1,	241,	0,	0, 0xec000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1360 = MMX_PCMPEQDirr
  { 1361,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xea000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1361 = MMX_PCMPEQWirm
  { 1362,	3,	1,	241,	0,	0, 0xea000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1362 = MMX_PCMPEQWirr
  { 1363,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xc8000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1363 = MMX_PCMPGTBirm
  { 1364,	3,	1,	241,	0,	0, 0xc8000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1364 = MMX_PCMPGTBirr
  { 1365,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xcc000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1365 = MMX_PCMPGTDirm
  { 1366,	3,	1,	241,	0,	0, 0xcc000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1366 = MMX_PCMPGTDirr
  { 1367,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xca000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1367 = MMX_PCMPGTWirm
  { 1368,	3,	1,	241,	0,	0, 0xca000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1368 = MMX_PCMPGTWirr
  { 1369,	3,	1,	249,	0,	0, 0x18a004105ULL, NULL, NULL, OperandInfo173 },  // Inst #1369 = MMX_PEXTRWirri
  { 1370,	7,	1,	250,	0,	0|(1<<MCID::MayLoad), 0x7800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1370 = MMX_PHADDSWrm64
  { 1371,	3,	1,	251,	0,	0, 0x7800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1371 = MMX_PHADDSWrr64
  { 1372,	7,	1,	250,	0,	0|(1<<MCID::MayLoad), 0x3800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1372 = MMX_PHADDWrm64
  { 1373,	3,	1,	251,	0,	0, 0x3800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1373 = MMX_PHADDWrr64
  { 1374,	7,	1,	252,	0,	0|(1<<MCID::MayLoad), 0x5800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1374 = MMX_PHADDrm64
  { 1375,	3,	1,	253,	0,	0, 0x5800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1375 = MMX_PHADDrr64
  { 1376,	7,	1,	252,	0,	0|(1<<MCID::MayLoad), 0xd800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1376 = MMX_PHSUBDrm64
  { 1377,	3,	1,	253,	0,	0, 0xd800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1377 = MMX_PHSUBDrr64
  { 1378,	7,	1,	250,	0,	0|(1<<MCID::MayLoad), 0xf800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1378 = MMX_PHSUBSWrm64
  { 1379,	3,	1,	251,	0,	0, 0xf800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1379 = MMX_PHSUBSWrr64
  { 1380,	7,	1,	250,	0,	0|(1<<MCID::MayLoad), 0xb800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1380 = MMX_PHSUBWrm64
  { 1381,	3,	1,	251,	0,	0, 0xb800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1381 = MMX_PHSUBWrr64
  { 1382,	8,	1,	254,	0,	0|(1<<MCID::MayLoad), 0x188004106ULL, NULL, NULL, OperandInfo171 },  // Inst #1382 = MMX_PINSRWirmi
  { 1383,	4,	1,	255,	0,	0, 0x188004105ULL, NULL, NULL, OperandInfo174 },  // Inst #1383 = MMX_PINSRWirri
  { 1384,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x9800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1384 = MMX_PMADDUBSWrm64
  { 1385,	3,	1,	257,	0,	0, 0x9800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1385 = MMX_PMADDUBSWrr64
  { 1386,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1ea000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1386 = MMX_PMADDWDirm
  { 1387,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1ea000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1387 = MMX_PMADDWDirr
  { 1388,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1dc000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1388 = MMX_PMAXSWirm
  { 1389,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1dc000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1389 = MMX_PMAXSWirr
  { 1390,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1bc000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1390 = MMX_PMAXUBirm
  { 1391,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1bc000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1391 = MMX_PMAXUBirr
  { 1392,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1d4000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1392 = MMX_PMINSWirm
  { 1393,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1d4000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1393 = MMX_PMINSWirr
  { 1394,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1b4000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1394 = MMX_PMINUBirm
  { 1395,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1b4000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1395 = MMX_PMINUBirr
  { 1396,	2,	1,	0,	0,	0, 0x1ae000105ULL, NULL, NULL, OperandInfo163 },  // Inst #1396 = MMX_PMOVMSKBrr
  { 1397,	7,	1,	256,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::Commutable), 0x17800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1397 = MMX_PMULHRSWrm64
  { 1398,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x17800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1398 = MMX_PMULHRSWrr64
  { 1399,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1c8000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1399 = MMX_PMULHUWirm
  { 1400,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1c8000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1400 = MMX_PMULHUWirr
  { 1401,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1ca000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1401 = MMX_PMULHWirm
  { 1402,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1ca000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1402 = MMX_PMULHWirr
  { 1403,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1aa000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1403 = MMX_PMULLWirm
  { 1404,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1aa000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1404 = MMX_PMULLWirr
  { 1405,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1e8000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1405 = MMX_PMULUDQirm
  { 1406,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1e8000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1406 = MMX_PMULUDQirr
  { 1407,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1d6000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1407 = MMX_PORirm
  { 1408,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1d6000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1408 = MMX_PORirr
  { 1409,	7,	1,	258,	0,	0|(1<<MCID::MayLoad), 0x1ec000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1409 = MMX_PSADBWirm
  { 1410,	3,	1,	259,	0,	0|(1<<MCID::Commutable), 0x1ec000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1410 = MMX_PSADBWirr
  { 1411,	7,	1,	260,	0,	0|(1<<MCID::MayLoad), 0x1800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1411 = MMX_PSHUFBrm64
  { 1412,	3,	1,	261,	0,	0, 0x1800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1412 = MMX_PSHUFBrr64
  { 1413,	7,	1,	262,	0,	0|(1<<MCID::MayLoad), 0xe0004106ULL, NULL, NULL, OperandInfo175 },  // Inst #1413 = MMX_PSHUFWmi
  { 1414,	3,	1,	261,	0,	0, 0xe0004105ULL, NULL, NULL, OperandInfo176 },  // Inst #1414 = MMX_PSHUFWri
  { 1415,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x11800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1415 = MMX_PSIGNBrm64
  { 1416,	3,	1,	248,	0,	0, 0x11800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1416 = MMX_PSIGNBrr64
  { 1417,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x15800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1417 = MMX_PSIGNDrm64
  { 1418,	3,	1,	248,	0,	0, 0x15800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1418 = MMX_PSIGNDrr64
  { 1419,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x13800d06ULL, NULL, NULL, OperandInfo169 },  // Inst #1419 = MMX_PSIGNWrm64
  { 1420,	3,	1,	248,	0,	0, 0x13800d05ULL, NULL, NULL, OperandInfo170 },  // Inst #1420 = MMX_PSIGNWrr64
  { 1421,	3,	1,	263,	0,	0, 0xe4004116ULL, NULL, NULL, OperandInfo177 },  // Inst #1421 = MMX_PSLLDri
  { 1422,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1e4000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1422 = MMX_PSLLDrm
  { 1423,	3,	1,	265,	0,	0, 0x1e4000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1423 = MMX_PSLLDrr
  { 1424,	3,	1,	263,	0,	0, 0xe6004116ULL, NULL, NULL, OperandInfo177 },  // Inst #1424 = MMX_PSLLQri
  { 1425,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1e6000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1425 = MMX_PSLLQrm
  { 1426,	3,	1,	265,	0,	0, 0x1e6000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1426 = MMX_PSLLQrr
  { 1427,	3,	1,	263,	0,	0, 0xe2004116ULL, NULL, NULL, OperandInfo177 },  // Inst #1427 = MMX_PSLLWri
  { 1428,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1e2000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1428 = MMX_PSLLWrm
  { 1429,	3,	1,	265,	0,	0, 0x1e2000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1429 = MMX_PSLLWrr
  { 1430,	3,	1,	263,	0,	0, 0xe4004114ULL, NULL, NULL, OperandInfo177 },  // Inst #1430 = MMX_PSRADri
  { 1431,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1c4000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1431 = MMX_PSRADrm
  { 1432,	3,	1,	265,	0,	0, 0x1c4000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1432 = MMX_PSRADrr
  { 1433,	3,	1,	263,	0,	0, 0xe2004114ULL, NULL, NULL, OperandInfo177 },  // Inst #1433 = MMX_PSRAWri
  { 1434,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1c2000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1434 = MMX_PSRAWrm
  { 1435,	3,	1,	265,	0,	0, 0x1c2000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1435 = MMX_PSRAWrr
  { 1436,	3,	1,	263,	0,	0, 0xe4004112ULL, NULL, NULL, OperandInfo177 },  // Inst #1436 = MMX_PSRLDri
  { 1437,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1a4000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1437 = MMX_PSRLDrm
  { 1438,	3,	1,	265,	0,	0, 0x1a4000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1438 = MMX_PSRLDrr
  { 1439,	3,	1,	263,	0,	0, 0xe6004112ULL, NULL, NULL, OperandInfo177 },  // Inst #1439 = MMX_PSRLQri
  { 1440,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1a6000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1440 = MMX_PSRLQrm
  { 1441,	3,	1,	265,	0,	0, 0x1a6000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1441 = MMX_PSRLQrr
  { 1442,	3,	1,	263,	0,	0, 0xe2004112ULL, NULL, NULL, OperandInfo177 },  // Inst #1442 = MMX_PSRLWri
  { 1443,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1a2000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1443 = MMX_PSRLWrm
  { 1444,	3,	1,	265,	0,	0, 0x1a2000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1444 = MMX_PSRLWrr
  { 1445,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1f0000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1445 = MMX_PSUBBirm
  { 1446,	3,	1,	241,	0,	0, 0x1f0000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1446 = MMX_PSUBBirr
  { 1447,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1f4000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1447 = MMX_PSUBDirm
  { 1448,	3,	1,	241,	0,	0, 0x1f4000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1448 = MMX_PSUBDirr
  { 1449,	7,	1,	245,	0,	0|(1<<MCID::MayLoad), 0x1f6000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1449 = MMX_PSUBQirm
  { 1450,	3,	1,	246,	0,	0, 0x1f6000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1450 = MMX_PSUBQirr
  { 1451,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1d0000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1451 = MMX_PSUBSBirm
  { 1452,	3,	1,	241,	0,	0, 0x1d0000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1452 = MMX_PSUBSBirr
  { 1453,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1d2000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1453 = MMX_PSUBSWirm
  { 1454,	3,	1,	241,	0,	0, 0x1d2000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1454 = MMX_PSUBSWirr
  { 1455,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1b0000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1455 = MMX_PSUBUSBirm
  { 1456,	3,	1,	241,	0,	0, 0x1b0000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1456 = MMX_PSUBUSBirr
  { 1457,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1b2000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1457 = MMX_PSUBUSWirm
  { 1458,	3,	1,	241,	0,	0, 0x1b2000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1458 = MMX_PSUBUSWirr
  { 1459,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1f2000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1459 = MMX_PSUBWirm
  { 1460,	3,	1,	241,	0,	0, 0x1f2000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1460 = MMX_PSUBWirr
  { 1461,	7,	1,	266,	0,	0|(1<<MCID::MayLoad), 0xd0000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1461 = MMX_PUNPCKHBWirm
  { 1462,	3,	1,	267,	0,	0, 0xd0000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1462 = MMX_PUNPCKHBWirr
  { 1463,	7,	1,	266,	0,	0|(1<<MCID::MayLoad), 0xd4000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1463 = MMX_PUNPCKHDQirm
  { 1464,	3,	1,	267,	0,	0, 0xd4000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1464 = MMX_PUNPCKHDQirr
  { 1465,	7,	1,	266,	0,	0|(1<<MCID::MayLoad), 0xd2000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1465 = MMX_PUNPCKHWDirm
  { 1466,	3,	1,	267,	0,	0, 0xd2000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1466 = MMX_PUNPCKHWDirr
  { 1467,	7,	1,	268,	0,	0|(1<<MCID::MayLoad), 0xc0000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1467 = MMX_PUNPCKLBWirm
  { 1468,	3,	1,	269,	0,	0, 0xc0000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1468 = MMX_PUNPCKLBWirr
  { 1469,	7,	1,	268,	0,	0|(1<<MCID::MayLoad), 0xc4000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1469 = MMX_PUNPCKLDQirm
  { 1470,	3,	1,	269,	0,	0, 0xc4000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1470 = MMX_PUNPCKLDQirr
  { 1471,	7,	1,	268,	0,	0|(1<<MCID::MayLoad), 0xc2000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1471 = MMX_PUNPCKLWDirm
  { 1472,	3,	1,	269,	0,	0, 0xc2000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1472 = MMX_PUNPCKLWDirr
  { 1473,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1de000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1473 = MMX_PXORirm
  { 1474,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1de000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1474 = MMX_PXORirr
  { 1475,	7,	0,	105,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo178 },  // Inst #1475 = MONITOR
  { 1476,	0,	0,	270,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000125ULL, ImplicitList43, NULL, 0 },  // Inst #1476 = MONITORrrr
  { 1477,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000f01ULL, ImplicitList44, ImplicitList45, 0 },  // Inst #1477 = MONTMUL
  { 1478,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #1478 = MORESTACK_RET
  { 1479,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #1479 = MORESTACK_RET_RESTORE_R10
  { 1480,	1,	1,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146014041ULL, NULL, NULL, OperandInfo72 },  // Inst #1480 = MOV16ao16
  { 1481,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x18e00c058ULL, NULL, NULL, OperandInfo15 },  // Inst #1481 = MOV16mi
  { 1482,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x112000044ULL, NULL, NULL, OperandInfo16 },  // Inst #1482 = MOV16mr
  { 1483,	6,	1,	273,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000044ULL, NULL, NULL, OperandInfo179 },  // Inst #1483 = MOV16ms
  { 1484,	1,	0,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142014041ULL, NULL, NULL, OperandInfo72 },  // Inst #1484 = MOV16o16a
  { 1485,	2,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x17000c042ULL, NULL, NULL, OperandInfo68 },  // Inst #1485 = MOV16ri
  { 1486,	6,	1,	275,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1486 = MOV16rm
  { 1487,	2,	1,	274,	0,	0, 0x112000043ULL, NULL, NULL, OperandInfo57 },  // Inst #1487 = MOV16rr
  { 1488,	2,	1,	274,	0,	0, 0x116000045ULL, NULL, NULL, OperandInfo57 },  // Inst #1488 = MOV16rr_REV
  { 1489,	2,	1,	276,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000043ULL, NULL, NULL, OperandInfo180 },  // Inst #1489 = MOV16rs
  { 1490,	6,	1,	277,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000046ULL, NULL, NULL, OperandInfo181 },  // Inst #1490 = MOV16sm
  { 1491,	2,	1,	278,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000045ULL, NULL, NULL, OperandInfo182 },  // Inst #1491 = MOV16sr
  { 1492,	1,	1,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146014001ULL, NULL, NULL, OperandInfo72 },  // Inst #1492 = MOV32ao32
  { 1493,	2,	1,	279,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x44000105ULL, NULL, NULL, OperandInfo183 },  // Inst #1493 = MOV32cr
  { 1494,	2,	1,	280,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46000105ULL, NULL, NULL, OperandInfo184 },  // Inst #1494 = MOV32dr
  { 1495,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x18e014018ULL, NULL, NULL, OperandInfo15 },  // Inst #1495 = MOV32mi
  { 1496,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x112000004ULL, NULL, NULL, OperandInfo20 },  // Inst #1496 = MOV32mr
  { 1497,	6,	1,	273,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000004ULL, NULL, NULL, OperandInfo179 },  // Inst #1497 = MOV32ms
  { 1498,	1,	0,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142014001ULL, NULL, NULL, OperandInfo72 },  // Inst #1498 = MOV32o32a
  { 1499,	1,	1,	281,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x62000020ULL, NULL, ImplicitList3, OperandInfo71 },  // Inst #1499 = MOV32r0
  { 1500,	2,	1,	282,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x40000103ULL, NULL, NULL, OperandInfo185 },  // Inst #1500 = MOV32rc
  { 1501,	2,	1,	283,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42000103ULL, NULL, NULL, OperandInfo186 },  // Inst #1501 = MOV32rd
  { 1502,	2,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x170014002ULL, NULL, NULL, OperandInfo69 },  // Inst #1502 = MOV32ri
  { 1503,	2,	1,	284,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x170014002ULL, NULL, NULL, OperandInfo69 },  // Inst #1503 = MOV32ri64
  { 1504,	6,	1,	275,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1504 = MOV32rm
  { 1505,	2,	1,	274,	0,	0, 0x112000003ULL, NULL, NULL, OperandInfo32 },  // Inst #1505 = MOV32rr
  { 1506,	2,	1,	274,	0,	0, 0x116000005ULL, NULL, NULL, OperandInfo32 },  // Inst #1506 = MOV32rr_REV
  { 1507,	2,	1,	276,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000003ULL, NULL, NULL, OperandInfo187 },  // Inst #1507 = MOV32rs
  { 1508,	6,	1,	277,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000006ULL, NULL, NULL, OperandInfo181 },  // Inst #1508 = MOV32sm
  { 1509,	2,	1,	278,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000005ULL, NULL, NULL, OperandInfo188 },  // Inst #1509 = MOV32sr
  { 1510,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14601c041ULL, NULL, NULL, OperandInfo72 },  // Inst #1510 = MOV64ao16
  { 1511,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14601c001ULL, NULL, NULL, OperandInfo72 },  // Inst #1511 = MOV64ao32
  { 1512,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14601e001ULL, NULL, NULL, OperandInfo72 },  // Inst #1512 = MOV64ao64
  { 1513,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14401c001ULL, NULL, NULL, OperandInfo72 },  // Inst #1513 = MOV64ao8
  { 1514,	2,	1,	279,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x44000105ULL, NULL, NULL, OperandInfo189 },  // Inst #1514 = MOV64cr
  { 1515,	2,	1,	280,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46000105ULL, NULL, NULL, OperandInfo190 },  // Inst #1515 = MOV64dr
  { 1516,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x18e016018ULL, NULL, NULL, OperandInfo15 },  // Inst #1516 = MOV64mi32
  { 1517,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x112002004ULL, NULL, NULL, OperandInfo24 },  // Inst #1517 = MOV64mr
  { 1518,	6,	1,	273,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118002004ULL, NULL, NULL, OperandInfo179 },  // Inst #1518 = MOV64ms
  { 1519,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14201c041ULL, NULL, NULL, OperandInfo72 },  // Inst #1519 = MOV64o16a
  { 1520,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14201c001ULL, NULL, NULL, OperandInfo72 },  // Inst #1520 = MOV64o32a
  { 1521,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14201e001ULL, NULL, NULL, OperandInfo72 },  // Inst #1521 = MOV64o64a
  { 1522,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14001c001ULL, NULL, NULL, OperandInfo72 },  // Inst #1522 = MOV64o8a
  { 1523,	2,	1,	282,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x40000103ULL, NULL, NULL, OperandInfo191 },  // Inst #1523 = MOV64rc
  { 1524,	2,	1,	283,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42000103ULL, NULL, NULL, OperandInfo192 },  // Inst #1524 = MOV64rd
  { 1525,	2,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x17001e002ULL, NULL, NULL, OperandInfo70 },  // Inst #1525 = MOV64ri
  { 1526,	2,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x18e016010ULL, NULL, NULL, OperandInfo70 },  // Inst #1526 = MOV64ri32
  { 1527,	6,	1,	275,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116002006ULL, NULL, NULL, OperandInfo13 },  // Inst #1527 = MOV64rm
  { 1528,	2,	1,	274,	0,	0, 0x112002003ULL, NULL, NULL, OperandInfo33 },  // Inst #1528 = MOV64rr
  { 1529,	2,	1,	274,	0,	0, 0x116002005ULL, NULL, NULL, OperandInfo33 },  // Inst #1529 = MOV64rr_REV
  { 1530,	2,	1,	276,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118002003ULL, NULL, NULL, OperandInfo193 },  // Inst #1530 = MOV64rs
  { 1531,	6,	1,	277,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c002006ULL, NULL, NULL, OperandInfo181 },  // Inst #1531 = MOV64sm
  { 1532,	2,	1,	278,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c002005ULL, NULL, NULL, OperandInfo194 },  // Inst #1532 = MOV64sr
  { 1533,	2,	1,	285,	0,	0, 0xdc002145ULL, NULL, NULL, OperandInfo195 },  // Inst #1533 = MOV64toPQIrr
  { 1534,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo100 },  // Inst #1534 = MOV64toSDrm
  { 1535,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0xdc002145ULL, NULL, NULL, OperandInfo101 },  // Inst #1535 = MOV64toSDrr
  { 1536,	1,	1,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x144014001ULL, NULL, NULL, OperandInfo72 },  // Inst #1536 = MOV8ao8
  { 1537,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x18c004018ULL, NULL, NULL, OperandInfo15 },  // Inst #1537 = MOV8mi
  { 1538,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x110000004ULL, NULL, NULL, OperandInfo28 },  // Inst #1538 = MOV8mr
  { 1539,	6,	0,	272,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x110000004ULL, NULL, NULL, OperandInfo196 },  // Inst #1539 = MOV8mr_NOREX
  { 1540,	1,	0,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140014001ULL, NULL, NULL, OperandInfo72 },  // Inst #1540 = MOV8o8a
  { 1541,	2,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x160004002ULL, NULL, NULL, OperandInfo87 },  // Inst #1541 = MOV8ri
  { 1542,	6,	1,	275,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x114000006ULL, NULL, NULL, OperandInfo14 },  // Inst #1542 = MOV8rm
  { 1543,	6,	1,	275,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x114000006ULL, NULL, NULL, OperandInfo197 },  // Inst #1543 = MOV8rm_NOREX
  { 1544,	2,	1,	274,	0,	0, 0x110000003ULL, NULL, NULL, OperandInfo88 },  // Inst #1544 = MOV8rr
  { 1545,	2,	1,	274,	0,	0, 0x110000003ULL, NULL, NULL, OperandInfo198 },  // Inst #1545 = MOV8rr_NOREX
  { 1546,	2,	1,	274,	0,	0, 0x114000005ULL, NULL, NULL, OperandInfo88 },  // Inst #1546 = MOV8rr_REV
  { 1547,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x53000144ULL, NULL, NULL, OperandInfo199 },  // Inst #1547 = MOVAPDmr
  { 1548,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x51000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1548 = MOVAPDrm
  { 1549,	2,	1,	140,	0,	0, 0x51000145ULL, NULL, NULL, OperandInfo50 },  // Inst #1549 = MOVAPDrr
  { 1550,	2,	1,	140,	0,	0, 0x53000143ULL, NULL, NULL, OperandInfo50 },  // Inst #1550 = MOVAPDrr_REV
  { 1551,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x52800104ULL, NULL, NULL, OperandInfo199 },  // Inst #1551 = MOVAPSmr
  { 1552,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x50800106ULL, NULL, NULL, OperandInfo49 },  // Inst #1552 = MOVAPSrm
  { 1553,	2,	1,	140,	0,	0, 0x50800105ULL, NULL, NULL, OperandInfo50 },  // Inst #1553 = MOVAPSrr
  { 1554,	2,	1,	140,	0,	0, 0x52800103ULL, NULL, NULL, OperandInfo50 },  // Inst #1554 = MOVAPSrr_REV
  { 1555,	6,	0,	288,	0,	0|(1<<MCID::MayStore), 0x1e2000d44ULL, NULL, NULL, OperandInfo16 },  // Inst #1555 = MOVBE16mr
  { 1556,	6,	1,	289,	0,	0|(1<<MCID::MayLoad), 0x1e0000d46ULL, NULL, NULL, OperandInfo11 },  // Inst #1556 = MOVBE16rm
  { 1557,	6,	0,	288,	0,	0|(1<<MCID::MayStore), 0x1e2000d04ULL, NULL, NULL, OperandInfo20 },  // Inst #1557 = MOVBE32mr
  { 1558,	6,	1,	289,	0,	0|(1<<MCID::MayLoad), 0x1e0000d06ULL, NULL, NULL, OperandInfo12 },  // Inst #1558 = MOVBE32rm
  { 1559,	6,	0,	288,	0,	0|(1<<MCID::MayStore), 0x1e2002d04ULL, NULL, NULL, OperandInfo24 },  // Inst #1559 = MOVBE64mr
  { 1560,	6,	1,	289,	0,	0|(1<<MCID::MayLoad), 0x1e0002d06ULL, NULL, NULL, OperandInfo13 },  // Inst #1560 = MOVBE64rm
  { 1561,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x25000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #1561 = MOVDDUPrm
  { 1562,	2,	1,	291,	0,	0, 0x25000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #1562 = MOVDDUPrr
  { 1563,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xdc000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1563 = MOVDI2PDIrm
  { 1564,	2,	1,	285,	0,	0, 0xdc000145ULL, NULL, NULL, OperandInfo200 },  // Inst #1564 = MOVDI2PDIrr
  { 1565,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xdc000146ULL, NULL, NULL, OperandInfo98 },  // Inst #1565 = MOVDI2SSrm
  { 1566,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0xdc000145ULL, NULL, NULL, OperandInfo104 },  // Inst #1566 = MOVDI2SSrr
  { 1567,	6,	0,	287,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xff800144ULL, NULL, NULL, OperandInfo199 },  // Inst #1567 = MOVDQAmr
  { 1568,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0xdf800146ULL, NULL, NULL, OperandInfo49 },  // Inst #1568 = MOVDQArm
  { 1569,	2,	1,	140,	0,	0, 0xdf800145ULL, NULL, NULL, OperandInfo50 },  // Inst #1569 = MOVDQArr
  { 1570,	2,	1,	140,	0,	0, 0xff800143ULL, NULL, NULL, OperandInfo50 },  // Inst #1570 = MOVDQArr_REV
  { 1571,	6,	0,	292,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xff800c04ULL, NULL, NULL, OperandInfo199 },  // Inst #1571 = MOVDQUmr
  { 1572,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0xdf800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1572 = MOVDQUrm
  { 1573,	2,	1,	294,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xdf800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1573 = MOVDQUrr
  { 1574,	2,	1,	294,	0,	0, 0xff800c03ULL, NULL, NULL, OperandInfo50 },  // Inst #1574 = MOVDQUrr_REV
  { 1575,	3,	1,	291,	0,	0, 0x24800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1575 = MOVHLPSrr
  { 1576,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x2f000144ULL, NULL, NULL, OperandInfo199 },  // Inst #1576 = MOVHPDmr
  { 1577,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0x2d000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1577 = MOVHPDrm
  { 1578,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x2e800104ULL, NULL, NULL, OperandInfo199 },  // Inst #1578 = MOVHPSmr
  { 1579,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0x2c800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1579 = MOVHPSrm
  { 1580,	3,	1,	291,	0,	0, 0x2c800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1580 = MOVLHPSrr
  { 1581,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x27000144ULL, NULL, NULL, OperandInfo199 },  // Inst #1581 = MOVLPDmr
  { 1582,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0x25000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1582 = MOVLPDrm
  { 1583,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x26800104ULL, NULL, NULL, OperandInfo199 },  // Inst #1583 = MOVLPSmr
  { 1584,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0x24800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1584 = MOVLPSrm
  { 1585,	6,	0,	297,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ac000144ULL, NULL, NULL, OperandInfo199 },  // Inst #1585 = MOVLQ128mr
  { 1586,	2,	1,	298,	0,	0, 0xa1000145ULL, NULL, NULL, OperandInfo97 },  // Inst #1586 = MOVMSKPDrr32
  { 1587,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa1002145ULL, NULL, NULL, OperandInfo96 },  // Inst #1587 = MOVMSKPDrr64
  { 1588,	2,	1,	298,	0,	0, 0xa0800105ULL, NULL, NULL, OperandInfo97 },  // Inst #1588 = MOVMSKPSrr32
  { 1589,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa0802105ULL, NULL, NULL, OperandInfo96 },  // Inst #1589 = MOVMSKPSrr64
  { 1590,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x55800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1590 = MOVNTDQArm
  { 1591,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x1cf800144ULL, NULL, NULL, OperandInfo199 },  // Inst #1591 = MOVNTDQmr
  { 1592,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x186002104ULL, NULL, NULL, OperandInfo24 },  // Inst #1592 = MOVNTI_64mr
  { 1593,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x186000104ULL, NULL, NULL, OperandInfo20 },  // Inst #1593 = MOVNTImr
  { 1594,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x57000144ULL, NULL, NULL, OperandInfo199 },  // Inst #1594 = MOVNTPDmr
  { 1595,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x56800104ULL, NULL, NULL, OperandInfo199 },  // Inst #1595 = MOVNTPSmr
  { 1596,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x56000b04ULL, NULL, NULL, OperandInfo199 },  // Inst #1596 = MOVNTSD
  { 1597,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x56000c04ULL, NULL, NULL, OperandInfo199 },  // Inst #1597 = MOVNTSS
  { 1598,	2,	1,	0,	0,	0|(1<<MCID::NotDuplicable), 0x1d0014000ULL, ImplicitList11, NULL, OperandInfo69 },  // Inst #1598 = MOVPC32r
  { 1599,	6,	0,	286,	0,	0|(1<<MCID::MayStore), 0xfc000144ULL, NULL, NULL, OperandInfo199 },  // Inst #1599 = MOVPDI2DImr
  { 1600,	2,	1,	300,	0,	0, 0xfc000143ULL, NULL, NULL, OperandInfo97 },  // Inst #1600 = MOVPDI2DIrr
  { 1601,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0x1ac000144ULL, NULL, NULL, OperandInfo199 },  // Inst #1601 = MOVPQI2QImr
  { 1602,	2,	1,	300,	0,	0, 0xfc002143ULL, NULL, NULL, OperandInfo96 },  // Inst #1602 = MOVPQIto64rr
  { 1603,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1603 = MOVQI2PQIrm
  { 1604,	2,	1,	301,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xfc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1604 = MOVQxrxr
  { 1605,	0,	0,	302,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x148000001ULL, ImplicitList46, ImplicitList47, 0 },  // Inst #1605 = MOVSB
  { 1606,	0,	0,	302,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a000001ULL, ImplicitList46, ImplicitList47, 0 },  // Inst #1606 = MOVSD
  { 1607,	6,	0,	303,	0,	0|(1<<MCID::MayStore), 0x22000b04ULL, NULL, NULL, OperandInfo201 },  // Inst #1607 = MOVSDmr
  { 1608,	6,	1,	304,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000b06ULL, NULL, NULL, OperandInfo100 },  // Inst #1608 = MOVSDrm
  { 1609,	3,	1,	305,	0,	0, 0x20000b05ULL, NULL, NULL, OperandInfo202 },  // Inst #1609 = MOVSDrr
  { 1610,	3,	1,	305,	0,	0, 0x22000b03ULL, NULL, NULL, OperandInfo202 },  // Inst #1610 = MOVSDrr_REV
  { 1611,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0xfc002144ULL, NULL, NULL, OperandInfo201 },  // Inst #1611 = MOVSDto64mr
  { 1612,	2,	1,	300,	0,	0|(1<<MCID::Bitcast), 0xfc002143ULL, NULL, NULL, OperandInfo106 },  // Inst #1612 = MOVSDto64rr
  { 1613,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x2c800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1613 = MOVSHDUPrm
  { 1614,	2,	1,	291,	0,	0, 0x2c800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1614 = MOVSHDUPrr
  { 1615,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x24800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1615 = MOVSLDUPrm
  { 1616,	2,	1,	291,	0,	0, 0x24800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1616 = MOVSLDUPrr
  { 1617,	0,	0,	302,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a002001ULL, ImplicitList46, ImplicitList47, 0 },  // Inst #1617 = MOVSQ
  { 1618,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0xfc000144ULL, NULL, NULL, OperandInfo203 },  // Inst #1618 = MOVSS2DImr
  { 1619,	2,	1,	300,	0,	0|(1<<MCID::Bitcast), 0xfc000143ULL, NULL, NULL, OperandInfo109 },  // Inst #1619 = MOVSS2DIrr
  { 1620,	6,	0,	303,	0,	0|(1<<MCID::MayStore), 0x22000c04ULL, NULL, NULL, OperandInfo203 },  // Inst #1620 = MOVSSmr
  { 1621,	6,	1,	304,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #1621 = MOVSSrm
  { 1622,	3,	1,	305,	0,	0, 0x20000c05ULL, NULL, NULL, OperandInfo204 },  // Inst #1622 = MOVSSrr
  { 1623,	3,	1,	305,	0,	0, 0x22000c03ULL, NULL, NULL, OperandInfo204 },  // Inst #1623 = MOVSSrr_REV
  { 1624,	0,	0,	302,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a000041ULL, ImplicitList46, ImplicitList47, 0 },  // Inst #1624 = MOVSW
  { 1625,	6,	1,	306,	0,	0|(1<<MCID::MayLoad), 0x17c000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1625 = MOVSX16rm8
  { 1626,	2,	1,	307,	0,	0, 0x17c000145ULL, NULL, NULL, OperandInfo205 },  // Inst #1626 = MOVSX16rr8
  { 1627,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0x17e000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1627 = MOVSX32rm16
  { 1628,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0x17c000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1628 = MOVSX32rm8
  { 1629,	2,	1,	309,	0,	0, 0x17e000105ULL, NULL, NULL, OperandInfo206 },  // Inst #1629 = MOVSX32rr16
  { 1630,	2,	1,	309,	0,	0, 0x17c000105ULL, NULL, NULL, OperandInfo207 },  // Inst #1630 = MOVSX32rr8
  { 1631,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0x17e002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1631 = MOVSX64rm16
  { 1632,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0xc6002006ULL, NULL, NULL, OperandInfo13 },  // Inst #1632 = MOVSX64rm32
  { 1633,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0x17c002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1633 = MOVSX64rm8
  { 1634,	2,	1,	309,	0,	0, 0x17e002105ULL, NULL, NULL, OperandInfo208 },  // Inst #1634 = MOVSX64rr16
  { 1635,	2,	1,	309,	0,	0, 0xc6002005ULL, NULL, NULL, OperandInfo152 },  // Inst #1635 = MOVSX64rr32
  { 1636,	2,	1,	309,	0,	0, 0x17c002105ULL, NULL, NULL, OperandInfo209 },  // Inst #1636 = MOVSX64rr8
  { 1637,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x23000144ULL, NULL, NULL, OperandInfo199 },  // Inst #1637 = MOVUPDmr
  { 1638,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x21000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1638 = MOVUPDrm
  { 1639,	2,	1,	294,	0,	0, 0x21000145ULL, NULL, NULL, OperandInfo50 },  // Inst #1639 = MOVUPDrr
  { 1640,	2,	1,	294,	0,	0, 0x23000143ULL, NULL, NULL, OperandInfo50 },  // Inst #1640 = MOVUPDrr_REV
  { 1641,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x22800104ULL, NULL, NULL, OperandInfo199 },  // Inst #1641 = MOVUPSmr
  { 1642,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20800106ULL, NULL, NULL, OperandInfo49 },  // Inst #1642 = MOVUPSrm
  { 1643,	2,	1,	294,	0,	0, 0x20800105ULL, NULL, NULL, OperandInfo50 },  // Inst #1643 = MOVUPSrr
  { 1644,	2,	1,	294,	0,	0, 0x22800103ULL, NULL, NULL, OperandInfo50 },  // Inst #1644 = MOVUPSrr_REV
  { 1645,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xdc000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1645 = MOVZDI2PDIrm
  { 1646,	2,	1,	285,	0,	0, 0xdc000145ULL, NULL, NULL, OperandInfo200 },  // Inst #1646 = MOVZDI2PDIrr
  { 1647,	6,	1,	310,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1647 = MOVZPQILo2PQIrm
  { 1648,	2,	1,	311,	0,	0, 0xfc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1648 = MOVZPQILo2PQIrr
  { 1649,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1649 = MOVZQI2PQIrm
  { 1650,	2,	1,	285,	0,	0, 0xdc002145ULL, NULL, NULL, OperandInfo195 },  // Inst #1650 = MOVZQI2PQIrr
  { 1651,	6,	1,	312,	0,	0|(1<<MCID::MayLoad), 0x16c000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1651 = MOVZX16rm8
  { 1652,	2,	1,	313,	0,	0, 0x16c000145ULL, NULL, NULL, OperandInfo205 },  // Inst #1652 = MOVZX16rr8
  { 1653,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x16c000106ULL, NULL, NULL, OperandInfo210 },  // Inst #1653 = MOVZX32_NOREXrm8
  { 1654,	2,	1,	315,	0,	0, 0x16c000105ULL, NULL, NULL, OperandInfo211 },  // Inst #1654 = MOVZX32_NOREXrr8
  { 1655,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x16e000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1655 = MOVZX32rm16
  { 1656,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x16c000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1656 = MOVZX32rm8
  { 1657,	2,	1,	315,	0,	0, 0x16e000105ULL, NULL, NULL, OperandInfo206 },  // Inst #1657 = MOVZX32rr16
  { 1658,	2,	1,	315,	0,	0, 0x16c000105ULL, NULL, NULL, OperandInfo207 },  // Inst #1658 = MOVZX32rr8
  { 1659,	6,	1,	314,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16e002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1659 = MOVZX64rm16_Q
  { 1660,	6,	1,	314,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1660 = MOVZX64rm8_Q
  { 1661,	2,	1,	315,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16e002105ULL, NULL, NULL, OperandInfo208 },  // Inst #1661 = MOVZX64rr16_Q
  { 1662,	2,	1,	315,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c002105ULL, NULL, NULL, OperandInfo209 },  // Inst #1662 = MOVZX64rr8_Q
  { 1663,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x85804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1663 = MPSADBWrmi
  { 1664,	4,	1,	0,	0,	0, 0x85804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #1664 = MPSADBWrri
  { 1665,	5,	0,	316,	0,	0|(1<<MCID::MayLoad), 0x1ee00005cULL, ImplicitList7, ImplicitList29, OperandInfo40 },  // Inst #1665 = MUL16m
  { 1666,	1,	0,	317,	0,	0, 0x1ee000054ULL, ImplicitList7, ImplicitList29, OperandInfo112 },  // Inst #1666 = MUL16r
  { 1667,	5,	0,	318,	0,	0|(1<<MCID::MayLoad), 0x1ee00001cULL, ImplicitList8, ImplicitList25, OperandInfo40 },  // Inst #1667 = MUL32m
  { 1668,	1,	0,	319,	0,	0, 0x1ee000014ULL, ImplicitList8, ImplicitList25, OperandInfo71 },  // Inst #1668 = MUL32r
  { 1669,	5,	0,	320,	0,	0|(1<<MCID::MayLoad), 0x1ee00201cULL, ImplicitList9, ImplicitList23, OperandInfo40 },  // Inst #1669 = MUL64m
  { 1670,	1,	0,	321,	0,	0, 0x1ee002014ULL, ImplicitList9, ImplicitList23, OperandInfo73 },  // Inst #1670 = MUL64r
  { 1671,	5,	0,	322,	0,	0|(1<<MCID::MayLoad), 0x1ec00001cULL, ImplicitList10, ImplicitList31, OperandInfo40 },  // Inst #1671 = MUL8m
  { 1672,	1,	0,	323,	0,	0, 0x1ec000014ULL, ImplicitList10, ImplicitList31, OperandInfo113 },  // Inst #1672 = MUL8r
  { 1673,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0xb3000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1673 = MULPDrm
  { 1674,	3,	1,	325,	0,	0|(1<<MCID::Commutable), 0xb3000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1674 = MULPDrr
  { 1675,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0xb2800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1675 = MULPSrm
  { 1676,	3,	1,	326,	0,	0|(1<<MCID::Commutable), 0xb2800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1676 = MULPSrr
  { 1677,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0xb2000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1677 = MULSDrm
  { 1678,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0xb2000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1678 = MULSDrm_Int
  { 1679,	3,	1,	328,	0,	0|(1<<MCID::Commutable), 0xb2000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1679 = MULSDrr
  { 1680,	3,	1,	328,	0,	0, 0xb2000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1680 = MULSDrr_Int
  { 1681,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0xb2000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1681 = MULSSrm
  { 1682,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0xb2000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #1682 = MULSSrm_Int
  { 1683,	3,	1,	329,	0,	0|(1<<MCID::Commutable), 0xb2000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1683 = MULSSrr
  { 1684,	3,	1,	329,	0,	0, 0xb2000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #1684 = MULSSrr_Int
  { 1685,	7,	2,	330,	0,	0|(1<<MCID::MayLoad), 0xbec001106ULL, ImplicitList48, NULL, OperandInfo53 },  // Inst #1685 = MULX32rm
  { 1686,	3,	2,	331,	0,	0|(1<<MCID::Commutable), 0xbec001105ULL, ImplicitList48, NULL, OperandInfo54 },  // Inst #1686 = MULX32rr
  { 1687,	7,	2,	330,	0,	0|(1<<MCID::MayLoad), 0xfec001106ULL, ImplicitList49, NULL, OperandInfo55 },  // Inst #1687 = MULX64rm
  { 1688,	3,	2,	331,	0,	0|(1<<MCID::Commutable), 0xfec001105ULL, ImplicitList49, NULL, OperandInfo56 },  // Inst #1688 = MULX64rr
  { 1689,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b0000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1689 = MUL_F32m
  { 1690,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b8000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1690 = MUL_F64m
  { 1691,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1691 = MUL_FI16m
  { 1692,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b4000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1692 = MUL_FI32m
  { 1693,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000902ULL, NULL, NULL, OperandInfo41 },  // Inst #1693 = MUL_FPrST0
  { 1694,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000302ULL, NULL, NULL, OperandInfo41 },  // Inst #1694 = MUL_FST0r
  { 1695,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #1695 = MUL_Fp32
  { 1696,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #1696 = MUL_Fp32m
  { 1697,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #1697 = MUL_Fp64
  { 1698,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #1698 = MUL_Fp64m
  { 1699,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #1699 = MUL_Fp64m32
  { 1700,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #1700 = MUL_Fp80
  { 1701,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1701 = MUL_Fp80m32
  { 1702,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1702 = MUL_Fp80m64
  { 1703,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #1703 = MUL_FpI16m32
  { 1704,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #1704 = MUL_FpI16m64
  { 1705,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1705 = MUL_FpI16m80
  { 1706,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #1706 = MUL_FpI32m32
  { 1707,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #1707 = MUL_FpI32m64
  { 1708,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1708 = MUL_FpI32m80
  { 1709,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000702ULL, NULL, NULL, OperandInfo41 },  // Inst #1709 = MUL_FrST0
  { 1710,	0,	0,	332,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2000126ULL, ImplicitList50, NULL, 0 },  // Inst #1710 = MWAITrr
  { 1711,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00005bULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1711 = NEG16m
  { 1712,	2,	1,	89,	0,	0, 0x1ee000053ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #1712 = NEG16r
  { 1713,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00001bULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1713 = NEG32m
  { 1714,	2,	1,	89,	0,	0, 0x1ee000013ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #1714 = NEG32r
  { 1715,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00201bULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1715 = NEG64m
  { 1716,	2,	1,	89,	0,	0, 0x1ee002013ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #1716 = NEG64r
  { 1717,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ec00001bULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #1717 = NEG8m
  { 1718,	2,	1,	89,	0,	0, 0x1ec000013ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #1718 = NEG8r
  { 1719,	0,	0,	333,	0,	0, 0x120000001ULL, NULL, NULL, 0 },  // Inst #1719 = NOOP
  { 1720,	5,	0,	333,	0,	0, 0x3e000118ULL, NULL, NULL, OperandInfo40 },  // Inst #1720 = NOOPL
  { 1721,	5,	0,	333,	0,	0, 0x3e000158ULL, NULL, NULL, OperandInfo40 },  // Inst #1721 = NOOPW
  { 1722,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00005aULL, NULL, NULL, OperandInfo40 },  // Inst #1722 = NOT16m
  { 1723,	2,	1,	89,	0,	0, 0x1ee000052ULL, NULL, NULL, OperandInfo110 },  // Inst #1723 = NOT16r
  { 1724,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00001aULL, NULL, NULL, OperandInfo40 },  // Inst #1724 = NOT32m
  { 1725,	2,	1,	89,	0,	0, 0x1ee000012ULL, NULL, NULL, OperandInfo66 },  // Inst #1725 = NOT32r
  { 1726,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00201aULL, NULL, NULL, OperandInfo40 },  // Inst #1726 = NOT64m
  { 1727,	2,	1,	89,	0,	0, 0x1ee002012ULL, NULL, NULL, OperandInfo67 },  // Inst #1727 = NOT64r
  { 1728,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ec00001aULL, NULL, NULL, OperandInfo40 },  // Inst #1728 = NOT8m
  { 1729,	2,	1,	89,	0,	0, 0x1ec000012ULL, NULL, NULL, OperandInfo111 },  // Inst #1729 = NOT8r
  { 1730,	1,	0,	5,	0,	0, 0x1a00c041ULL, ImplicitList7, ImplicitList2, OperandInfo2 },  // Inst #1730 = OR16i16
  { 1731,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c059ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1731 = OR16mi
  { 1732,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004059ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1732 = OR16mi8
  { 1733,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12000044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #1733 = OR16mr
  { 1734,	3,	1,	5,	0,	0, 0x10200c051ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #1734 = OR16ri
  { 1735,	3,	1,	5,	0,	0, 0x106004051ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #1735 = OR16ri8
  { 1736,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x16000046ULL, NULL, ImplicitList3, OperandInfo18 },  // Inst #1736 = OR16rm
  { 1737,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x12000043ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #1737 = OR16rr
  { 1738,	3,	1,	5,	0,	0, 0x16000045ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #1738 = OR16rr_REV
  { 1739,	1,	0,	5,	0,	0, 0x1a014001ULL, ImplicitList8, ImplicitList4, OperandInfo2 },  // Inst #1739 = OR32i32
  { 1740,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102014019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1740 = OR32mi
  { 1741,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1741 = OR32mi8
  { 1742,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12000004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #1742 = OR32mr
  { 1743,	6,	0,	213,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x12100004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #1743 = OR32mrLocked
  { 1744,	3,	1,	5,	0,	0, 0x102014011ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #1744 = OR32ri
  { 1745,	3,	1,	5,	0,	0, 0x106004011ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #1745 = OR32ri8
  { 1746,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x16000006ULL, NULL, ImplicitList3, OperandInfo22 },  // Inst #1746 = OR32rm
  { 1747,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x12000003ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #1747 = OR32rr
  { 1748,	3,	1,	5,	0,	0, 0x16000005ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #1748 = OR32rr_REV
  { 1749,	1,	0,	5,	0,	0, 0x1a016001ULL, ImplicitList9, ImplicitList5, OperandInfo2 },  // Inst #1749 = OR64i32
  { 1750,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102016019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1750 = OR64mi32
  { 1751,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106006019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1751 = OR64mi8
  { 1752,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12002004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #1752 = OR64mr
  { 1753,	3,	1,	5,	0,	0, 0x102016011ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #1753 = OR64ri32
  { 1754,	3,	1,	5,	0,	0, 0x106006011ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #1754 = OR64ri8
  { 1755,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x16002006ULL, NULL, ImplicitList3, OperandInfo26 },  // Inst #1755 = OR64rm
  { 1756,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x12002003ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #1756 = OR64rr
  { 1757,	3,	1,	5,	0,	0, 0x16002005ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #1757 = OR64rr_REV
  { 1758,	1,	0,	5,	0,	0, 0x18004001ULL, ImplicitList10, ImplicitList6, OperandInfo2 },  // Inst #1758 = OR8i8
  { 1759,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x100004019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #1759 = OR8mi
  { 1760,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #1760 = OR8mr
  { 1761,	3,	1,	5,	0,	0, 0x100004011ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #1761 = OR8ri
  { 1762,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x14000006ULL, NULL, ImplicitList3, OperandInfo30 },  // Inst #1762 = OR8rm
  { 1763,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x10000003ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #1763 = OR8rr
  { 1764,	3,	1,	5,	0,	0, 0x14000005ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #1764 = OR8rr_REV
  { 1765,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xad000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1765 = ORPDrm
  { 1766,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xad000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1766 = ORPDrr
  { 1767,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xac800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1767 = ORPSrm
  { 1768,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xac800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1768 = ORPSrr
  { 1769,	1,	0,	334,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ce004041ULL, ImplicitList7, NULL, OperandInfo2 },  // Inst #1769 = OUT16ir
  { 1770,	0,	0,	335,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1de000041ULL, ImplicitList51, NULL, 0 },  // Inst #1770 = OUT16rr
  { 1771,	1,	0,	334,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ce004001ULL, ImplicitList8, NULL, OperandInfo2 },  // Inst #1771 = OUT32ir
  { 1772,	0,	0,	335,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1de000001ULL, ImplicitList52, NULL, 0 },  // Inst #1772 = OUT32rr
  { 1773,	1,	0,	334,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1cc004001ULL, ImplicitList10, NULL, OperandInfo2 },  // Inst #1773 = OUT8ir
  { 1774,	0,	0,	335,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1dc000001ULL, ImplicitList53, NULL, 0 },  // Inst #1774 = OUT8rr
  { 1775,	0,	0,	336,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xdc000001ULL, NULL, NULL, 0 },  // Inst #1775 = OUTSB
  { 1776,	0,	0,	336,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xde000001ULL, NULL, NULL, 0 },  // Inst #1776 = OUTSD
  { 1777,	0,	0,	336,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xde000041ULL, NULL, NULL, 0 },  // Inst #1777 = OUTSW
  { 1778,	6,	1,	337,	0,	0|(1<<MCID::MayLoad), 0x39800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1778 = PABSBrm128
  { 1779,	2,	1,	338,	0,	0, 0x39800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1779 = PABSBrr128
  { 1780,	6,	1,	337,	0,	0|(1<<MCID::MayLoad), 0x3d800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1780 = PABSDrm128
  { 1781,	2,	1,	338,	0,	0, 0x3d800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1781 = PABSDrr128
  { 1782,	6,	1,	337,	0,	0|(1<<MCID::MayLoad), 0x3b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1782 = PABSWrm128
  { 1783,	2,	1,	338,	0,	0, 0x3b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1783 = PABSWrr128
  { 1784,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xd7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1784 = PACKSSDWrm
  { 1785,	3,	1,	340,	0,	0, 0xd7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1785 = PACKSSDWrr
  { 1786,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xc7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1786 = PACKSSWBrm
  { 1787,	3,	1,	340,	0,	0, 0xc7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1787 = PACKSSWBrr
  { 1788,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x57800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1788 = PACKUSDWrm
  { 1789,	3,	1,	0,	0,	0, 0x57800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1789 = PACKUSDWrr
  { 1790,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xcf800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1790 = PACKUSWBrm
  { 1791,	3,	1,	340,	0,	0, 0xcf800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1791 = PACKUSWBrr
  { 1792,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1f9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1792 = PADDBrm
  { 1793,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1f9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1793 = PADDBrr
  { 1794,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1fd800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1794 = PADDDrm
  { 1795,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1fd800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1795 = PADDDrr
  { 1796,	7,	1,	341,	0,	0|(1<<MCID::MayLoad), 0x1a9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1796 = PADDQrm
  { 1797,	3,	1,	342,	0,	0|(1<<MCID::Commutable), 0x1a9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1797 = PADDQrr
  { 1798,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1d9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1798 = PADDSBrm
  { 1799,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1d9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1799 = PADDSBrr
  { 1800,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1db800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1800 = PADDSWrm
  { 1801,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1db800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1801 = PADDSWrr
  { 1802,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1b9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1802 = PADDUSBrm
  { 1803,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1b9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1803 = PADDUSBrr
  { 1804,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1bb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1804 = PADDUSWrm
  { 1805,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1bb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1805 = PADDUSWrr
  { 1806,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1fb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1806 = PADDWrm
  { 1807,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1fb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1807 = PADDWrr
  { 1808,	8,	1,	343,	0,	0|(1<<MCID::MayLoad), 0x1f804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1808 = PALIGNR128rm
  { 1809,	4,	1,	344,	0,	0, 0x1f804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #1809 = PALIGNR128rr
  { 1810,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x1bf800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1810 = PANDNrm
  { 1811,	3,	1,	138,	0,	0, 0x1bf800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1811 = PANDNrr
  { 1812,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x1b7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1812 = PANDrm
  { 1813,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x1b7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1813 = PANDrr
  { 1814,	0,	0,	345,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000201ULL, NULL, NULL, 0 },  // Inst #1814 = PAUSE
  { 1815,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1c1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1815 = PAVGBrm
  { 1816,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1c1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1816 = PAVGBrr
  { 1817,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400017e000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1817 = PAVGUSBrm
  { 1818,	3,	1,	0,	0,	0, 0x400017e000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1818 = PAVGUSBrr
  { 1819,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1c7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1819 = PAVGWrm
  { 1820,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1c7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1820 = PAVGWrr
  { 1821,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x21800d46ULL, ImplicitList20, NULL, OperandInfo34 },  // Inst #1821 = PBLENDVBrm0
  { 1822,	3,	1,	0,	0,	0, 0x21800d45ULL, ImplicitList20, NULL, OperandInfo35 },  // Inst #1822 = PBLENDVBrr0
  { 1823,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1d804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1823 = PBLENDWrmi
  { 1824,	4,	1,	0,	0,	0, 0x1d804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #1824 = PBLENDWrri
  { 1825,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x89804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1825 = PCLMULQDQrm
  { 1826,	4,	1,	0,	0,	0, 0x89804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #1826 = PCLMULQDQrr
  { 1827,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xe9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1827 = PCMPEQBrm
  { 1828,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xe9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1828 = PCMPEQBrr
  { 1829,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xed800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1829 = PCMPEQDrm
  { 1830,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xed800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1830 = PCMPEQDrr
  { 1831,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x53800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1831 = PCMPEQQrm
  { 1832,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x53800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1832 = PCMPEQQrr
  { 1833,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xeb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1833 = PCMPEQWrm
  { 1834,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xeb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1834 = PCMPEQWrr
  { 1835,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList21, ImplicitList3, OperandInfo212 },  // Inst #1835 = PCMPESTRIMEM
  { 1836,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList21, ImplicitList3, OperandInfo213 },  // Inst #1836 = PCMPESTRIREG
  { 1837,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0xc3804e46ULL, ImplicitList21, ImplicitList54, OperandInfo51 },  // Inst #1837 = PCMPESTRIrm
  { 1838,	3,	0,	0,	0,	0, 0xc3804e45ULL, ImplicitList21, ImplicitList54, OperandInfo52 },  // Inst #1838 = PCMPESTRIrr
  { 1839,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList21, ImplicitList3, OperandInfo137 },  // Inst #1839 = PCMPESTRM128MEM
  { 1840,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList21, ImplicitList3, OperandInfo85 },  // Inst #1840 = PCMPESTRM128REG
  { 1841,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0xc1804e46ULL, ImplicitList21, ImplicitList55, OperandInfo51 },  // Inst #1841 = PCMPESTRM128rm
  { 1842,	3,	0,	0,	0,	0, 0xc1804e45ULL, ImplicitList21, ImplicitList55, OperandInfo52 },  // Inst #1842 = PCMPESTRM128rr
  { 1843,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xc9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1843 = PCMPGTBrm
  { 1844,	3,	1,	340,	0,	0, 0xc9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1844 = PCMPGTBrr
  { 1845,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xcd800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1845 = PCMPGTDrm
  { 1846,	3,	1,	340,	0,	0, 0xcd800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1846 = PCMPGTDrr
  { 1847,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6f800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1847 = PCMPGTQrm
  { 1848,	3,	1,	0,	0,	0, 0x6f800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1848 = PCMPGTQrr
  { 1849,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xcb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1849 = PCMPGTWrm
  { 1850,	3,	1,	340,	0,	0, 0xcb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1850 = PCMPGTWrr
  { 1851,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo212 },  // Inst #1851 = PCMPISTRIMEM
  { 1852,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo213 },  // Inst #1852 = PCMPISTRIREG
  { 1853,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0xc7804e46ULL, NULL, ImplicitList54, OperandInfo51 },  // Inst #1853 = PCMPISTRIrm
  { 1854,	3,	0,	0,	0,	0, 0xc7804e45ULL, NULL, ImplicitList54, OperandInfo52 },  // Inst #1854 = PCMPISTRIrr
  { 1855,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo137 },  // Inst #1855 = PCMPISTRM128MEM
  { 1856,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo85 },  // Inst #1856 = PCMPISTRM128REG
  { 1857,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0xc5804e46ULL, NULL, ImplicitList55, OperandInfo51 },  // Inst #1857 = PCMPISTRM128rm
  { 1858,	3,	0,	0,	0,	0, 0xc5804e45ULL, NULL, ImplicitList55, OperandInfo52 },  // Inst #1858 = PCMPISTRM128rr
  { 1859,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbea001106ULL, NULL, NULL, OperandInfo53 },  // Inst #1859 = PDEP32rm
  { 1860,	3,	1,	0,	0,	0, 0xbea001105ULL, NULL, NULL, OperandInfo54 },  // Inst #1860 = PDEP32rr
  { 1861,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfea001106ULL, NULL, NULL, OperandInfo55 },  // Inst #1861 = PDEP64rm
  { 1862,	3,	1,	0,	0,	0, 0xfea001105ULL, NULL, NULL, OperandInfo56 },  // Inst #1862 = PDEP64rr
  { 1863,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbea001206ULL, NULL, NULL, OperandInfo53 },  // Inst #1863 = PEXT32rm
  { 1864,	3,	1,	0,	0,	0, 0xbea001205ULL, NULL, NULL, OperandInfo54 },  // Inst #1864 = PEXT32rr
  { 1865,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfea001206ULL, NULL, NULL, OperandInfo55 },  // Inst #1865 = PEXT64rm
  { 1866,	3,	1,	0,	0,	0, 0xfea001205ULL, NULL, NULL, OperandInfo56 },  // Inst #1866 = PEXT64rr
  { 1867,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x29804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #1867 = PEXTRBmr
  { 1868,	3,	1,	0,	0,	0, 0x29804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #1868 = PEXTRBrr
  { 1869,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x2d804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #1869 = PEXTRDmr
  { 1870,	3,	1,	0,	0,	0, 0x2d804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #1870 = PEXTRDrr
  { 1871,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x2d806e44ULL, NULL, NULL, OperandInfo114 },  // Inst #1871 = PEXTRQmr
  { 1872,	3,	1,	0,	0,	0, 0x2d806e43ULL, NULL, NULL, OperandInfo214 },  // Inst #1872 = PEXTRQrr
  { 1873,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x2b804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #1873 = PEXTRWmr
  { 1874,	3,	1,	346,	0,	0, 0x18b804145ULL, NULL, NULL, OperandInfo115 },  // Inst #1874 = PEXTRWri
  { 1875,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400003a000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1875 = PF2IDrm
  { 1876,	2,	1,	0,	0,	0, 0x400003a000105ULL, NULL, NULL, OperandInfo161 },  // Inst #1876 = PF2IDrr
  { 1877,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000038000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1877 = PF2IWrm
  { 1878,	2,	1,	0,	0,	0, 0x4000038000105ULL, NULL, NULL, OperandInfo161 },  // Inst #1878 = PF2IWrr
  { 1879,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400015c000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1879 = PFACCrm
  { 1880,	3,	1,	0,	0,	0, 0x400015c000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1880 = PFACCrr
  { 1881,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400013c000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1881 = PFADDrm
  { 1882,	3,	1,	0,	0,	0, 0x400013c000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1882 = PFADDrr
  { 1883,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000160000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1883 = PFCMPEQrm
  { 1884,	3,	1,	0,	0,	0, 0x4000160000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1884 = PFCMPEQrr
  { 1885,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000120000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1885 = PFCMPGErm
  { 1886,	3,	1,	0,	0,	0, 0x4000120000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1886 = PFCMPGErr
  { 1887,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000140000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1887 = PFCMPGTrm
  { 1888,	3,	1,	0,	0,	0, 0x4000140000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1888 = PFCMPGTrr
  { 1889,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000148000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1889 = PFMAXrm
  { 1890,	3,	1,	0,	0,	0, 0x4000148000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1890 = PFMAXrr
  { 1891,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000128000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1891 = PFMINrm
  { 1892,	3,	1,	0,	0,	0, 0x4000128000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1892 = PFMINrr
  { 1893,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000168000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1893 = PFMULrm
  { 1894,	3,	1,	0,	0,	0, 0x4000168000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1894 = PFMULrr
  { 1895,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000114000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1895 = PFNACCrm
  { 1896,	3,	1,	0,	0,	0, 0x4000114000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1896 = PFNACCrr
  { 1897,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400011c000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1897 = PFPNACCrm
  { 1898,	3,	1,	0,	0,	0, 0x400011c000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1898 = PFPNACCrr
  { 1899,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400014c000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1899 = PFRCPIT1rm
  { 1900,	3,	1,	0,	0,	0, 0x400014c000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1900 = PFRCPIT1rr
  { 1901,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400016c000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1901 = PFRCPIT2rm
  { 1902,	3,	1,	0,	0,	0, 0x400016c000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1902 = PFRCPIT2rr
  { 1903,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400012c000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1903 = PFRCPrm
  { 1904,	2,	1,	0,	0,	0, 0x400012c000105ULL, NULL, NULL, OperandInfo161 },  // Inst #1904 = PFRCPrr
  { 1905,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400014e000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1905 = PFRSQIT1rm
  { 1906,	3,	1,	0,	0,	0, 0x400014e000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1906 = PFRSQIT1rr
  { 1907,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400012e000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1907 = PFRSQRTrm
  { 1908,	2,	1,	0,	0,	0, 0x400012e000105ULL, NULL, NULL, OperandInfo161 },  // Inst #1908 = PFRSQRTrr
  { 1909,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000154000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1909 = PFSUBRrm
  { 1910,	3,	1,	0,	0,	0, 0x4000154000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1910 = PFSUBRrr
  { 1911,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000134000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1911 = PFSUBrm
  { 1912,	3,	1,	0,	0,	0, 0x4000134000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1912 = PFSUBrr
  { 1913,	7,	1,	347,	0,	0|(1<<MCID::MayLoad), 0x5800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1913 = PHADDDrm
  { 1914,	3,	1,	348,	0,	0, 0x5800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1914 = PHADDDrr
  { 1915,	7,	1,	349,	0,	0|(1<<MCID::MayLoad), 0x7800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1915 = PHADDSWrm128
  { 1916,	3,	1,	350,	0,	0, 0x7800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1916 = PHADDSWrr128
  { 1917,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x3800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1917 = PHADDWrm
  { 1918,	3,	1,	352,	0,	0, 0x3800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1918 = PHADDWrr
  { 1919,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x83800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1919 = PHMINPOSUWrm128
  { 1920,	2,	1,	0,	0,	0, 0x83800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1920 = PHMINPOSUWrr128
  { 1921,	7,	1,	347,	0,	0|(1<<MCID::MayLoad), 0xd800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1921 = PHSUBDrm
  { 1922,	3,	1,	348,	0,	0, 0xd800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1922 = PHSUBDrr
  { 1923,	7,	1,	349,	0,	0|(1<<MCID::MayLoad), 0xf800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1923 = PHSUBSWrm128
  { 1924,	3,	1,	350,	0,	0, 0xf800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1924 = PHSUBSWrr128
  { 1925,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0xb800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1925 = PHSUBWrm
  { 1926,	3,	1,	352,	0,	0, 0xb800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1926 = PHSUBWrr
  { 1927,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400001a000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1927 = PI2FDrm
  { 1928,	2,	1,	0,	0,	0, 0x400001a000105ULL, NULL, NULL, OperandInfo161 },  // Inst #1928 = PI2FDrr
  { 1929,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000018000106ULL, NULL, NULL, OperandInfo157 },  // Inst #1929 = PI2FWrm
  { 1930,	2,	1,	0,	0,	0, 0x4000018000105ULL, NULL, NULL, OperandInfo161 },  // Inst #1930 = PI2FWrr
  { 1931,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1931 = PINSRBrm
  { 1932,	4,	1,	0,	0,	0, 0x41804e45ULL, NULL, NULL, OperandInfo215 },  // Inst #1932 = PINSRBrr
  { 1933,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x45804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1933 = PINSRDrm
  { 1934,	4,	1,	0,	0,	0, 0x45804e45ULL, NULL, NULL, OperandInfo215 },  // Inst #1934 = PINSRDrr
  { 1935,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x45806e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1935 = PINSRQrm
  { 1936,	4,	1,	0,	0,	0, 0x45806e45ULL, NULL, NULL, OperandInfo216 },  // Inst #1936 = PINSRQrr
  { 1937,	8,	1,	353,	0,	0|(1<<MCID::MayLoad), 0x189804146ULL, NULL, NULL, OperandInfo64 },  // Inst #1937 = PINSRWrmi
  { 1938,	4,	1,	354,	0,	0, 0x189804145ULL, NULL, NULL, OperandInfo215 },  // Inst #1938 = PINSRWrri
  { 1939,	7,	1,	355,	0,	0|(1<<MCID::MayLoad), 0x9800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1939 = PMADDUBSWrm128
  { 1940,	3,	1,	356,	0,	0, 0x9800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1940 = PMADDUBSWrr128
  { 1941,	7,	1,	357,	0,	0|(1<<MCID::MayLoad), 0x1eb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1941 = PMADDWDrm
  { 1942,	3,	1,	358,	0,	0|(1<<MCID::Commutable), 0x1eb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1942 = PMADDWDrr
  { 1943,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x79800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1943 = PMAXSBrm
  { 1944,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x79800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1944 = PMAXSBrr
  { 1945,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x7b800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1945 = PMAXSDrm
  { 1946,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x7b800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1946 = PMAXSDrr
  { 1947,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1dd800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1947 = PMAXSWrm
  { 1948,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1dd800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1948 = PMAXSWrr
  { 1949,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1bd800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1949 = PMAXUBrm
  { 1950,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1bd800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1950 = PMAXUBrr
  { 1951,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x7f800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1951 = PMAXUDrm
  { 1952,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x7f800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1952 = PMAXUDrr
  { 1953,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x7d800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1953 = PMAXUWrm
  { 1954,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x7d800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1954 = PMAXUWrr
  { 1955,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x71800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1955 = PMINSBrm
  { 1956,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x71800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1956 = PMINSBrr
  { 1957,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x73800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1957 = PMINSDrm
  { 1958,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x73800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1958 = PMINSDrr
  { 1959,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1d5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1959 = PMINSWrm
  { 1960,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1d5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1960 = PMINSWrr
  { 1961,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1b5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1961 = PMINUBrm
  { 1962,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1b5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1962 = PMINUBrr
  { 1963,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x77800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1963 = PMINUDrm
  { 1964,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x77800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1964 = PMINUDrr
  { 1965,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x75800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1965 = PMINUWrm
  { 1966,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x75800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1966 = PMINUWrr
  { 1967,	2,	1,	298,	0,	0, 0x1af800145ULL, NULL, NULL, OperandInfo97 },  // Inst #1967 = PMOVMSKBrr
  { 1968,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x43800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1968 = PMOVSXBDrm
  { 1969,	2,	1,	0,	0,	0, 0x43800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1969 = PMOVSXBDrr
  { 1970,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x45800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1970 = PMOVSXBQrm
  { 1971,	2,	1,	0,	0,	0, 0x45800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1971 = PMOVSXBQrr
  { 1972,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1972 = PMOVSXBWrm
  { 1973,	2,	1,	0,	0,	0, 0x41800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1973 = PMOVSXBWrr
  { 1974,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1974 = PMOVSXDQrm
  { 1975,	2,	1,	0,	0,	0, 0x4b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1975 = PMOVSXDQrr
  { 1976,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x47800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1976 = PMOVSXWDrm
  { 1977,	2,	1,	0,	0,	0, 0x47800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1977 = PMOVSXWDrr
  { 1978,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x49800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1978 = PMOVSXWQrm
  { 1979,	2,	1,	0,	0,	0, 0x49800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1979 = PMOVSXWQrr
  { 1980,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x63800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1980 = PMOVZXBDrm
  { 1981,	2,	1,	0,	0,	0, 0x63800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1981 = PMOVZXBDrr
  { 1982,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x65800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1982 = PMOVZXBQrm
  { 1983,	2,	1,	0,	0,	0, 0x65800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1983 = PMOVZXBQrr
  { 1984,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x61800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1984 = PMOVZXBWrm
  { 1985,	2,	1,	0,	0,	0, 0x61800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1985 = PMOVZXBWrr
  { 1986,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1986 = PMOVZXDQrm
  { 1987,	2,	1,	0,	0,	0, 0x6b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1987 = PMOVZXDQrr
  { 1988,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x67800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1988 = PMOVZXWDrm
  { 1989,	2,	1,	0,	0,	0, 0x67800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1989 = PMOVZXWDrr
  { 1990,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x69800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1990 = PMOVZXWQrm
  { 1991,	2,	1,	0,	0,	0, 0x69800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1991 = PMOVZXWQrr
  { 1992,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x51800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1992 = PMULDQrm
  { 1993,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x51800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1993 = PMULDQrr
  { 1994,	7,	1,	355,	0,	0|(1<<MCID::MayLoad), 0x17800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1994 = PMULHRSWrm128
  { 1995,	3,	1,	356,	0,	0|(1<<MCID::Commutable), 0x17800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1995 = PMULHRSWrr128
  { 1996,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x400016e000106ULL, NULL, NULL, OperandInfo169 },  // Inst #1996 = PMULHRWrm
  { 1997,	3,	1,	0,	0,	0, 0x400016e000105ULL, NULL, NULL, OperandInfo170 },  // Inst #1997 = PMULHRWrr
  { 1998,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0x1c9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1998 = PMULHUWrm
  { 1999,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0x1c9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1999 = PMULHUWrr
  { 2000,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0x1cb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2000 = PMULHWrm
  { 2001,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0x1cb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2001 = PMULHWrr
  { 2002,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x81800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2002 = PMULLDrm
  { 2003,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x81800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2003 = PMULLDrr
  { 2004,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0x1ab800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2004 = PMULLWrm
  { 2005,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0x1ab800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2005 = PMULLWrr
  { 2006,	7,	1,	355,	0,	0|(1<<MCID::MayLoad), 0x1e9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2006 = PMULUDQrm
  { 2007,	3,	1,	356,	0,	0|(1<<MCID::Commutable), 0x1e9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2007 = PMULUDQrr
  { 2008,	1,	1,	361,	0,	0|(1<<MCID::MayLoad), 0xb0000042ULL, ImplicitList11, ImplicitList11, OperandInfo112 },  // Inst #2008 = POP16r
  { 2009,	5,	0,	362,	0,	0|(1<<MCID::MayLoad), 0x11e000058ULL, ImplicitList11, ImplicitList11, OperandInfo40 },  // Inst #2009 = POP16rmm
  { 2010,	1,	1,	363,	0,	0|(1<<MCID::MayLoad), 0x11e000050ULL, ImplicitList11, ImplicitList11, OperandInfo112 },  // Inst #2010 = POP16rmr
  { 2011,	1,	1,	363,	0,	0|(1<<MCID::MayLoad), 0xb0000002ULL, ImplicitList11, ImplicitList11, OperandInfo71 },  // Inst #2011 = POP32r
  { 2012,	5,	0,	362,	0,	0|(1<<MCID::MayLoad), 0x11e000018ULL, ImplicitList11, ImplicitList11, OperandInfo40 },  // Inst #2012 = POP32rmm
  { 2013,	1,	1,	363,	0,	0|(1<<MCID::MayLoad), 0x11e000010ULL, ImplicitList11, ImplicitList11, OperandInfo71 },  // Inst #2013 = POP32rmr
  { 2014,	1,	1,	363,	0,	0|(1<<MCID::MayLoad), 0xb0000002ULL, ImplicitList13, ImplicitList13, OperandInfo73 },  // Inst #2014 = POP64r
  { 2015,	5,	0,	362,	0,	0|(1<<MCID::MayLoad), 0x11e000018ULL, ImplicitList13, ImplicitList13, OperandInfo40 },  // Inst #2015 = POP64rmm
  { 2016,	1,	1,	363,	0,	0|(1<<MCID::MayLoad), 0x11e000010ULL, ImplicitList13, ImplicitList13, OperandInfo73 },  // Inst #2016 = POP64rmr
  { 2017,	0,	0,	364,	0,	0|(1<<MCID::MayLoad), 0xc2000001ULL, ImplicitList11, ImplicitList56, 0 },  // Inst #2017 = POPA32
  { 2018,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x170000c46ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #2018 = POPCNT16rm
  { 2019,	2,	1,	0,	0,	0, 0x170000c45ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #2019 = POPCNT16rr
  { 2020,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x170000c06ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #2020 = POPCNT32rm
  { 2021,	2,	1,	0,	0,	0, 0x170000c05ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #2021 = POPCNT32rr
  { 2022,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x170002c06ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #2022 = POPCNT64rm
  { 2023,	2,	1,	0,	0,	0, 0x170002c05ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #2023 = POPCNT64rr
  { 2024,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3e000041ULL, NULL, NULL, 0 },  // Inst #2024 = POPDS16
  { 2025,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3e000001ULL, NULL, NULL, 0 },  // Inst #2025 = POPDS32
  { 2026,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000041ULL, NULL, NULL, 0 },  // Inst #2026 = POPES16
  { 2027,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000001ULL, NULL, NULL, 0 },  // Inst #2027 = POPES32
  { 2028,	0,	0,	366,	0,	0|(1<<MCID::MayLoad), 0x13a000041ULL, ImplicitList11, ImplicitList11, 0 },  // Inst #2028 = POPF16
  { 2029,	0,	0,	367,	0,	0|(1<<MCID::MayLoad), 0x13a000001ULL, ImplicitList11, ImplicitList11, 0 },  // Inst #2029 = POPF32
  { 2030,	0,	0,	367,	0,	0|(1<<MCID::MayLoad), 0x13a000001ULL, ImplicitList13, ImplicitList14, 0 },  // Inst #2030 = POPF64
  { 2031,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000141ULL, NULL, NULL, 0 },  // Inst #2031 = POPFS16
  { 2032,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000101ULL, NULL, NULL, 0 },  // Inst #2032 = POPFS32
  { 2033,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000101ULL, NULL, NULL, 0 },  // Inst #2033 = POPFS64
  { 2034,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000141ULL, NULL, NULL, 0 },  // Inst #2034 = POPGS16
  { 2035,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000101ULL, NULL, NULL, 0 },  // Inst #2035 = POPGS32
  { 2036,	0,	0,	365,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000101ULL, NULL, NULL, 0 },  // Inst #2036 = POPGS64
  { 2037,	0,	0,	368,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2e000041ULL, NULL, NULL, 0 },  // Inst #2037 = POPSS16
  { 2038,	0,	0,	368,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2e000001ULL, NULL, NULL, 0 },  // Inst #2038 = POPSS32
  { 2039,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x1d7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2039 = PORrm
  { 2040,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x1d7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2040 = PORrr
  { 2041,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000118ULL, NULL, NULL, OperandInfo40 },  // Inst #2041 = PREFETCH
  { 2042,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000118ULL, NULL, NULL, OperandInfo40 },  // Inst #2042 = PREFETCHNTA
  { 2043,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000119ULL, NULL, NULL, OperandInfo40 },  // Inst #2043 = PREFETCHT0
  { 2044,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x3000011aULL, NULL, NULL, OperandInfo40 },  // Inst #2044 = PREFETCHT1
  { 2045,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x3000011bULL, NULL, NULL, OperandInfo40 },  // Inst #2045 = PREFETCHT2
  { 2046,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000119ULL, NULL, NULL, OperandInfo40 },  // Inst #2046 = PREFETCHW
  { 2047,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1ed800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2047 = PSADBWrm
  { 2048,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x1ed800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2048 = PSADBWrr
  { 2049,	7,	1,	369,	0,	0|(1<<MCID::MayLoad), 0x1800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2049 = PSHUFBrm
  { 2050,	3,	1,	370,	0,	0, 0x1800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2050 = PSHUFBrr
  { 2051,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0xe1804146ULL, NULL, NULL, OperandInfo51 },  // Inst #2051 = PSHUFDmi
  { 2052,	3,	1,	372,	0,	0, 0xe1804145ULL, NULL, NULL, OperandInfo52 },  // Inst #2052 = PSHUFDri
  { 2053,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0xe1804c06ULL, NULL, NULL, OperandInfo51 },  // Inst #2053 = PSHUFHWmi
  { 2054,	3,	1,	372,	0,	0, 0xe1804c05ULL, NULL, NULL, OperandInfo52 },  // Inst #2054 = PSHUFHWri
  { 2055,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0xe1804b06ULL, NULL, NULL, OperandInfo51 },  // Inst #2055 = PSHUFLWmi
  { 2056,	3,	1,	372,	0,	0, 0xe1804b05ULL, NULL, NULL, OperandInfo52 },  // Inst #2056 = PSHUFLWri
  { 2057,	7,	1,	373,	0,	0|(1<<MCID::MayLoad), 0x11800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2057 = PSIGNBrm
  { 2058,	3,	1,	374,	0,	0, 0x11800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2058 = PSIGNBrr
  { 2059,	7,	1,	373,	0,	0|(1<<MCID::MayLoad), 0x15800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2059 = PSIGNDrm
  { 2060,	3,	1,	374,	0,	0, 0x15800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2060 = PSIGNDrr
  { 2061,	7,	1,	373,	0,	0|(1<<MCID::MayLoad), 0x13800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2061 = PSIGNWrm
  { 2062,	3,	1,	374,	0,	0, 0x13800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2062 = PSIGNWrr
  { 2063,	3,	1,	375,	0,	0, 0xe7804157ULL, NULL, NULL, OperandInfo217 },  // Inst #2063 = PSLLDQri
  { 2064,	3,	1,	376,	0,	0, 0xe5804156ULL, NULL, NULL, OperandInfo217 },  // Inst #2064 = PSLLDri
  { 2065,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x1e5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2065 = PSLLDrm
  { 2066,	3,	1,	378,	0,	0, 0x1e5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2066 = PSLLDrr
  { 2067,	3,	1,	376,	0,	0, 0xe7804156ULL, NULL, NULL, OperandInfo217 },  // Inst #2067 = PSLLQri
  { 2068,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x1e7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2068 = PSLLQrm
  { 2069,	3,	1,	378,	0,	0, 0x1e7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2069 = PSLLQrr
  { 2070,	3,	1,	376,	0,	0, 0xe3804156ULL, NULL, NULL, OperandInfo217 },  // Inst #2070 = PSLLWri
  { 2071,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x1e3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2071 = PSLLWrm
  { 2072,	3,	1,	378,	0,	0, 0x1e3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2072 = PSLLWrr
  { 2073,	3,	1,	376,	0,	0, 0xe5804154ULL, NULL, NULL, OperandInfo217 },  // Inst #2073 = PSRADri
  { 2074,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x1c5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2074 = PSRADrm
  { 2075,	3,	1,	378,	0,	0, 0x1c5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2075 = PSRADrr
  { 2076,	3,	1,	376,	0,	0, 0xe3804154ULL, NULL, NULL, OperandInfo217 },  // Inst #2076 = PSRAWri
  { 2077,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x1c3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2077 = PSRAWrm
  { 2078,	3,	1,	378,	0,	0, 0x1c3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2078 = PSRAWrr
  { 2079,	3,	1,	375,	0,	0, 0xe7804153ULL, NULL, NULL, OperandInfo217 },  // Inst #2079 = PSRLDQri
  { 2080,	3,	1,	376,	0,	0, 0xe5804152ULL, NULL, NULL, OperandInfo217 },  // Inst #2080 = PSRLDri
  { 2081,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x1a5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2081 = PSRLDrm
  { 2082,	3,	1,	378,	0,	0, 0x1a5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2082 = PSRLDrr
  { 2083,	3,	1,	376,	0,	0, 0xe7804152ULL, NULL, NULL, OperandInfo217 },  // Inst #2083 = PSRLQri
  { 2084,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x1a7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2084 = PSRLQrm
  { 2085,	3,	1,	378,	0,	0, 0x1a7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2085 = PSRLQrr
  { 2086,	3,	1,	376,	0,	0, 0xe3804152ULL, NULL, NULL, OperandInfo217 },  // Inst #2086 = PSRLWri
  { 2087,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x1a3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2087 = PSRLWrm
  { 2088,	3,	1,	378,	0,	0, 0x1a3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2088 = PSRLWrr
  { 2089,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1f1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2089 = PSUBBrm
  { 2090,	3,	1,	340,	0,	0, 0x1f1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2090 = PSUBBrr
  { 2091,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1f5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2091 = PSUBDrm
  { 2092,	3,	1,	340,	0,	0, 0x1f5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2092 = PSUBDrr
  { 2093,	7,	1,	341,	0,	0|(1<<MCID::MayLoad), 0x1f7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2093 = PSUBQrm
  { 2094,	3,	1,	342,	0,	0, 0x1f7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2094 = PSUBQrr
  { 2095,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1d1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2095 = PSUBSBrm
  { 2096,	3,	1,	340,	0,	0, 0x1d1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2096 = PSUBSBrr
  { 2097,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1d3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2097 = PSUBSWrm
  { 2098,	3,	1,	340,	0,	0, 0x1d3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2098 = PSUBSWrr
  { 2099,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1b1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2099 = PSUBUSBrm
  { 2100,	3,	1,	340,	0,	0, 0x1b1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2100 = PSUBUSBrr
  { 2101,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1b3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2101 = PSUBUSWrm
  { 2102,	3,	1,	340,	0,	0, 0x1b3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2102 = PSUBUSWrr
  { 2103,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x1f3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2103 = PSUBWrm
  { 2104,	3,	1,	340,	0,	0, 0x1f3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2104 = PSUBWrr
  { 2105,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4000176000106ULL, NULL, NULL, OperandInfo157 },  // Inst #2105 = PSWAPDrm
  { 2106,	2,	1,	0,	0,	0, 0x4000176000105ULL, NULL, NULL, OperandInfo161 },  // Inst #2106 = PSWAPDrr
  { 2107,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2f800d46ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #2107 = PTESTrm
  { 2108,	2,	0,	0,	0,	0, 0x2f800d45ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #2108 = PTESTrr
  { 2109,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xd1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2109 = PUNPCKHBWrm
  { 2110,	3,	1,	380,	0,	0, 0xd1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2110 = PUNPCKHBWrr
  { 2111,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xd5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2111 = PUNPCKHDQrm
  { 2112,	3,	1,	380,	0,	0, 0xd5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2112 = PUNPCKHDQrr
  { 2113,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xdb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2113 = PUNPCKHQDQrm
  { 2114,	3,	1,	380,	0,	0, 0xdb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2114 = PUNPCKHQDQrr
  { 2115,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xd3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2115 = PUNPCKHWDrm
  { 2116,	3,	1,	380,	0,	0, 0xd3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2116 = PUNPCKHWDrr
  { 2117,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xc1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2117 = PUNPCKLBWrm
  { 2118,	3,	1,	380,	0,	0, 0xc1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2118 = PUNPCKLBWrr
  { 2119,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xc5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2119 = PUNPCKLDQrm
  { 2120,	3,	1,	380,	0,	0, 0xc5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2120 = PUNPCKLDQrr
  { 2121,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xd9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2121 = PUNPCKLQDQrm
  { 2122,	3,	1,	380,	0,	0, 0xd9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2122 = PUNPCKLQDQrr
  { 2123,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xc3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2123 = PUNPCKLWDrm
  { 2124,	3,	1,	380,	0,	0, 0xc3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2124 = PUNPCKLWDrr
  { 2125,	1,	0,	381,	0,	0|(1<<MCID::MayStore), 0xa0000042ULL, ImplicitList11, ImplicitList11, OperandInfo112 },  // Inst #2125 = PUSH16r
  { 2126,	5,	0,	382,	0,	0|(1<<MCID::MayStore), 0x1fe00005eULL, ImplicitList11, ImplicitList11, OperandInfo40 },  // Inst #2126 = PUSH16rmm
  { 2127,	1,	0,	381,	0,	0|(1<<MCID::MayStore), 0x1fe000056ULL, ImplicitList11, ImplicitList11, OperandInfo112 },  // Inst #2127 = PUSH16rmr
  { 2128,	1,	0,	381,	0,	0|(1<<MCID::MayStore), 0xa0000002ULL, ImplicitList11, ImplicitList11, OperandInfo71 },  // Inst #2128 = PUSH32r
  { 2129,	5,	0,	382,	0,	0|(1<<MCID::MayStore), 0x1fe00001eULL, ImplicitList11, ImplicitList11, OperandInfo40 },  // Inst #2129 = PUSH32rmm
  { 2130,	1,	0,	381,	0,	0|(1<<MCID::MayStore), 0x1fe000016ULL, ImplicitList11, ImplicitList11, OperandInfo71 },  // Inst #2130 = PUSH32rmr
  { 2131,	1,	0,	383,	0,	0|(1<<MCID::MayStore), 0xd000c001ULL, ImplicitList13, ImplicitList13, OperandInfo2 },  // Inst #2131 = PUSH64i16
  { 2132,	1,	0,	383,	0,	0|(1<<MCID::MayStore), 0xd0014001ULL, ImplicitList13, ImplicitList13, OperandInfo2 },  // Inst #2132 = PUSH64i32
  { 2133,	1,	0,	383,	0,	0|(1<<MCID::MayStore), 0xd4004001ULL, ImplicitList13, ImplicitList13, OperandInfo2 },  // Inst #2133 = PUSH64i8
  { 2134,	1,	0,	381,	0,	0|(1<<MCID::MayStore), 0xa0000002ULL, ImplicitList13, ImplicitList13, OperandInfo73 },  // Inst #2134 = PUSH64r
  { 2135,	5,	0,	382,	0,	0|(1<<MCID::MayStore), 0x1fe00001eULL, ImplicitList13, ImplicitList13, OperandInfo40 },  // Inst #2135 = PUSH64rmm
  { 2136,	1,	0,	381,	0,	0|(1<<MCID::MayStore), 0x1fe000016ULL, ImplicitList13, ImplicitList13, OperandInfo73 },  // Inst #2136 = PUSH64rmr
  { 2137,	0,	0,	384,	0,	0|(1<<MCID::MayStore), 0xc0000001ULL, ImplicitList56, ImplicitList11, 0 },  // Inst #2137 = PUSHA32
  { 2138,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c000041ULL, NULL, NULL, 0 },  // Inst #2138 = PUSHCS16
  { 2139,	0,	0,	386,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c000001ULL, NULL, NULL, 0 },  // Inst #2139 = PUSHCS32
  { 2140,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3c000041ULL, NULL, NULL, 0 },  // Inst #2140 = PUSHDS16
  { 2141,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3c000001ULL, NULL, NULL, 0 },  // Inst #2141 = PUSHDS32
  { 2142,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000041ULL, NULL, NULL, 0 },  // Inst #2142 = PUSHES16
  { 2143,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000001ULL, NULL, NULL, 0 },  // Inst #2143 = PUSHES32
  { 2144,	0,	0,	387,	0,	0|(1<<MCID::MayStore), 0x138000041ULL, ImplicitList11, ImplicitList11, 0 },  // Inst #2144 = PUSHF16
  { 2145,	0,	0,	387,	0,	0|(1<<MCID::MayStore), 0x138000001ULL, ImplicitList11, ImplicitList11, 0 },  // Inst #2145 = PUSHF32
  { 2146,	0,	0,	387,	0,	0|(1<<MCID::MayStore), 0x138000001ULL, ImplicitList14, ImplicitList13, 0 },  // Inst #2146 = PUSHF64
  { 2147,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000141ULL, NULL, NULL, 0 },  // Inst #2147 = PUSHFS16
  { 2148,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000101ULL, NULL, NULL, 0 },  // Inst #2148 = PUSHFS32
  { 2149,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000101ULL, NULL, NULL, 0 },  // Inst #2149 = PUSHFS64
  { 2150,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000141ULL, NULL, NULL, 0 },  // Inst #2150 = PUSHGS16
  { 2151,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000101ULL, NULL, NULL, 0 },  // Inst #2151 = PUSHGS32
  { 2152,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000101ULL, NULL, NULL, 0 },  // Inst #2152 = PUSHGS64
  { 2153,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2c000041ULL, NULL, NULL, 0 },  // Inst #2153 = PUSHSS16
  { 2154,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2c000001ULL, NULL, NULL, 0 },  // Inst #2154 = PUSHSS32
  { 2155,	1,	0,	383,	0,	0|(1<<MCID::MayStore), 0xd000c041ULL, ImplicitList11, ImplicitList11, OperandInfo2 },  // Inst #2155 = PUSHi16
  { 2156,	1,	0,	383,	0,	0|(1<<MCID::MayStore), 0xd0014001ULL, ImplicitList11, ImplicitList11, OperandInfo2 },  // Inst #2156 = PUSHi32
  { 2157,	1,	0,	383,	0,	0|(1<<MCID::MayStore), 0xd4004001ULL, ImplicitList11, ImplicitList11, OperandInfo2 },  // Inst #2157 = PUSHi8
  { 2158,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x1df800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2158 = PXORrm
  { 2159,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x1df800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2159 = PXORrr
  { 2160,	5,	0,	388,	0,	0, 0x1a200005aULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2160 = RCL16m1
  { 2161,	5,	0,	388,	0,	0, 0x1a600005aULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2161 = RCL16mCL
  { 2162,	6,	0,	388,	0,	0, 0x18200405aULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2162 = RCL16mi
  { 2163,	2,	1,	389,	0,	0, 0x1a2000052ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #2163 = RCL16r1
  { 2164,	2,	1,	389,	0,	0, 0x1a6000052ULL, ImplicitList57, ImplicitList3, OperandInfo110 },  // Inst #2164 = RCL16rCL
  { 2165,	3,	1,	389,	0,	0, 0x182004052ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2165 = RCL16ri
  { 2166,	5,	0,	388,	0,	0, 0x1a200001aULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2166 = RCL32m1
  { 2167,	5,	0,	388,	0,	0, 0x1a600001aULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2167 = RCL32mCL
  { 2168,	6,	0,	388,	0,	0, 0x18200401aULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2168 = RCL32mi
  { 2169,	2,	1,	389,	0,	0, 0x1a2000012ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #2169 = RCL32r1
  { 2170,	2,	1,	389,	0,	0, 0x1a6000012ULL, ImplicitList57, ImplicitList3, OperandInfo66 },  // Inst #2170 = RCL32rCL
  { 2171,	3,	1,	389,	0,	0, 0x182004012ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2171 = RCL32ri
  { 2172,	5,	0,	388,	0,	0, 0x1a200201aULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2172 = RCL64m1
  { 2173,	5,	0,	388,	0,	0, 0x1a600201aULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2173 = RCL64mCL
  { 2174,	6,	0,	388,	0,	0, 0x18200601aULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2174 = RCL64mi
  { 2175,	2,	1,	389,	0,	0, 0x1a2002012ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #2175 = RCL64r1
  { 2176,	2,	1,	389,	0,	0, 0x1a6002012ULL, ImplicitList57, ImplicitList3, OperandInfo67 },  // Inst #2176 = RCL64rCL
  { 2177,	3,	1,	389,	0,	0, 0x182006012ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2177 = RCL64ri
  { 2178,	5,	0,	388,	0,	0, 0x1a000001aULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2178 = RCL8m1
  { 2179,	5,	0,	388,	0,	0, 0x1a400001aULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2179 = RCL8mCL
  { 2180,	6,	0,	388,	0,	0, 0x18000401aULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2180 = RCL8mi
  { 2181,	2,	1,	389,	0,	0, 0x1a0000012ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #2181 = RCL8r1
  { 2182,	2,	1,	389,	0,	0, 0x1a4000012ULL, ImplicitList57, ImplicitList3, OperandInfo111 },  // Inst #2182 = RCL8rCL
  { 2183,	3,	1,	389,	0,	0, 0x180004012ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #2183 = RCL8ri
  { 2184,	6,	1,	390,	0,	0|(1<<MCID::MayLoad), 0xa6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2184 = RCPPSm
  { 2185,	6,	1,	390,	0,	0|(1<<MCID::MayLoad), 0xa6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2185 = RCPPSm_Int
  { 2186,	2,	1,	391,	0,	0, 0xa6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2186 = RCPPSr
  { 2187,	2,	1,	391,	0,	0, 0xa6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2187 = RCPPSr_Int
  { 2188,	6,	1,	392,	0,	0|(1<<MCID::MayLoad), 0xa6000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #2188 = RCPSSm
  { 2189,	7,	1,	393,	0,	0|(1<<MCID::MayLoad), 0xa6000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #2189 = RCPSSm_Int
  { 2190,	2,	1,	394,	0,	0, 0xa6000c05ULL, NULL, NULL, OperandInfo124 },  // Inst #2190 = RCPSSr
  { 2191,	3,	1,	395,	0,	0, 0xa6000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #2191 = RCPSSr_Int
  { 2192,	5,	0,	388,	0,	0, 0x1a200005bULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2192 = RCR16m1
  { 2193,	5,	0,	388,	0,	0, 0x1a600005bULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2193 = RCR16mCL
  { 2194,	6,	0,	388,	0,	0, 0x18200405bULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2194 = RCR16mi
  { 2195,	2,	1,	389,	0,	0, 0x1a2000053ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #2195 = RCR16r1
  { 2196,	2,	1,	389,	0,	0, 0x1a6000053ULL, ImplicitList57, ImplicitList3, OperandInfo110 },  // Inst #2196 = RCR16rCL
  { 2197,	3,	1,	389,	0,	0, 0x182004053ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2197 = RCR16ri
  { 2198,	5,	0,	388,	0,	0, 0x1a200001bULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2198 = RCR32m1
  { 2199,	5,	0,	388,	0,	0, 0x1a600001bULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2199 = RCR32mCL
  { 2200,	6,	0,	388,	0,	0, 0x18200401bULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2200 = RCR32mi
  { 2201,	2,	1,	389,	0,	0, 0x1a2000013ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #2201 = RCR32r1
  { 2202,	2,	1,	389,	0,	0, 0x1a6000013ULL, ImplicitList57, ImplicitList3, OperandInfo66 },  // Inst #2202 = RCR32rCL
  { 2203,	3,	1,	389,	0,	0, 0x182004013ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2203 = RCR32ri
  { 2204,	5,	0,	388,	0,	0, 0x1a200201bULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2204 = RCR64m1
  { 2205,	5,	0,	388,	0,	0, 0x1a600201bULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2205 = RCR64mCL
  { 2206,	6,	0,	388,	0,	0, 0x18200601bULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2206 = RCR64mi
  { 2207,	2,	1,	389,	0,	0, 0x1a2002013ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #2207 = RCR64r1
  { 2208,	2,	1,	389,	0,	0, 0x1a6002013ULL, ImplicitList57, ImplicitList3, OperandInfo67 },  // Inst #2208 = RCR64rCL
  { 2209,	3,	1,	389,	0,	0, 0x182006013ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2209 = RCR64ri
  { 2210,	5,	0,	388,	0,	0, 0x1a000001bULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2210 = RCR8m1
  { 2211,	5,	0,	388,	0,	0, 0x1a400001bULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2211 = RCR8mCL
  { 2212,	6,	0,	388,	0,	0, 0x18000401bULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2212 = RCR8mi
  { 2213,	2,	1,	389,	0,	0, 0x1a0000013ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #2213 = RCR8r1
  { 2214,	2,	1,	389,	0,	0, 0x1a4000013ULL, ImplicitList57, ImplicitList3, OperandInfo111 },  // Inst #2214 = RCR8rCL
  { 2215,	3,	1,	389,	0,	0, 0x180004013ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #2215 = RCR8ri
  { 2216,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c10ULL, NULL, NULL, OperandInfo71 },  // Inst #2216 = RDFSBASE
  { 2217,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c10ULL, NULL, NULL, OperandInfo73 },  // Inst #2217 = RDFSBASE64
  { 2218,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c11ULL, NULL, NULL, OperandInfo71 },  // Inst #2218 = RDGSBASE
  { 2219,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c11ULL, NULL, NULL, OperandInfo73 },  // Inst #2219 = RDGSBASE64
  { 2220,	0,	0,	396,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x64000101ULL, NULL, NULL, 0 },  // Inst #2220 = RDMSR
  { 2221,	0,	0,	397,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x66000101ULL, NULL, NULL, 0 },  // Inst #2221 = RDPMC
  { 2222,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000156ULL, NULL, ImplicitList3, OperandInfo112 },  // Inst #2222 = RDRAND16r
  { 2223,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000116ULL, NULL, ImplicitList3, OperandInfo71 },  // Inst #2223 = RDRAND32r
  { 2224,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e002116ULL, NULL, ImplicitList3, OperandInfo73 },  // Inst #2224 = RDRAND64r
  { 2225,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000157ULL, NULL, ImplicitList3, OperandInfo112 },  // Inst #2225 = RDSEED16r
  { 2226,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000117ULL, NULL, ImplicitList3, OperandInfo71 },  // Inst #2226 = RDSEED32r
  { 2227,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e002117ULL, NULL, ImplicitList3, OperandInfo73 },  // Inst #2227 = RDSEED64r
  { 2228,	0,	0,	398,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x62000101ULL, NULL, ImplicitList27, 0 },  // Inst #2228 = RDTSC
  { 2229,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012eULL, NULL, ImplicitList58, 0 },  // Inst #2229 = RDTSCP
  { 2230,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #2230 = RELEASE_MOV16mr
  { 2231,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #2231 = RELEASE_MOV32mr
  { 2232,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #2232 = RELEASE_MOV64mr
  { 2233,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #2233 = RELEASE_MOV8mr
  { 2234,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e4000001ULL, ImplicitList54, ImplicitList36, 0 },  // Inst #2234 = REPNE_PREFIX
  { 2235,	0,	0,	399,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148000201ULL, ImplicitList59, ImplicitList59, 0 },  // Inst #2235 = REP_MOVSB_32
  { 2236,	0,	0,	399,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148000201ULL, ImplicitList60, ImplicitList60, 0 },  // Inst #2236 = REP_MOVSB_64
  { 2237,	0,	0,	399,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000201ULL, ImplicitList59, ImplicitList59, 0 },  // Inst #2237 = REP_MOVSD_32
  { 2238,	0,	0,	399,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000201ULL, ImplicitList60, ImplicitList60, 0 },  // Inst #2238 = REP_MOVSD_64
  { 2239,	0,	0,	399,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a002201ULL, ImplicitList60, ImplicitList60, 0 },  // Inst #2239 = REP_MOVSQ_64
  { 2240,	0,	0,	399,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000241ULL, ImplicitList59, ImplicitList59, 0 },  // Inst #2240 = REP_MOVSW_32
  { 2241,	0,	0,	399,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000241ULL, ImplicitList60, ImplicitList60, 0 },  // Inst #2241 = REP_MOVSW_64
  { 2242,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e6000001ULL, ImplicitList54, ImplicitList36, 0 },  // Inst #2242 = REP_PREFIX
  { 2243,	0,	0,	400,	0,	0|(1<<MCID::MayStore), 0x154000201ULL, ImplicitList61, ImplicitList62, 0 },  // Inst #2243 = REP_STOSB_32
  { 2244,	0,	0,	400,	0,	0|(1<<MCID::MayStore), 0x154000201ULL, ImplicitList63, ImplicitList64, 0 },  // Inst #2244 = REP_STOSB_64
  { 2245,	0,	0,	400,	0,	0|(1<<MCID::MayStore), 0x156000201ULL, ImplicitList65, ImplicitList62, 0 },  // Inst #2245 = REP_STOSD_32
  { 2246,	0,	0,	400,	0,	0|(1<<MCID::MayStore), 0x156000201ULL, ImplicitList66, ImplicitList64, 0 },  // Inst #2246 = REP_STOSD_64
  { 2247,	0,	0,	400,	0,	0|(1<<MCID::MayStore), 0x156002201ULL, ImplicitList66, ImplicitList64, 0 },  // Inst #2247 = REP_STOSQ_64
  { 2248,	0,	0,	400,	0,	0|(1<<MCID::MayStore), 0x156000241ULL, ImplicitList67, ImplicitList62, 0 },  // Inst #2248 = REP_STOSW_32
  { 2249,	0,	0,	400,	0,	0|(1<<MCID::MayStore), 0x156000241ULL, ImplicitList68, ImplicitList64, 0 },  // Inst #2249 = REP_STOSW_64
  { 2250,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x1860e0001ULL, NULL, NULL, 0 },  // Inst #2250 = RET
  { 2251,	1,	0,	401,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x1840ec001ULL, NULL, NULL, OperandInfo2 },  // Inst #2251 = RETI
  { 2252,	1,	0,	401,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1840ec041ULL, NULL, NULL, OperandInfo2 },  // Inst #2252 = RETIW
  { 2253,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1860e0041ULL, NULL, NULL, 0 },  // Inst #2253 = RETW
  { 2254,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x90000001ULL, NULL, NULL, 0 },  // Inst #2254 = REX64_PREFIX
  { 2255,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000058ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2255 = ROL16m1
  { 2256,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000058ULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2256 = ROL16mCL
  { 2257,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004058ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2257 = ROL16mi
  { 2258,	2,	1,	389,	0,	0, 0x1a2000050ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #2258 = ROL16r1
  { 2259,	2,	1,	389,	0,	0, 0x1a6000050ULL, ImplicitList57, ImplicitList3, OperandInfo110 },  // Inst #2259 = ROL16rCL
  { 2260,	3,	1,	389,	0,	0, 0x182004050ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2260 = ROL16ri
  { 2261,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2261 = ROL32m1
  { 2262,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000018ULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2262 = ROL32mCL
  { 2263,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2263 = ROL32mi
  { 2264,	2,	1,	389,	0,	0, 0x1a2000010ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #2264 = ROL32r1
  { 2265,	2,	1,	389,	0,	0, 0x1a6000010ULL, ImplicitList57, ImplicitList3, OperandInfo66 },  // Inst #2265 = ROL32rCL
  { 2266,	3,	1,	389,	0,	0, 0x182004010ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2266 = ROL32ri
  { 2267,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2002018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2267 = ROL64m1
  { 2268,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6002018ULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2268 = ROL64mCL
  { 2269,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182006018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2269 = ROL64mi
  { 2270,	2,	1,	389,	0,	0, 0x1a2002010ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #2270 = ROL64r1
  { 2271,	2,	1,	389,	0,	0, 0x1a6002010ULL, ImplicitList57, ImplicitList3, OperandInfo67 },  // Inst #2271 = ROL64rCL
  { 2272,	3,	1,	389,	0,	0, 0x182006010ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2272 = ROL64ri
  { 2273,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a0000018ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2273 = ROL8m1
  { 2274,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a4000018ULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2274 = ROL8mCL
  { 2275,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180004018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2275 = ROL8mi
  { 2276,	2,	1,	389,	0,	0, 0x1a0000010ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #2276 = ROL8r1
  { 2277,	2,	1,	389,	0,	0, 0x1a4000010ULL, ImplicitList57, ImplicitList3, OperandInfo111 },  // Inst #2277 = ROL8rCL
  { 2278,	3,	1,	389,	0,	0, 0x180004010ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #2278 = ROL8ri
  { 2279,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000059ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2279 = ROR16m1
  { 2280,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000059ULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2280 = ROR16mCL
  { 2281,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004059ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2281 = ROR16mi
  { 2282,	2,	1,	389,	0,	0, 0x1a2000051ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #2282 = ROR16r1
  { 2283,	2,	1,	389,	0,	0, 0x1a6000051ULL, ImplicitList57, ImplicitList3, OperandInfo110 },  // Inst #2283 = ROR16rCL
  { 2284,	3,	1,	389,	0,	0, 0x182004051ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2284 = ROR16ri
  { 2285,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2285 = ROR32m1
  { 2286,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000019ULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2286 = ROR32mCL
  { 2287,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2287 = ROR32mi
  { 2288,	2,	1,	389,	0,	0, 0x1a2000011ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #2288 = ROR32r1
  { 2289,	2,	1,	389,	0,	0, 0x1a6000011ULL, ImplicitList57, ImplicitList3, OperandInfo66 },  // Inst #2289 = ROR32rCL
  { 2290,	3,	1,	389,	0,	0, 0x182004011ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2290 = ROR32ri
  { 2291,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2002019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2291 = ROR64m1
  { 2292,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6002019ULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2292 = ROR64mCL
  { 2293,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182006019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2293 = ROR64mi
  { 2294,	2,	1,	389,	0,	0, 0x1a2002011ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #2294 = ROR64r1
  { 2295,	2,	1,	389,	0,	0, 0x1a6002011ULL, ImplicitList57, ImplicitList3, OperandInfo67 },  // Inst #2295 = ROR64rCL
  { 2296,	3,	1,	389,	0,	0, 0x182006011ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2296 = ROR64ri
  { 2297,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a0000019ULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2297 = ROR8m1
  { 2298,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a4000019ULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2298 = ROR8mCL
  { 2299,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180004019ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2299 = ROR8mi
  { 2300,	2,	1,	389,	0,	0, 0x1a0000011ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #2300 = ROR8r1
  { 2301,	2,	1,	389,	0,	0, 0x1a4000011ULL, ImplicitList57, ImplicitList3, OperandInfo111 },  // Inst #2301 = ROR8rCL
  { 2302,	3,	1,	389,	0,	0, 0x180004011ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #2302 = ROR8ri
  { 2303,	7,	1,	402,	0,	0|(1<<MCID::MayLoad), 0x3e0005306ULL, NULL, NULL, OperandInfo130 },  // Inst #2303 = RORX32mi
  { 2304,	3,	1,	403,	0,	0, 0x3e0005305ULL, NULL, NULL, OperandInfo131 },  // Inst #2304 = RORX32ri
  { 2305,	7,	1,	402,	0,	0|(1<<MCID::MayLoad), 0x7e0005306ULL, NULL, NULL, OperandInfo132 },  // Inst #2305 = RORX64mi
  { 2306,	3,	1,	403,	0,	0, 0x7e0005305ULL, NULL, NULL, OperandInfo133 },  // Inst #2306 = RORX64ri
  { 2307,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x13004e46ULL, NULL, NULL, OperandInfo51 },  // Inst #2307 = ROUNDPDm
  { 2308,	3,	1,	0,	0,	0, 0x13004e45ULL, NULL, NULL, OperandInfo52 },  // Inst #2308 = ROUNDPDr
  { 2309,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #2309 = ROUNDPSm
  { 2310,	3,	1,	0,	0,	0, 0x10804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #2310 = ROUNDPSr
  { 2311,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x16004e46ULL, NULL, NULL, OperandInfo64 },  // Inst #2311 = ROUNDSDm
  { 2312,	4,	1,	0,	0,	0, 0x16004e45ULL, NULL, NULL, OperandInfo90 },  // Inst #2312 = ROUNDSDr
  { 2313,	4,	1,	0,	0,	0, 0x16004e45ULL, NULL, NULL, OperandInfo65 },  // Inst #2313 = ROUNDSDr_Int
  { 2314,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x14004e46ULL, NULL, NULL, OperandInfo64 },  // Inst #2314 = ROUNDSSm
  { 2315,	4,	1,	0,	0,	0, 0x14004e45ULL, NULL, NULL, OperandInfo92 },  // Inst #2315 = ROUNDSSr
  { 2316,	4,	1,	0,	0,	0, 0x14004e45ULL, NULL, NULL, OperandInfo65 },  // Inst #2316 = ROUNDSSr_Int
  { 2317,	0,	0,	404,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x154000101ULL, NULL, NULL, 0 },  // Inst #2317 = RSM
  { 2318,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0xa4800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2318 = RSQRTPSm
  { 2319,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0xa4800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2319 = RSQRTPSm_Int
  { 2320,	2,	1,	406,	0,	0, 0xa4800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2320 = RSQRTPSr
  { 2321,	2,	1,	406,	0,	0, 0xa4800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2321 = RSQRTPSr_Int
  { 2322,	6,	1,	407,	0,	0|(1<<MCID::MayLoad), 0xa4000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #2322 = RSQRTSSm
  { 2323,	7,	1,	408,	0,	0|(1<<MCID::MayLoad), 0xa4000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #2323 = RSQRTSSm_Int
  { 2324,	2,	1,	409,	0,	0, 0xa4000c05ULL, NULL, NULL, OperandInfo124 },  // Inst #2324 = RSQRTSSr
  { 2325,	3,	1,	410,	0,	0, 0xa4000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #2325 = RSQRTSSr_Int
  { 2326,	0,	0,	188,	0,	0, 0x13c000001ULL, ImplicitList38, ImplicitList3, 0 },  // Inst #2326 = SAHF
  { 2327,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005fULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2327 = SAR16m1
  { 2328,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005fULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2328 = SAR16mCL
  { 2329,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2329 = SAR16mi
  { 2330,	2,	1,	389,	0,	0, 0x1a2000057ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #2330 = SAR16r1
  { 2331,	2,	1,	389,	0,	0, 0x1a6000057ULL, ImplicitList57, ImplicitList3, OperandInfo110 },  // Inst #2331 = SAR16rCL
  { 2332,	3,	1,	389,	0,	0, 0x182004057ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2332 = SAR16ri
  { 2333,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001fULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2333 = SAR32m1
  { 2334,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001fULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2334 = SAR32mCL
  { 2335,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2335 = SAR32mi
  { 2336,	2,	1,	389,	0,	0, 0x1a2000017ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #2336 = SAR32r1
  { 2337,	2,	1,	389,	0,	0, 0x1a6000017ULL, ImplicitList57, ImplicitList3, OperandInfo66 },  // Inst #2337 = SAR32rCL
  { 2338,	3,	1,	389,	0,	0, 0x182004017ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2338 = SAR32ri
  { 2339,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201fULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2339 = SAR64m1
  { 2340,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201fULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2340 = SAR64mCL
  { 2341,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2341 = SAR64mi
  { 2342,	2,	1,	389,	0,	0, 0x1a2002017ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #2342 = SAR64r1
  { 2343,	2,	1,	389,	0,	0, 0x1a6002017ULL, ImplicitList57, ImplicitList3, OperandInfo67 },  // Inst #2343 = SAR64rCL
  { 2344,	3,	1,	389,	0,	0, 0x182006017ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2344 = SAR64ri
  { 2345,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001fULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2345 = SAR8m1
  { 2346,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001fULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2346 = SAR8mCL
  { 2347,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401fULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2347 = SAR8mi
  { 2348,	2,	1,	389,	0,	0, 0x1a0000017ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #2348 = SAR8r1
  { 2349,	2,	1,	389,	0,	0, 0x1a4000017ULL, ImplicitList57, ImplicitList3, OperandInfo111 },  // Inst #2349 = SAR8rCL
  { 2350,	3,	1,	389,	0,	0, 0x180004017ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #2350 = SAR8ri
  { 2351,	7,	1,	411,	0,	0|(1<<MCID::MayLoad), 0x13ee001206ULL, NULL, NULL, OperandInfo60 },  // Inst #2351 = SARX32rm
  { 2352,	3,	1,	403,	0,	0, 0x13ee001205ULL, NULL, NULL, OperandInfo54 },  // Inst #2352 = SARX32rr
  { 2353,	7,	1,	411,	0,	0|(1<<MCID::MayLoad), 0x17ee001206ULL, NULL, NULL, OperandInfo61 },  // Inst #2353 = SARX64rm
  { 2354,	3,	1,	403,	0,	0, 0x17ee001205ULL, NULL, NULL, OperandInfo56 },  // Inst #2354 = SARX64rr
  { 2355,	1,	0,	5,	0,	0, 0x3a00c041ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #2355 = SBB16i16
  { 2356,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05bULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #2356 = SBB16mi
  { 2357,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405bULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #2357 = SBB16mi8
  { 2358,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32000044ULL, ImplicitList3, ImplicitList3, OperandInfo16 },  // Inst #2358 = SBB16mr
  { 2359,	3,	1,	5,	0,	0, 0x10200c053ULL, ImplicitList3, ImplicitList3, OperandInfo17 },  // Inst #2359 = SBB16ri
  { 2360,	3,	1,	5,	0,	0, 0x106004053ULL, ImplicitList3, ImplicitList3, OperandInfo17 },  // Inst #2360 = SBB16ri8
  { 2361,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x36000046ULL, ImplicitList3, ImplicitList3, OperandInfo18 },  // Inst #2361 = SBB16rm
  { 2362,	3,	1,	5,	0,	0, 0x32000043ULL, ImplicitList3, ImplicitList3, OperandInfo19 },  // Inst #2362 = SBB16rr
  { 2363,	3,	1,	5,	0,	0, 0x36000045ULL, ImplicitList3, ImplicitList3, OperandInfo19 },  // Inst #2363 = SBB16rr_REV
  { 2364,	1,	0,	5,	0,	0, 0x3a014001ULL, ImplicitList4, ImplicitList4, OperandInfo2 },  // Inst #2364 = SBB32i32
  { 2365,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401bULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #2365 = SBB32mi
  { 2366,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401bULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #2366 = SBB32mi8
  { 2367,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32000004ULL, ImplicitList3, ImplicitList3, OperandInfo20 },  // Inst #2367 = SBB32mr
  { 2368,	3,	1,	5,	0,	0, 0x102014013ULL, ImplicitList3, ImplicitList3, OperandInfo21 },  // Inst #2368 = SBB32ri
  { 2369,	3,	1,	5,	0,	0, 0x106004013ULL, ImplicitList3, ImplicitList3, OperandInfo21 },  // Inst #2369 = SBB32ri8
  { 2370,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x36000006ULL, ImplicitList3, ImplicitList3, OperandInfo22 },  // Inst #2370 = SBB32rm
  { 2371,	3,	1,	5,	0,	0, 0x32000003ULL, ImplicitList3, ImplicitList3, OperandInfo23 },  // Inst #2371 = SBB32rr
  { 2372,	3,	1,	5,	0,	0, 0x36000005ULL, ImplicitList3, ImplicitList3, OperandInfo23 },  // Inst #2372 = SBB32rr_REV
  { 2373,	1,	0,	5,	0,	0, 0x3a016001ULL, ImplicitList5, ImplicitList5, OperandInfo2 },  // Inst #2373 = SBB64i32
  { 2374,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601bULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #2374 = SBB64mi32
  { 2375,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601bULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #2375 = SBB64mi8
  { 2376,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32002004ULL, ImplicitList3, ImplicitList3, OperandInfo24 },  // Inst #2376 = SBB64mr
  { 2377,	3,	1,	5,	0,	0, 0x102016013ULL, ImplicitList3, ImplicitList3, OperandInfo25 },  // Inst #2377 = SBB64ri32
  { 2378,	3,	1,	5,	0,	0, 0x106006013ULL, ImplicitList3, ImplicitList3, OperandInfo25 },  // Inst #2378 = SBB64ri8
  { 2379,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x36002006ULL, ImplicitList3, ImplicitList3, OperandInfo26 },  // Inst #2379 = SBB64rm
  { 2380,	3,	1,	5,	0,	0, 0x32002003ULL, ImplicitList3, ImplicitList3, OperandInfo27 },  // Inst #2380 = SBB64rr
  { 2381,	3,	1,	5,	0,	0, 0x36002005ULL, ImplicitList3, ImplicitList3, OperandInfo27 },  // Inst #2381 = SBB64rr_REV
  { 2382,	1,	0,	5,	0,	0, 0x38004001ULL, ImplicitList6, ImplicitList6, OperandInfo2 },  // Inst #2382 = SBB8i8
  { 2383,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401bULL, ImplicitList3, ImplicitList3, OperandInfo15 },  // Inst #2383 = SBB8mi
  { 2384,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000004ULL, ImplicitList3, ImplicitList3, OperandInfo28 },  // Inst #2384 = SBB8mr
  { 2385,	3,	1,	5,	0,	0, 0x100004013ULL, ImplicitList3, ImplicitList3, OperandInfo29 },  // Inst #2385 = SBB8ri
  { 2386,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x34000006ULL, ImplicitList3, ImplicitList3, OperandInfo30 },  // Inst #2386 = SBB8rm
  { 2387,	3,	1,	5,	0,	0, 0x30000003ULL, ImplicitList3, ImplicitList3, OperandInfo31 },  // Inst #2387 = SBB8rr
  { 2388,	3,	1,	5,	0,	0, 0x34000005ULL, ImplicitList3, ImplicitList3, OperandInfo31 },  // Inst #2388 = SBB8rr_REV
  { 2389,	0,	0,	412,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e000041ULL, NULL, NULL, 0 },  // Inst #2389 = SCAS16
  { 2390,	0,	0,	412,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e000001ULL, NULL, NULL, 0 },  // Inst #2390 = SCAS32
  { 2391,	0,	0,	412,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e002001ULL, NULL, NULL, 0 },  // Inst #2391 = SCAS64
  { 2392,	0,	0,	412,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000001ULL, NULL, NULL, 0 },  // Inst #2392 = SCAS8
  { 2393,	2,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList11, ImplicitList69, OperandInfo32 },  // Inst #2393 = SEG_ALLOCA_32
  { 2394,	2,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, ImplicitList70, OperandInfo33 },  // Inst #2394 = SEG_ALLOCA_64
  { 2395,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x126000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2395 = SETAEm
  { 2396,	1,	1,	414,	0,	0, 0x126000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2396 = SETAEr
  { 2397,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x12e000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2397 = SETAm
  { 2398,	1,	1,	414,	0,	0, 0x12e000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2398 = SETAr
  { 2399,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x12c000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2399 = SETBEm
  { 2400,	1,	1,	414,	0,	0, 0x12c000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2400 = SETBEr
  { 2401,	1,	1,	9,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo112 },  // Inst #2401 = SETB_C16r
  { 2402,	1,	1,	9,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo71 },  // Inst #2402 = SETB_C32r
  { 2403,	1,	1,	9,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo73 },  // Inst #2403 = SETB_C64r
  { 2404,	1,	1,	9,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo113 },  // Inst #2404 = SETB_C8r
  { 2405,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x124000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2405 = SETBm
  { 2406,	1,	1,	414,	0,	0, 0x124000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2406 = SETBr
  { 2407,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x128000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2407 = SETEm
  { 2408,	1,	1,	414,	0,	0, 0x128000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2408 = SETEr
  { 2409,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x13a000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2409 = SETGEm
  { 2410,	1,	1,	414,	0,	0, 0x13a000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2410 = SETGEr
  { 2411,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x13e000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2411 = SETGm
  { 2412,	1,	1,	414,	0,	0, 0x13e000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2412 = SETGr
  { 2413,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x13c000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2413 = SETLEm
  { 2414,	1,	1,	414,	0,	0, 0x13c000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2414 = SETLEr
  { 2415,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x138000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2415 = SETLm
  { 2416,	1,	1,	414,	0,	0, 0x138000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2416 = SETLr
  { 2417,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x12a000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2417 = SETNEm
  { 2418,	1,	1,	414,	0,	0, 0x12a000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2418 = SETNEr
  { 2419,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x122000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2419 = SETNOm
  { 2420,	1,	1,	414,	0,	0, 0x122000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2420 = SETNOr
  { 2421,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x136000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2421 = SETNPm
  { 2422,	1,	1,	414,	0,	0, 0x136000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2422 = SETNPr
  { 2423,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x132000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2423 = SETNSm
  { 2424,	1,	1,	414,	0,	0, 0x132000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2424 = SETNSr
  { 2425,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x120000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2425 = SETOm
  { 2426,	1,	1,	414,	0,	0, 0x120000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2426 = SETOr
  { 2427,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x134000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2427 = SETPm
  { 2428,	1,	1,	414,	0,	0, 0x134000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2428 = SETPr
  { 2429,	5,	0,	413,	0,	0|(1<<MCID::MayStore), 0x130000118ULL, ImplicitList3, NULL, OperandInfo40 },  // Inst #2429 = SETSm
  { 2430,	1,	1,	414,	0,	0, 0x130000110ULL, ImplicitList3, NULL, OperandInfo113 },  // Inst #2430 = SETSr
  { 2431,	0,	0,	415,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c00012dULL, NULL, NULL, 0 },  // Inst #2431 = SFENCE
  { 2432,	5,	1,	416,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000158ULL, NULL, NULL, OperandInfo40 },  // Inst #2432 = SGDT16m
  { 2433,	5,	1,	416,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000118ULL, NULL, NULL, OperandInfo40 },  // Inst #2433 = SGDTm
  { 2434,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005cULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2434 = SHL16m1
  { 2435,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005cULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2435 = SHL16mCL
  { 2436,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2436 = SHL16mi
  { 2437,	2,	1,	389,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1a2000054ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #2437 = SHL16r1
  { 2438,	2,	1,	389,	0,	0, 0x1a6000054ULL, ImplicitList57, ImplicitList3, OperandInfo110 },  // Inst #2438 = SHL16rCL
  { 2439,	3,	1,	389,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182004054ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2439 = SHL16ri
  { 2440,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001cULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2440 = SHL32m1
  { 2441,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001cULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2441 = SHL32mCL
  { 2442,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2442 = SHL32mi
  { 2443,	2,	1,	389,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1a2000014ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #2443 = SHL32r1
  { 2444,	2,	1,	389,	0,	0, 0x1a6000014ULL, ImplicitList57, ImplicitList3, OperandInfo66 },  // Inst #2444 = SHL32rCL
  { 2445,	3,	1,	389,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182004014ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2445 = SHL32ri
  { 2446,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201cULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2446 = SHL64m1
  { 2447,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201cULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2447 = SHL64mCL
  { 2448,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2448 = SHL64mi
  { 2449,	2,	1,	389,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1a2002014ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #2449 = SHL64r1
  { 2450,	2,	1,	389,	0,	0, 0x1a6002014ULL, ImplicitList57, ImplicitList3, OperandInfo67 },  // Inst #2450 = SHL64rCL
  { 2451,	3,	1,	389,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182006014ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2451 = SHL64ri
  { 2452,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001cULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2452 = SHL8m1
  { 2453,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001cULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2453 = SHL8mCL
  { 2454,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401cULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2454 = SHL8mi
  { 2455,	2,	1,	389,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1a0000014ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #2455 = SHL8r1
  { 2456,	2,	1,	389,	0,	0, 0x1a4000014ULL, ImplicitList57, ImplicitList3, OperandInfo111 },  // Inst #2456 = SHL8rCL
  { 2457,	3,	1,	389,	0,	0, 0x180004014ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #2457 = SHL8ri
  { 2458,	6,	0,	417,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000144ULL, ImplicitList57, ImplicitList3, OperandInfo16 },  // Inst #2458 = SHLD16mrCL
  { 2459,	7,	0,	418,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148004144ULL, NULL, ImplicitList3, OperandInfo218 },  // Inst #2459 = SHLD16mri8
  { 2460,	3,	1,	419,	0,	0, 0x14a000143ULL, ImplicitList57, ImplicitList3, OperandInfo19 },  // Inst #2460 = SHLD16rrCL
  { 2461,	4,	1,	420,	0,	0|(1<<MCID::Commutable), 0x148004143ULL, NULL, ImplicitList3, OperandInfo219 },  // Inst #2461 = SHLD16rri8
  { 2462,	6,	0,	421,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000104ULL, ImplicitList57, ImplicitList3, OperandInfo20 },  // Inst #2462 = SHLD32mrCL
  { 2463,	7,	0,	422,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148004104ULL, NULL, ImplicitList3, OperandInfo220 },  // Inst #2463 = SHLD32mri8
  { 2464,	3,	1,	423,	0,	0, 0x14a000103ULL, ImplicitList57, ImplicitList3, OperandInfo23 },  // Inst #2464 = SHLD32rrCL
  { 2465,	4,	1,	424,	0,	0|(1<<MCID::Commutable), 0x148004103ULL, NULL, ImplicitList3, OperandInfo221 },  // Inst #2465 = SHLD32rri8
  { 2466,	6,	0,	425,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a002104ULL, ImplicitList57, ImplicitList3, OperandInfo24 },  // Inst #2466 = SHLD64mrCL
  { 2467,	7,	0,	426,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148006104ULL, NULL, ImplicitList3, OperandInfo222 },  // Inst #2467 = SHLD64mri8
  { 2468,	3,	1,	427,	0,	0, 0x14a002103ULL, ImplicitList57, ImplicitList3, OperandInfo27 },  // Inst #2468 = SHLD64rrCL
  { 2469,	4,	1,	428,	0,	0|(1<<MCID::Commutable), 0x148006103ULL, NULL, ImplicitList3, OperandInfo223 },  // Inst #2469 = SHLD64rri8
  { 2470,	7,	1,	411,	0,	0|(1<<MCID::MayLoad), 0x13ee000d46ULL, NULL, NULL, OperandInfo60 },  // Inst #2470 = SHLX32rm
  { 2471,	3,	1,	403,	0,	0, 0x13ee000d45ULL, NULL, NULL, OperandInfo54 },  // Inst #2471 = SHLX32rr
  { 2472,	7,	1,	411,	0,	0|(1<<MCID::MayLoad), 0x17ee000d46ULL, NULL, NULL, OperandInfo61 },  // Inst #2472 = SHLX64rm
  { 2473,	3,	1,	403,	0,	0, 0x17ee000d45ULL, NULL, NULL, OperandInfo56 },  // Inst #2473 = SHLX64rr
  { 2474,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005dULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2474 = SHR16m1
  { 2475,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005dULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2475 = SHR16mCL
  { 2476,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2476 = SHR16mi
  { 2477,	2,	1,	389,	0,	0, 0x1a2000055ULL, NULL, ImplicitList3, OperandInfo110 },  // Inst #2477 = SHR16r1
  { 2478,	2,	1,	389,	0,	0, 0x1a6000055ULL, ImplicitList57, ImplicitList3, OperandInfo110 },  // Inst #2478 = SHR16rCL
  { 2479,	3,	1,	389,	0,	0, 0x182004055ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2479 = SHR16ri
  { 2480,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001dULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2480 = SHR32m1
  { 2481,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001dULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2481 = SHR32mCL
  { 2482,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2482 = SHR32mi
  { 2483,	2,	1,	389,	0,	0, 0x1a2000015ULL, NULL, ImplicitList3, OperandInfo66 },  // Inst #2483 = SHR32r1
  { 2484,	2,	1,	389,	0,	0, 0x1a6000015ULL, ImplicitList57, ImplicitList3, OperandInfo66 },  // Inst #2484 = SHR32rCL
  { 2485,	3,	1,	389,	0,	0, 0x182004015ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2485 = SHR32ri
  { 2486,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201dULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2486 = SHR64m1
  { 2487,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201dULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2487 = SHR64mCL
  { 2488,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2488 = SHR64mi
  { 2489,	2,	1,	389,	0,	0, 0x1a2002015ULL, NULL, ImplicitList3, OperandInfo67 },  // Inst #2489 = SHR64r1
  { 2490,	2,	1,	389,	0,	0, 0x1a6002015ULL, ImplicitList57, ImplicitList3, OperandInfo67 },  // Inst #2490 = SHR64rCL
  { 2491,	3,	1,	389,	0,	0, 0x182006015ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2491 = SHR64ri
  { 2492,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001dULL, NULL, ImplicitList3, OperandInfo40 },  // Inst #2492 = SHR8m1
  { 2493,	5,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001dULL, ImplicitList57, ImplicitList3, OperandInfo40 },  // Inst #2493 = SHR8mCL
  { 2494,	6,	0,	388,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2494 = SHR8mi
  { 2495,	2,	1,	389,	0,	0, 0x1a0000015ULL, NULL, ImplicitList3, OperandInfo111 },  // Inst #2495 = SHR8r1
  { 2496,	2,	1,	389,	0,	0, 0x1a4000015ULL, ImplicitList57, ImplicitList3, OperandInfo111 },  // Inst #2496 = SHR8rCL
  { 2497,	3,	1,	389,	0,	0, 0x180004015ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #2497 = SHR8ri
  { 2498,	6,	0,	417,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a000144ULL, ImplicitList57, ImplicitList3, OperandInfo16 },  // Inst #2498 = SHRD16mrCL
  { 2499,	7,	0,	418,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158004144ULL, NULL, ImplicitList3, OperandInfo218 },  // Inst #2499 = SHRD16mri8
  { 2500,	3,	1,	419,	0,	0, 0x15a000143ULL, ImplicitList57, ImplicitList3, OperandInfo19 },  // Inst #2500 = SHRD16rrCL
  { 2501,	4,	1,	420,	0,	0|(1<<MCID::Commutable), 0x158004143ULL, NULL, ImplicitList3, OperandInfo219 },  // Inst #2501 = SHRD16rri8
  { 2502,	6,	0,	421,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a000104ULL, ImplicitList57, ImplicitList3, OperandInfo20 },  // Inst #2502 = SHRD32mrCL
  { 2503,	7,	0,	422,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158004104ULL, NULL, ImplicitList3, OperandInfo220 },  // Inst #2503 = SHRD32mri8
  { 2504,	3,	1,	423,	0,	0, 0x15a000103ULL, ImplicitList57, ImplicitList3, OperandInfo23 },  // Inst #2504 = SHRD32rrCL
  { 2505,	4,	1,	424,	0,	0|(1<<MCID::Commutable), 0x158004103ULL, NULL, ImplicitList3, OperandInfo221 },  // Inst #2505 = SHRD32rri8
  { 2506,	6,	0,	425,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a002104ULL, ImplicitList57, ImplicitList3, OperandInfo24 },  // Inst #2506 = SHRD64mrCL
  { 2507,	7,	0,	426,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158006104ULL, NULL, ImplicitList3, OperandInfo222 },  // Inst #2507 = SHRD64mri8
  { 2508,	3,	1,	427,	0,	0, 0x15a002103ULL, ImplicitList57, ImplicitList3, OperandInfo27 },  // Inst #2508 = SHRD64rrCL
  { 2509,	4,	1,	428,	0,	0|(1<<MCID::Commutable), 0x158006103ULL, NULL, ImplicitList3, OperandInfo223 },  // Inst #2509 = SHRD64rri8
  { 2510,	7,	1,	411,	0,	0|(1<<MCID::MayLoad), 0x13ee001106ULL, NULL, NULL, OperandInfo60 },  // Inst #2510 = SHRX32rm
  { 2511,	3,	1,	403,	0,	0, 0x13ee001105ULL, NULL, NULL, OperandInfo54 },  // Inst #2511 = SHRX32rr
  { 2512,	7,	1,	411,	0,	0|(1<<MCID::MayLoad), 0x17ee001106ULL, NULL, NULL, OperandInfo61 },  // Inst #2512 = SHRX64rm
  { 2513,	3,	1,	403,	0,	0, 0x17ee001105ULL, NULL, NULL, OperandInfo56 },  // Inst #2513 = SHRX64rr
  { 2514,	8,	1,	429,	0,	0|(1<<MCID::MayLoad), 0x18d004146ULL, NULL, NULL, OperandInfo64 },  // Inst #2514 = SHUFPDrmi
  { 2515,	4,	1,	430,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x18d004145ULL, NULL, NULL, OperandInfo65 },  // Inst #2515 = SHUFPDrri
  { 2516,	8,	1,	429,	0,	0|(1<<MCID::MayLoad), 0x18c804106ULL, NULL, NULL, OperandInfo64 },  // Inst #2516 = SHUFPSrmi
  { 2517,	4,	1,	430,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x18c804105ULL, NULL, NULL, OperandInfo65 },  // Inst #2517 = SHUFPSrri
  { 2518,	5,	1,	431,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000159ULL, NULL, NULL, OperandInfo40 },  // Inst #2518 = SIDT16m
  { 2519,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000119ULL, NULL, NULL, OperandInfo40 },  // Inst #2519 = SIDTm
  { 2520,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fc000401ULL, NULL, ImplicitList1, 0 },  // Inst #2520 = SIN_F
  { 2521,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #2521 = SIN_Fp32
  { 2522,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #2522 = SIN_Fp64
  { 2523,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #2523 = SIN_Fp80
  { 2524,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200013aULL, ImplicitList8, NULL, 0 },  // Inst #2524 = SKINIT
  { 2525,	5,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118ULL, NULL, NULL, OperandInfo40 },  // Inst #2525 = SLDT16m
  { 2526,	1,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150ULL, NULL, NULL, OperandInfo112 },  // Inst #2526 = SLDT16r
  { 2527,	1,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x110ULL, NULL, NULL, OperandInfo71 },  // Inst #2527 = SLDT32r
  { 2528,	5,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2118ULL, NULL, NULL, OperandInfo40 },  // Inst #2528 = SLDT64m
  { 2529,	1,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2110ULL, NULL, NULL, OperandInfo73 },  // Inst #2529 = SLDT64r
  { 2530,	5,	1,	433,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011cULL, NULL, NULL, OperandInfo40 },  // Inst #2530 = SMSW16m
  { 2531,	1,	1,	433,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000154ULL, NULL, NULL, OperandInfo112 },  // Inst #2531 = SMSW16r
  { 2532,	1,	1,	433,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000114ULL, NULL, NULL, OperandInfo71 },  // Inst #2532 = SMSW32r
  { 2533,	1,	1,	433,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2002114ULL, NULL, NULL, OperandInfo73 },  // Inst #2533 = SMSW64r
  { 2534,	6,	1,	434,	0,	0|(1<<MCID::MayLoad), 0xa3000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2534 = SQRTPDm
  { 2535,	2,	1,	435,	0,	0, 0xa3000145ULL, NULL, NULL, OperandInfo50 },  // Inst #2535 = SQRTPDr
  { 2536,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0xa2800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2536 = SQRTPSm
  { 2537,	2,	1,	406,	0,	0, 0xa2800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2537 = SQRTPSr
  { 2538,	6,	1,	436,	0,	0|(1<<MCID::MayLoad), 0xa2000b06ULL, NULL, NULL, OperandInfo100 },  // Inst #2538 = SQRTSDm
  { 2539,	6,	1,	436,	0,	0|(1<<MCID::MayLoad), 0xa2000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #2539 = SQRTSDm_Int
  { 2540,	2,	1,	437,	0,	0, 0xa2000b05ULL, NULL, NULL, OperandInfo123 },  // Inst #2540 = SQRTSDr
  { 2541,	2,	1,	437,	0,	0, 0xa2000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #2541 = SQRTSDr_Int
  { 2542,	6,	1,	407,	0,	0|(1<<MCID::MayLoad), 0xa2000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #2542 = SQRTSSm
  { 2543,	6,	1,	407,	0,	0|(1<<MCID::MayLoad), 0xa2000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #2543 = SQRTSSm_Int
  { 2544,	2,	1,	409,	0,	0, 0xa2000c05ULL, NULL, NULL, OperandInfo124 },  // Inst #2544 = SQRTSSr
  { 2545,	2,	1,	410,	0,	0, 0xa2000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #2545 = SQRTSSr_Int
  { 2546,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f4000401ULL, NULL, ImplicitList1, 0 },  // Inst #2546 = SQRT_F
  { 2547,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #2547 = SQRT_Fp32
  { 2548,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #2548 = SQRT_Fp64
  { 2549,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #2549 = SQRT_Fp80
  { 2550,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6c000001ULL, NULL, NULL, 0 },  // Inst #2550 = SS_PREFIX
  { 2551,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000128ULL, ImplicitList3, ImplicitList3, 0 },  // Inst #2551 = STAC
  { 2552,	0,	0,	438,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f2000001ULL, NULL, NULL, 0 },  // Inst #2552 = STC
  { 2553,	0,	0,	439,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fa000001ULL, NULL, NULL, 0 },  // Inst #2553 = STD
  { 2554,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000138ULL, NULL, NULL, 0 },  // Inst #2554 = STGI
  { 2555,	0,	0,	440,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f6000001ULL, NULL, NULL, 0 },  // Inst #2555 = STI
  { 2556,	5,	0,	441,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c80011bULL, NULL, NULL, OperandInfo40 },  // Inst #2556 = STMXCSR
  { 2557,	0,	0,	442,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x154000001ULL, ImplicitList71, ImplicitList41, 0 },  // Inst #2557 = STOSB
  { 2558,	0,	0,	442,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000001ULL, ImplicitList72, ImplicitList41, 0 },  // Inst #2558 = STOSD
  { 2559,	0,	0,	442,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156002001ULL, ImplicitList73, ImplicitList64, 0 },  // Inst #2559 = STOSQ
  { 2560,	0,	0,	442,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000041ULL, ImplicitList74, ImplicitList41, 0 },  // Inst #2560 = STOSW
  { 2561,	1,	1,	443,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x151ULL, NULL, NULL, OperandInfo112 },  // Inst #2561 = STR16r
  { 2562,	1,	1,	443,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x111ULL, NULL, NULL, OperandInfo71 },  // Inst #2562 = STR32r
  { 2563,	1,	1,	443,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2111ULL, NULL, NULL, OperandInfo73 },  // Inst #2563 = STR64r
  { 2564,	5,	1,	443,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x119ULL, NULL, NULL, OperandInfo40 },  // Inst #2564 = STRm
  { 2565,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001aULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2565 = ST_F32m
  { 2566,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba00001aULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2566 = ST_F64m
  { 2567,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001bULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2567 = ST_FP32m
  { 2568,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba00001bULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2568 = ST_FP64m
  { 2569,	5,	0,	444,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2569 = ST_FP80m
  { 2570,	1,	0,	445,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000802ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #2570 = ST_FPrr
  { 2571,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #2571 = ST_Fp32m
  { 2572,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #2572 = ST_Fp64m
  { 2573,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #2573 = ST_Fp64m32
  { 2574,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2574 = ST_Fp80m32
  { 2575,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2575 = ST_Fp80m64
  { 2576,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #2576 = ST_FpP32m
  { 2577,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #2577 = ST_FpP64m
  { 2578,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #2578 = ST_FpP64m32
  { 2579,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2579 = ST_FpP80m
  { 2580,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2580 = ST_FpP80m32
  { 2581,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2581 = ST_FpP80m64
  { 2582,	1,	0,	445,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000802ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #2582 = ST_Frr
  { 2583,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x5a00c041ULL, ImplicitList7, ImplicitList2, OperandInfo2 },  // Inst #2583 = SUB16i16
  { 2584,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2584 = SUB16mi
  { 2585,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2585 = SUB16mi8
  { 2586,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52000044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #2586 = SUB16mr
  { 2587,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x10200c055ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2587 = SUB16ri
  { 2588,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x106004055ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #2588 = SUB16ri8
  { 2589,	7,	1,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x56000046ULL, NULL, ImplicitList3, OperandInfo18 },  // Inst #2589 = SUB16rm
  { 2590,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x52000043ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #2590 = SUB16rr
  { 2591,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x56000045ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #2591 = SUB16rr_REV
  { 2592,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x5a014001ULL, ImplicitList8, ImplicitList4, OperandInfo2 },  // Inst #2592 = SUB32i32
  { 2593,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2593 = SUB32mi
  { 2594,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2594 = SUB32mi8
  { 2595,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52000004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #2595 = SUB32mr
  { 2596,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x102014015ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2596 = SUB32ri
  { 2597,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x106004015ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #2597 = SUB32ri8
  { 2598,	7,	1,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x56000006ULL, NULL, ImplicitList3, OperandInfo22 },  // Inst #2598 = SUB32rm
  { 2599,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x52000003ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #2599 = SUB32rr
  { 2600,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x56000005ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #2600 = SUB32rr_REV
  { 2601,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x5a016001ULL, ImplicitList9, ImplicitList5, OperandInfo2 },  // Inst #2601 = SUB64i32
  { 2602,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2602 = SUB64mi32
  { 2603,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2603 = SUB64mi8
  { 2604,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52002004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #2604 = SUB64mr
  { 2605,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x102016015ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2605 = SUB64ri32
  { 2606,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x106006015ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #2606 = SUB64ri8
  { 2607,	7,	1,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x56002006ULL, NULL, ImplicitList3, OperandInfo26 },  // Inst #2607 = SUB64rm
  { 2608,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x52002003ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #2608 = SUB64rr
  { 2609,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x56002005ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #2609 = SUB64rr_REV
  { 2610,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x58004001ULL, ImplicitList10, ImplicitList6, OperandInfo2 },  // Inst #2610 = SUB8i8
  { 2611,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401dULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2611 = SUB8mi
  { 2612,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x50000004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #2612 = SUB8mr
  { 2613,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x100004015ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #2613 = SUB8ri
  { 2614,	7,	1,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x54000006ULL, NULL, ImplicitList3, OperandInfo30 },  // Inst #2614 = SUB8rm
  { 2615,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x50000003ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #2615 = SUB8rr
  { 2616,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x54000005ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #2616 = SUB8rr_REV
  { 2617,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xb9000146ULL, NULL, NULL, OperandInfo34 },  // Inst #2617 = SUBPDrm
  { 2618,	3,	1,	11,	0,	0, 0xb9000145ULL, NULL, NULL, OperandInfo35 },  // Inst #2618 = SUBPDrr
  { 2619,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xb8800106ULL, NULL, NULL, OperandInfo34 },  // Inst #2619 = SUBPSrm
  { 2620,	3,	1,	13,	0,	0, 0xb8800105ULL, NULL, NULL, OperandInfo35 },  // Inst #2620 = SUBPSrr
  { 2621,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2621 = SUBR_F32m
  { 2622,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2622 = SUBR_F64m
  { 2623,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2623 = SUBR_FI16m
  { 2624,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2624 = SUBR_FI32m
  { 2625,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000902ULL, NULL, NULL, OperandInfo41 },  // Inst #2625 = SUBR_FPrST0
  { 2626,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #2626 = SUBR_FST0r
  { 2627,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2627 = SUBR_Fp32m
  { 2628,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2628 = SUBR_Fp64m
  { 2629,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2629 = SUBR_Fp64m32
  { 2630,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2630 = SUBR_Fp80m32
  { 2631,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2631 = SUBR_Fp80m64
  { 2632,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2632 = SUBR_FpI16m32
  { 2633,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2633 = SUBR_FpI16m64
  { 2634,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2634 = SUBR_FpI16m80
  { 2635,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2635 = SUBR_FpI32m32
  { 2636,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2636 = SUBR_FpI32m64
  { 2637,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2637 = SUBR_FpI32m80
  { 2638,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000702ULL, NULL, NULL, OperandInfo41 },  // Inst #2638 = SUBR_FrST0
  { 2639,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xb8000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #2639 = SUBSDrm
  { 2640,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xb8000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #2640 = SUBSDrm_Int
  { 2641,	3,	1,	15,	0,	0, 0xb8000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #2641 = SUBSDrr
  { 2642,	3,	1,	15,	0,	0, 0xb8000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #2642 = SUBSDrr_Int
  { 2643,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb8000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #2643 = SUBSSrm
  { 2644,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb8000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #2644 = SUBSSrm_Int
  { 2645,	3,	1,	17,	0,	0, 0xb8000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #2645 = SUBSSrr
  { 2646,	3,	1,	17,	0,	0, 0xb8000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #2646 = SUBSSrr_Int
  { 2647,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001cULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2647 = SUB_F32m
  { 2648,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001cULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2648 = SUB_F64m
  { 2649,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001cULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2649 = SUB_FI16m
  { 2650,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001cULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2650 = SUB_FI32m
  { 2651,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000902ULL, NULL, NULL, OperandInfo41 },  // Inst #2651 = SUB_FPrST0
  { 2652,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #2652 = SUB_FST0r
  { 2653,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #2653 = SUB_Fp32
  { 2654,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2654 = SUB_Fp32m
  { 2655,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #2655 = SUB_Fp64
  { 2656,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2656 = SUB_Fp64m
  { 2657,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2657 = SUB_Fp64m32
  { 2658,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #2658 = SUB_Fp80
  { 2659,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2659 = SUB_Fp80m32
  { 2660,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2660 = SUB_Fp80m64
  { 2661,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2661 = SUB_FpI16m32
  { 2662,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2662 = SUB_FpI16m64
  { 2663,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2663 = SUB_FpI16m80
  { 2664,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2664 = SUB_FpI32m32
  { 2665,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2665 = SUB_FpI32m64
  { 2666,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2666 = SUB_FpI32m80
  { 2667,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000702ULL, NULL, NULL, OperandInfo41 },  // Inst #2667 = SUB_FrST0
  { 2668,	0,	0,	446,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012dULL, NULL, NULL, 0 },  // Inst #2668 = SWAPGS
  { 2669,	0,	0,	447,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa000101ULL, NULL, NULL, 0 },  // Inst #2669 = SYSCALL
  { 2670,	0,	0,	448,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x68000101ULL, NULL, NULL, 0 },  // Inst #2670 = SYSENTER
  { 2671,	0,	0,	448,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a000101ULL, NULL, NULL, 0 },  // Inst #2671 = SYSEXIT
  { 2672,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a002101ULL, NULL, NULL, 0 },  // Inst #2672 = SYSEXIT64
  { 2673,	0,	0,	447,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000101ULL, NULL, NULL, 0 },  // Inst #2673 = SYSRET
  { 2674,	0,	0,	447,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe002101ULL, NULL, NULL, 0 },  // Inst #2674 = SYSRET64
  { 2675,	1,	0,	449,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d2018001ULL, ImplicitList11, NULL, OperandInfo72 },  // Inst #2675 = TAILJMPd
  { 2676,	1,	0,	187,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x1d2018001ULL, ImplicitList13, NULL, OperandInfo72 },  // Inst #2676 = TAILJMPd64
  { 2677,	5,	0,	185,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001cULL, ImplicitList11, NULL, OperandInfo224 },  // Inst #2677 = TAILJMPm
  { 2678,	5,	0,	450,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001cULL, ImplicitList13, NULL, OperandInfo224 },  // Inst #2678 = TAILJMPm64
  { 2679,	1,	0,	451,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe000014ULL, ImplicitList11, NULL, OperandInfo225 },  // Inst #2679 = TAILJMPr
  { 2680,	1,	0,	450,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x1fe000014ULL, ImplicitList13, NULL, OperandInfo225 },  // Inst #2680 = TAILJMPr64
  { 2681,	2,	0,	452,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, ImplicitList11, NULL, OperandInfo226 },  // Inst #2681 = TCRETURNdi
  { 2682,	2,	0,	453,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, NULL, OperandInfo226 },  // Inst #2682 = TCRETURNdi64
  { 2683,	6,	0,	452,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x0ULL, ImplicitList11, NULL, OperandInfo227 },  // Inst #2683 = TCRETURNmi
  { 2684,	6,	0,	453,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, NULL, OperandInfo227 },  // Inst #2684 = TCRETURNmi64
  { 2685,	2,	0,	452,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, ImplicitList11, NULL, OperandInfo228 },  // Inst #2685 = TCRETURNri
  { 2686,	2,	0,	453,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, NULL, OperandInfo228 },  // Inst #2686 = TCRETURNri64
  { 2687,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x15200c041ULL, ImplicitList7, ImplicitList2, OperandInfo2 },  // Inst #2687 = TEST16i16
  { 2688,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x1ee00c058ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2688 = TEST16mi
  { 2689,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x1ee00c050ULL, NULL, ImplicitList3, OperandInfo68 },  // Inst #2689 = TEST16ri
  { 2690,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10a000046ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #2690 = TEST16rm
  { 2691,	2,	0,	5,	0,	0|(1<<MCID::Compare)|(1<<MCID::Commutable), 0x10a000045ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #2691 = TEST16rr
  { 2692,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x152014001ULL, ImplicitList8, ImplicitList4, OperandInfo2 },  // Inst #2692 = TEST32i32
  { 2693,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x1ee014018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2693 = TEST32mi
  { 2694,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x1ee014010ULL, NULL, ImplicitList3, OperandInfo69 },  // Inst #2694 = TEST32ri
  { 2695,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10a000006ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #2695 = TEST32rm
  { 2696,	2,	0,	5,	0,	0|(1<<MCID::Compare)|(1<<MCID::Commutable), 0x10a000005ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #2696 = TEST32rr
  { 2697,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x152016001ULL, ImplicitList9, ImplicitList5, OperandInfo2 },  // Inst #2697 = TEST64i32
  { 2698,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x1ee016018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2698 = TEST64mi32
  { 2699,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x1ee016010ULL, NULL, ImplicitList3, OperandInfo70 },  // Inst #2699 = TEST64ri32
  { 2700,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10a002006ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #2700 = TEST64rm
  { 2701,	2,	0,	5,	0,	0|(1<<MCID::Compare)|(1<<MCID::Commutable), 0x10a002005ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #2701 = TEST64rr
  { 2702,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x150004001ULL, ImplicitList10, ImplicitList6, OperandInfo2 },  // Inst #2702 = TEST8i8
  { 2703,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x1ec004018ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #2703 = TEST8mi
  { 2704,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x1ec004010ULL, NULL, ImplicitList3, OperandInfo87 },  // Inst #2704 = TEST8ri
  { 2705,	2,	0,	5,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Compare)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList3, OperandInfo229 },  // Inst #2705 = TEST8ri_NOREX
  { 2706,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x108000006ULL, NULL, ImplicitList3, OperandInfo14 },  // Inst #2706 = TEST8rm
  { 2707,	2,	0,	5,	0,	0|(1<<MCID::Compare)|(1<<MCID::Commutable), 0x108000005ULL, NULL, ImplicitList3, OperandInfo88 },  // Inst #2707 = TEST8rr
  { 2708,	5,	0,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList11, ImplicitList75, OperandInfo40 },  // Inst #2708 = TLSCall_32
  { 2709,	5,	0,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList76, ImplicitList5, OperandInfo40 },  // Inst #2709 = TLSCall_64
  { 2710,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList11, ImplicitList77, OperandInfo40 },  // Inst #2710 = TLS_addr32
  { 2711,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList13, ImplicitList78, OperandInfo40 },  // Inst #2711 = TLS_addr64
  { 2712,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList11, ImplicitList77, OperandInfo40 },  // Inst #2712 = TLS_base_addr32
  { 2713,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList13, ImplicitList78, OperandInfo40 },  // Inst #2713 = TLS_base_addr64
  { 2714,	0,	0,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x16000101ULL, NULL, NULL, 0 },  // Inst #2714 = TRAP
  { 2715,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c8000401ULL, NULL, ImplicitList1, 0 },  // Inst #2715 = TST_F
  { 2716,	1,	0,	0,	0,	0, 0x40000ULL, NULL, ImplicitList1, OperandInfo153 },  // Inst #2716 = TST_Fp32
  { 2717,	1,	0,	0,	0,	0, 0x40000ULL, NULL, ImplicitList1, OperandInfo154 },  // Inst #2717 = TST_Fp64
  { 2718,	1,	0,	0,	0,	0, 0x40000ULL, NULL, ImplicitList1, OperandInfo120 },  // Inst #2718 = TST_Fp80
  { 2719,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x178000c46ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #2719 = TZCNT16rm
  { 2720,	2,	1,	0,	0,	0, 0x178000c45ULL, NULL, ImplicitList3, OperandInfo57 },  // Inst #2720 = TZCNT16rr
  { 2721,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x178000c06ULL, NULL, ImplicitList3, OperandInfo12 },  // Inst #2721 = TZCNT32rm
  { 2722,	2,	1,	0,	0,	0, 0x178000c05ULL, NULL, ImplicitList3, OperandInfo32 },  // Inst #2722 = TZCNT32rr
  { 2723,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x178002c06ULL, NULL, ImplicitList3, OperandInfo13 },  // Inst #2723 = TZCNT64rm
  { 2724,	2,	1,	0,	0,	0, 0x178002c05ULL, NULL, ImplicitList3, OperandInfo33 },  // Inst #2724 = TZCNT64rr
  { 2725,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5c000146ULL, NULL, ImplicitList3, OperandInfo100 },  // Inst #2725 = UCOMISDrm
  { 2726,	2,	0,	63,	0,	0, 0x5c000145ULL, NULL, ImplicitList3, OperandInfo123 },  // Inst #2726 = UCOMISDrr
  { 2727,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5c000106ULL, NULL, ImplicitList3, OperandInfo98 },  // Inst #2727 = UCOMISSrm
  { 2728,	2,	0,	63,	0,	0, 0x5c000105ULL, NULL, ImplicitList3, OperandInfo124 },  // Inst #2728 = UCOMISSrr
  { 2729,	1,	0,	454,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000a02ULL, ImplicitList79, ImplicitList26, OperandInfo41 },  // Inst #2729 = UCOM_FIPr
  { 2730,	1,	0,	454,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000602ULL, ImplicitList79, ImplicitList26, OperandInfo41 },  // Inst #2730 = UCOM_FIr
  { 2731,	0,	0,	455,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d2000501ULL, ImplicitList79, ImplicitList1, 0 },  // Inst #2731 = UCOM_FPPr
  { 2732,	1,	0,	455,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000802ULL, ImplicitList79, ImplicitList1, OperandInfo41 },  // Inst #2732 = UCOM_FPr
  { 2733,	2,	0,	456,	0,	0, 0xa0000ULL, NULL, ImplicitList26, OperandInfo8 },  // Inst #2733 = UCOM_FpIr32
  { 2734,	2,	0,	456,	0,	0, 0xa0000ULL, NULL, ImplicitList26, OperandInfo9 },  // Inst #2734 = UCOM_FpIr64
  { 2735,	2,	0,	456,	0,	0, 0xa0000ULL, NULL, ImplicitList26, OperandInfo10 },  // Inst #2735 = UCOM_FpIr80
  { 2736,	2,	0,	456,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #2736 = UCOM_Fpr32
  { 2737,	2,	0,	456,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #2737 = UCOM_Fpr64
  { 2738,	2,	0,	456,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #2738 = UCOM_Fpr80
  { 2739,	1,	0,	455,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000802ULL, ImplicitList79, ImplicitList1, OperandInfo41 },  // Inst #2739 = UCOM_Fr
  { 2740,	0,	0,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x172000101ULL, NULL, NULL, 0 },  // Inst #2740 = UD2B
  { 2741,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0x2b000146ULL, NULL, NULL, OperandInfo34 },  // Inst #2741 = UNPCKHPDrm
  { 2742,	3,	1,	380,	0,	0, 0x2b000145ULL, NULL, NULL, OperandInfo35 },  // Inst #2742 = UNPCKHPDrr
  { 2743,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0x2a800106ULL, NULL, NULL, OperandInfo34 },  // Inst #2743 = UNPCKHPSrm
  { 2744,	3,	1,	380,	0,	0, 0x2a800105ULL, NULL, NULL, OperandInfo35 },  // Inst #2744 = UNPCKHPSrr
  { 2745,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0x29000146ULL, NULL, NULL, OperandInfo34 },  // Inst #2745 = UNPCKLPDrm
  { 2746,	3,	1,	380,	0,	0, 0x29000145ULL, NULL, NULL, OperandInfo35 },  // Inst #2746 = UNPCKLPDrr
  { 2747,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0x28800106ULL, NULL, NULL, OperandInfo34 },  // Inst #2747 = UNPCKLPSrm
  { 2748,	3,	1,	380,	0,	0, 0x28800105ULL, NULL, NULL, OperandInfo35 },  // Inst #2748 = UNPCKLPSrr
  { 2749,	9,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo230 },  // Inst #2749 = VAARG_64
  { 2750,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4ab1000146ULL, NULL, NULL, OperandInfo231 },  // Inst #2750 = VADDPDYrm
  { 2751,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x4ab1000145ULL, NULL, NULL, OperandInfo232 },  // Inst #2751 = VADDPDYrr
  { 2752,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xab1000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2752 = VADDPDrm
  { 2753,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xab1000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2753 = VADDPDrr
  { 2754,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4ab0800106ULL, NULL, NULL, OperandInfo231 },  // Inst #2754 = VADDPSYrm
  { 2755,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0x4ab0800105ULL, NULL, NULL, OperandInfo232 },  // Inst #2755 = VADDPSYrr
  { 2756,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xab0800106ULL, NULL, NULL, OperandInfo138 },  // Inst #2756 = VADDPSrm
  { 2757,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xab0800105ULL, NULL, NULL, OperandInfo139 },  // Inst #2757 = VADDPSrr
  { 2758,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8ab0000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #2758 = VADDSDrm
  { 2759,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8ab0000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #2759 = VADDSDrm_Int
  { 2760,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0x8ab0000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #2760 = VADDSDrr
  { 2761,	3,	1,	15,	0,	0, 0x8ab0000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #2761 = VADDSDrr_Int
  { 2762,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8ab0000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #2762 = VADDSSrm
  { 2763,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8ab0000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #2763 = VADDSSrm_Int
  { 2764,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0x8ab0000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #2764 = VADDSSrr
  { 2765,	3,	1,	17,	0,	0, 0x8ab0000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #2765 = VADDSSrr_Int
  { 2766,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x4ba1000146ULL, NULL, NULL, OperandInfo231 },  // Inst #2766 = VADDSUBPDYrm
  { 2767,	3,	1,	11,	0,	0, 0x4ba1000145ULL, NULL, NULL, OperandInfo232 },  // Inst #2767 = VADDSUBPDYrr
  { 2768,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xba1000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2768 = VADDSUBPDrm
  { 2769,	3,	1,	11,	0,	0, 0xba1000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2769 = VADDSUBPDrr
  { 2770,	7,	1,	19,	0,	0|(1<<MCID::MayLoad), 0x4ba0800b06ULL, NULL, NULL, OperandInfo231 },  // Inst #2770 = VADDSUBPSYrm
  { 2771,	3,	1,	13,	0,	0, 0x4ba0800b05ULL, NULL, NULL, OperandInfo232 },  // Inst #2771 = VADDSUBPSYrr
  { 2772,	7,	1,	19,	0,	0|(1<<MCID::MayLoad), 0xba0800b06ULL, NULL, NULL, OperandInfo138 },  // Inst #2772 = VADDSUBPSrm
  { 2773,	3,	1,	13,	0,	0, 0xba0800b05ULL, NULL, NULL, OperandInfo139 },  // Inst #2773 = VADDSUBPSrr
  { 2774,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbbf800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #2774 = VAESDECLASTrm
  { 2775,	3,	1,	0,	0,	0, 0xbbf800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #2775 = VAESDECLASTrr
  { 2776,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbbd800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #2776 = VAESDECrm
  { 2777,	3,	1,	0,	0,	0, 0xbbd800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #2777 = VAESDECrr
  { 2778,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbbb800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #2778 = VAESENCLASTrm
  { 2779,	3,	1,	0,	0,	0, 0xbbb800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #2779 = VAESENCLASTrr
  { 2780,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbb9800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #2780 = VAESENCrm
  { 2781,	3,	1,	0,	0,	0, 0xbb9800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #2781 = VAESENCrr
  { 2782,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x3b7800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2782 = VAESIMCrm
  { 2783,	2,	1,	0,	0,	0, 0x3b7800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2783 = VAESIMCrr
  { 2784,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x3bf804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #2784 = VAESKEYGENASSIST128rm
  { 2785,	3,	1,	0,	0,	0, 0x3bf804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #2785 = VAESKEYGENASSIST128rr
  { 2786,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aab000146ULL, NULL, NULL, OperandInfo231 },  // Inst #2786 = VANDNPDYrm
  { 2787,	3,	1,	22,	0,	0, 0x4aab000145ULL, NULL, NULL, OperandInfo232 },  // Inst #2787 = VANDNPDYrr
  { 2788,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaab000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2788 = VANDNPDrm
  { 2789,	3,	1,	22,	0,	0, 0xaab000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2789 = VANDNPDrr
  { 2790,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aaa800106ULL, NULL, NULL, OperandInfo231 },  // Inst #2790 = VANDNPSYrm
  { 2791,	3,	1,	22,	0,	0, 0x4aaa800105ULL, NULL, NULL, OperandInfo232 },  // Inst #2791 = VANDNPSYrr
  { 2792,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaaa800106ULL, NULL, NULL, OperandInfo138 },  // Inst #2792 = VANDNPSrm
  { 2793,	3,	1,	22,	0,	0, 0xaaa800105ULL, NULL, NULL, OperandInfo139 },  // Inst #2793 = VANDNPSrr
  { 2794,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aa9000146ULL, NULL, NULL, OperandInfo231 },  // Inst #2794 = VANDPDYrm
  { 2795,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aa9000145ULL, NULL, NULL, OperandInfo232 },  // Inst #2795 = VANDPDYrr
  { 2796,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaa9000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2796 = VANDPDrm
  { 2797,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaa9000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2797 = VANDPDrr
  { 2798,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aa8800106ULL, NULL, NULL, OperandInfo231 },  // Inst #2798 = VANDPSYrm
  { 2799,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aa8800105ULL, NULL, NULL, OperandInfo232 },  // Inst #2799 = VANDPSYrr
  { 2800,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaa8800106ULL, NULL, NULL, OperandInfo138 },  // Inst #2800 = VANDPSrm
  { 2801,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaa8800105ULL, NULL, NULL, OperandInfo139 },  // Inst #2801 = VANDPSrr
  { 2802,	3,	0,	0,	0,	0|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, OperandInfo237 },  // Inst #2802 = VASTART_SAVE_XMM_REGS
  { 2803,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6b0ecb000d46ULL, NULL, NULL, OperandInfo238 },  // Inst #2803 = VBLENDMPDZrm
  { 2804,	4,	1,	0,	0,	0, 0x6b0ecb000d45ULL, NULL, NULL, OperandInfo239 },  // Inst #2804 = VBLENDMPDZrr
  { 2805,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4b0aca800d46ULL, NULL, NULL, OperandInfo240 },  // Inst #2805 = VBLENDMPSZrm
  { 2806,	4,	1,	0,	0,	0, 0x4b0aca800d45ULL, NULL, NULL, OperandInfo241 },  // Inst #2806 = VBLENDMPSZrr
  { 2807,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a1b004e46ULL, NULL, NULL, OperandInfo242 },  // Inst #2807 = VBLENDPDYrmi
  { 2808,	4,	1,	0,	0,	0, 0x4a1b004e45ULL, NULL, NULL, OperandInfo86 },  // Inst #2808 = VBLENDPDYrri
  { 2809,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa1b004e46ULL, NULL, NULL, OperandInfo137 },  // Inst #2809 = VBLENDPDrmi
  { 2810,	4,	1,	0,	0,	0, 0xa1b004e45ULL, NULL, NULL, OperandInfo85 },  // Inst #2810 = VBLENDPDrri
  { 2811,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a18804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #2811 = VBLENDPSYrmi
  { 2812,	4,	1,	0,	0,	0, 0x4a18804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #2812 = VBLENDPSYrri
  { 2813,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa18804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #2813 = VBLENDPSrmi
  { 2814,	4,	1,	0,	0,	0, 0xa18804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #2814 = VBLENDPSrri
  { 2815,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a97004e46ULL, NULL, NULL, OperandInfo243 },  // Inst #2815 = VBLENDVPDYrm
  { 2816,	4,	1,	0,	0,	0, 0x6a97004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #2816 = VBLENDVPDYrr
  { 2817,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a97004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #2817 = VBLENDVPDrm
  { 2818,	4,	1,	0,	0,	0, 0x2a97004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #2818 = VBLENDVPDrr
  { 2819,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a94804e46ULL, NULL, NULL, OperandInfo243 },  // Inst #2819 = VBLENDVPSYrm
  { 2820,	4,	1,	0,	0,	0, 0x6a94804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #2820 = VBLENDVPSYrr
  { 2821,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a94804e46ULL, NULL, NULL, OperandInfo245 },  // Inst #2821 = VBLENDVPSrm
  { 2822,	4,	1,	0,	0,	0, 0x2a94804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #2822 = VBLENDVPSrr
  { 2823,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4235800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #2823 = VBROADCASTF128
  { 2824,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b5800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #2824 = VBROADCASTI128
  { 2825,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4233000d46ULL, NULL, NULL, OperandInfo247 },  // Inst #2825 = VBROADCASTSDYrm
  { 2826,	2,	1,	0,	0,	0, 0x4233000d45ULL, NULL, NULL, OperandInfo248 },  // Inst #2826 = VBROADCASTSDYrr
  { 2827,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2690633000d46ULL, NULL, NULL, OperandInfo249 },  // Inst #2827 = VBROADCASTSDZrm
  { 2828,	2,	1,	0,	0,	0, 0x2690633000d45ULL, NULL, NULL, OperandInfo250 },  // Inst #2828 = VBROADCASTSDZrr
  { 2829,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4230800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #2829 = VBROADCASTSSYrm
  { 2830,	2,	1,	0,	0,	0, 0x4230800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #2830 = VBROADCASTSSYrr
  { 2831,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2490230800d46ULL, NULL, NULL, OperandInfo249 },  // Inst #2831 = VBROADCASTSSZrm
  { 2832,	2,	1,	0,	0,	0, 0x2490230800d45ULL, NULL, NULL, OperandInfo250 },  // Inst #2832 = VBROADCASTSSZrr
  { 2833,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x230800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2833 = VBROADCASTSSrm
  { 2834,	2,	1,	0,	0,	0, 0x230800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2834 = VBROADCASTSSrr
  { 2835,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0x4b85004146ULL, NULL, NULL, OperandInfo242 },  // Inst #2835 = VCMPPDYrmi
  { 2836,	8,	1,	53,	0,	0, 0x4b85004146ULL, NULL, NULL, OperandInfo242 },  // Inst #2836 = VCMPPDYrmi_alt
  { 2837,	4,	1,	54,	0,	0, 0x4b85004145ULL, NULL, NULL, OperandInfo86 },  // Inst #2837 = VCMPPDYrri
  { 2838,	4,	1,	54,	0,	0, 0x4b85004145ULL, NULL, NULL, OperandInfo86 },  // Inst #2838 = VCMPPDYrri_alt
  { 2839,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x690f85004146ULL, NULL, NULL, OperandInfo251 },  // Inst #2839 = VCMPPDZrmi
  { 2840,	8,	1,	457,	0,	0, 0x690f85004146ULL, NULL, NULL, OperandInfo252 },  // Inst #2840 = VCMPPDZrmi_alt
  { 2841,	4,	1,	0,	0,	0, 0x690f85004145ULL, NULL, NULL, OperandInfo253 },  // Inst #2841 = VCMPPDZrri
  { 2842,	4,	1,	458,	0,	0, 0x690f85004145ULL, NULL, NULL, OperandInfo254 },  // Inst #2842 = VCMPPDZrri_alt
  { 2843,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0xb85004146ULL, NULL, NULL, OperandInfo137 },  // Inst #2843 = VCMPPDrmi
  { 2844,	8,	1,	53,	0,	0, 0xb85004146ULL, NULL, NULL, OperandInfo137 },  // Inst #2844 = VCMPPDrmi_alt
  { 2845,	4,	1,	54,	0,	0, 0xb85004145ULL, NULL, NULL, OperandInfo85 },  // Inst #2845 = VCMPPDrri
  { 2846,	4,	1,	54,	0,	0, 0xb85004145ULL, NULL, NULL, OperandInfo85 },  // Inst #2846 = VCMPPDrri_alt
  { 2847,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0x4b84804106ULL, NULL, NULL, OperandInfo242 },  // Inst #2847 = VCMPPSYrmi
  { 2848,	8,	1,	53,	0,	0, 0x4b84804106ULL, NULL, NULL, OperandInfo242 },  // Inst #2848 = VCMPPSYrmi_alt
  { 2849,	4,	1,	54,	0,	0, 0x4b84804105ULL, NULL, NULL, OperandInfo86 },  // Inst #2849 = VCMPPSYrri
  { 2850,	4,	1,	54,	0,	0, 0x4b84804105ULL, NULL, NULL, OperandInfo86 },  // Inst #2850 = VCMPPSYrri_alt
  { 2851,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x490b84804106ULL, NULL, NULL, OperandInfo255 },  // Inst #2851 = VCMPPSZrmi
  { 2852,	8,	1,	457,	0,	0, 0x490b84804106ULL, NULL, NULL, OperandInfo252 },  // Inst #2852 = VCMPPSZrmi_alt
  { 2853,	4,	1,	0,	0,	0, 0x490b84804105ULL, NULL, NULL, OperandInfo256 },  // Inst #2853 = VCMPPSZrri
  { 2854,	4,	1,	458,	0,	0, 0x490b84804105ULL, NULL, NULL, OperandInfo254 },  // Inst #2854 = VCMPPSZrri_alt
  { 2855,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0xb84804106ULL, NULL, NULL, OperandInfo137 },  // Inst #2855 = VCMPPSrmi
  { 2856,	8,	1,	53,	0,	0, 0xb84804106ULL, NULL, NULL, OperandInfo137 },  // Inst #2856 = VCMPPSrmi_alt
  { 2857,	4,	1,	54,	0,	0, 0xb84804105ULL, NULL, NULL, OperandInfo85 },  // Inst #2857 = VCMPPSrri
  { 2858,	4,	1,	54,	0,	0, 0xb84804105ULL, NULL, NULL, OperandInfo85 },  // Inst #2858 = VCMPPSrri_alt
  { 2859,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8b84004b06ULL, NULL, NULL, OperandInfo257 },  // Inst #2859 = VCMPSDrm
  { 2860,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8b84004b06ULL, NULL, NULL, OperandInfo257 },  // Inst #2860 = VCMPSDrm_alt
  { 2861,	4,	1,	17,	0,	0, 0x8b84004b05ULL, NULL, NULL, OperandInfo78 },  // Inst #2861 = VCMPSDrr
  { 2862,	4,	1,	17,	0,	0, 0x8b84004b05ULL, NULL, NULL, OperandInfo78 },  // Inst #2862 = VCMPSDrr_alt
  { 2863,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8b84004c06ULL, NULL, NULL, OperandInfo258 },  // Inst #2863 = VCMPSSrm
  { 2864,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8b84004c06ULL, NULL, NULL, OperandInfo258 },  // Inst #2864 = VCMPSSrm_alt
  { 2865,	4,	1,	17,	0,	0, 0x8b84004c05ULL, NULL, NULL, OperandInfo77 },  // Inst #2865 = VCMPSSrr
  { 2866,	4,	1,	17,	0,	0, 0x8b84004c05ULL, NULL, NULL, OperandInfo77 },  // Inst #2866 = VCMPSSrr_alt
  { 2867,	6,	0,	62,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825e000146ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #2867 = VCOMISDrm
  { 2868,	2,	0,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825e000145ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #2868 = VCOMISDrr
  { 2869,	6,	0,	62,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825e000106ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #2869 = VCOMISSrm
  { 2870,	2,	0,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825e000105ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #2870 = VCOMISSrr
  { 2871,	6,	1,	459,	0,	0|(1<<MCID::MayLoad), 0x43cc000c06ULL, NULL, NULL, OperandInfo247 },  // Inst #2871 = VCVTDQ2PDYrm
  { 2872,	2,	1,	460,	0,	0, 0x43cc000c05ULL, NULL, NULL, OperandInfo248 },  // Inst #2872 = VCVTDQ2PDYrr
  { 2873,	6,	1,	459,	0,	0|(1<<MCID::MayLoad), 0x3cc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #2873 = VCVTDQ2PDrm
  { 2874,	2,	1,	460,	0,	0, 0x3cc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #2874 = VCVTDQ2PDrr
  { 2875,	6,	1,	68,	0,	0|(1<<MCID::MayLoad), 0x42b6800106ULL, NULL, NULL, OperandInfo247 },  // Inst #2875 = VCVTDQ2PSYrm
  { 2876,	2,	1,	69,	0,	0, 0x42b6800105ULL, NULL, NULL, OperandInfo259 },  // Inst #2876 = VCVTDQ2PSYrr
  { 2877,	6,	1,	68,	0,	0|(1<<MCID::MayLoad), 0x2b6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2877 = VCVTDQ2PSrm
  { 2878,	2,	1,	69,	0,	0, 0x2b6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2878 = VCVTDQ2PSrr
  { 2879,	6,	1,	461,	0,	0|(1<<MCID::MayLoad), 0x3cc000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #2879 = VCVTPD2DQXrm
  { 2880,	6,	1,	461,	0,	0|(1<<MCID::MayLoad), 0x43cc000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #2880 = VCVTPD2DQYrm
  { 2881,	2,	1,	462,	0,	0, 0x43cc000b05ULL, NULL, NULL, OperandInfo260 },  // Inst #2881 = VCVTPD2DQYrr
  { 2882,	2,	1,	462,	0,	0, 0x3cc000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #2882 = VCVTPD2DQrr
  { 2883,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0x2b5000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2883 = VCVTPD2PSXrm
  { 2884,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0x42b5000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2884 = VCVTPD2PSYrm
  { 2885,	2,	1,	73,	0,	0, 0x42b5000145ULL, NULL, NULL, OperandInfo260 },  // Inst #2885 = VCVTPD2PSYrr
  { 2886,	2,	1,	73,	0,	0, 0x2b5000145ULL, NULL, NULL, OperandInfo50 },  // Inst #2886 = VCVTPD2PSrr
  { 2887,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4226000d46ULL, NULL, NULL, OperandInfo247 },  // Inst #2887 = VCVTPH2PSYrm
  { 2888,	2,	1,	0,	0,	0, 0x4226000d45ULL, NULL, NULL, OperandInfo248 },  // Inst #2888 = VCVTPH2PSYrr
  { 2889,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x226000d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2889 = VCVTPH2PSrm
  { 2890,	2,	1,	0,	0,	0, 0x226000d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2890 = VCVTPH2PSrr
  { 2891,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0x42b7000146ULL, NULL, NULL, OperandInfo247 },  // Inst #2891 = VCVTPS2DQYrm
  { 2892,	2,	1,	75,	0,	0, 0x42b7000145ULL, NULL, NULL, OperandInfo259 },  // Inst #2892 = VCVTPS2DQYrr
  { 2893,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0x2b7000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2893 = VCVTPS2DQrm
  { 2894,	2,	1,	75,	0,	0, 0x2b7000145ULL, NULL, NULL, OperandInfo50 },  // Inst #2894 = VCVTPS2DQrr
  { 2895,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0x42b4000106ULL, NULL, NULL, OperandInfo247 },  // Inst #2895 = VCVTPS2PDYrm
  { 2896,	2,	1,	73,	0,	0, 0x42b4000105ULL, NULL, NULL, OperandInfo248 },  // Inst #2896 = VCVTPS2PDYrr
  { 2897,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0x2b4000106ULL, NULL, NULL, OperandInfo49 },  // Inst #2897 = VCVTPS2PDrm
  { 2898,	2,	1,	73,	0,	0, 0x2b4000105ULL, NULL, NULL, OperandInfo50 },  // Inst #2898 = VCVTPS2PDrr
  { 2899,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x423a004e44ULL, NULL, NULL, OperandInfo261 },  // Inst #2899 = VCVTPS2PHYmr
  { 2900,	3,	1,	0,	0,	0, 0x423a004e43ULL, NULL, NULL, OperandInfo262 },  // Inst #2900 = VCVTPS2PHYrr
  { 2901,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x23a004e44ULL, NULL, NULL, OperandInfo114 },  // Inst #2901 = VCVTPS2PHmr
  { 2902,	3,	1,	0,	0,	0, 0x23a004e43ULL, NULL, NULL, OperandInfo52 },  // Inst #2902 = VCVTPS2PHrr
  { 2903,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x865a000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #2903 = VCVTSD2SI64rm
  { 2904,	2,	1,	77,	0,	0, 0x865a000b05ULL, NULL, NULL, OperandInfo96 },  // Inst #2904 = VCVTSD2SI64rr
  { 2905,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x825a000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #2905 = VCVTSD2SIrm
  { 2906,	2,	1,	77,	0,	0, 0x825a000b05ULL, NULL, NULL, OperandInfo97 },  // Inst #2906 = VCVTSD2SIrr
  { 2907,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0x8ab4000b06ULL, NULL, NULL, OperandInfo263 },  // Inst #2907 = VCVTSD2SSrm
  { 2908,	3,	1,	79,	0,	0, 0x8ab4000b05ULL, NULL, NULL, OperandInfo264 },  // Inst #2908 = VCVTSD2SSrr
  { 2909,	7,	1,	463,	0,	0|(1<<MCID::MayLoad), 0x8e54000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #2909 = VCVTSI2SD64rm
  { 2910,	3,	1,	460,	0,	0, 0x8e54000b05ULL, NULL, NULL, OperandInfo265 },  // Inst #2910 = VCVTSI2SD64rr
  { 2911,	7,	1,	463,	0,	0|(1<<MCID::MayLoad), 0x8a54000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #2911 = VCVTSI2SDrm
  { 2912,	3,	1,	460,	0,	0, 0x8a54000b05ULL, NULL, NULL, OperandInfo266 },  // Inst #2912 = VCVTSI2SDrr
  { 2913,	7,	1,	463,	0,	0|(1<<MCID::MayLoad), 0x8e54000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #2913 = VCVTSI2SS64rm
  { 2914,	3,	1,	460,	0,	0, 0x8e54000c05ULL, NULL, NULL, OperandInfo267 },  // Inst #2914 = VCVTSI2SS64rr
  { 2915,	7,	1,	463,	0,	0|(1<<MCID::MayLoad), 0x8a54000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #2915 = VCVTSI2SSrm
  { 2916,	3,	1,	460,	0,	0, 0x8a54000c05ULL, NULL, NULL, OperandInfo268 },  // Inst #2916 = VCVTSI2SSrr
  { 2917,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0x8ab4000c06ULL, NULL, NULL, OperandInfo269 },  // Inst #2917 = VCVTSS2SDrm
  { 2918,	3,	1,	79,	0,	0, 0x8ab4000c05ULL, NULL, NULL, OperandInfo270 },  // Inst #2918 = VCVTSS2SDrr
  { 2919,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x865a000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #2919 = VCVTSS2SI64rm
  { 2920,	2,	1,	83,	0,	0, 0x865a000c05ULL, NULL, NULL, OperandInfo96 },  // Inst #2920 = VCVTSS2SI64rr
  { 2921,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x825a000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #2921 = VCVTSS2SIrm
  { 2922,	2,	1,	85,	0,	0, 0x825a000c05ULL, NULL, NULL, OperandInfo97 },  // Inst #2922 = VCVTSS2SIrr
  { 2923,	6,	1,	70,	0,	0|(1<<MCID::MayLoad), 0x3cd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2923 = VCVTTPD2DQXrm
  { 2924,	6,	1,	70,	0,	0|(1<<MCID::MayLoad), 0x43cd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2924 = VCVTTPD2DQYrm
  { 2925,	2,	1,	71,	0,	0, 0x43cd000145ULL, NULL, NULL, OperandInfo260 },  // Inst #2925 = VCVTTPD2DQYrr
  { 2926,	2,	1,	71,	0,	0, 0x3cd000145ULL, NULL, NULL, OperandInfo50 },  // Inst #2926 = VCVTTPD2DQrr
  { 2927,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0x42b6000c06ULL, NULL, NULL, OperandInfo247 },  // Inst #2927 = VCVTTPS2DQYrm
  { 2928,	2,	1,	75,	0,	0, 0x42b6000c05ULL, NULL, NULL, OperandInfo259 },  // Inst #2928 = VCVTTPS2DQYrr
  { 2929,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0x2b6000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #2929 = VCVTTPS2DQrm
  { 2930,	2,	1,	75,	0,	0, 0x2b6000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #2930 = VCVTTPS2DQrr
  { 2931,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x8658000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #2931 = VCVTTSD2SI64rm
  { 2932,	2,	1,	77,	0,	0, 0x8658000b05ULL, NULL, NULL, OperandInfo106 },  // Inst #2932 = VCVTTSD2SI64rr
  { 2933,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x8258000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #2933 = VCVTTSD2SIrm
  { 2934,	2,	1,	77,	0,	0, 0x8258000b05ULL, NULL, NULL, OperandInfo107 },  // Inst #2934 = VCVTTSD2SIrr
  { 2935,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x8658000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #2935 = VCVTTSS2SI64rm
  { 2936,	2,	1,	83,	0,	0, 0x8658000c05ULL, NULL, NULL, OperandInfo108 },  // Inst #2936 = VCVTTSS2SI64rr
  { 2937,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x8258000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #2937 = VCVTTSS2SIrm
  { 2938,	2,	1,	85,	0,	0, 0x8258000c05ULL, NULL, NULL, OperandInfo109 },  // Inst #2938 = VCVTTSS2SIrr
  { 2939,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0x4abd000146ULL, NULL, NULL, OperandInfo231 },  // Inst #2939 = VDIVPDYrm
  { 2940,	3,	1,	99,	0,	0, 0x4abd000145ULL, NULL, NULL, OperandInfo232 },  // Inst #2940 = VDIVPDYrr
  { 2941,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0xabd000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2941 = VDIVPDrm
  { 2942,	3,	1,	99,	0,	0, 0xabd000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2942 = VDIVPDrr
  { 2943,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0x4abc800106ULL, NULL, NULL, OperandInfo231 },  // Inst #2943 = VDIVPSYrm
  { 2944,	3,	1,	100,	0,	0, 0x4abc800105ULL, NULL, NULL, OperandInfo232 },  // Inst #2944 = VDIVPSYrr
  { 2945,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0xabc800106ULL, NULL, NULL, OperandInfo138 },  // Inst #2945 = VDIVPSrm
  { 2946,	3,	1,	100,	0,	0, 0xabc800105ULL, NULL, NULL, OperandInfo139 },  // Inst #2946 = VDIVPSrr
  { 2947,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x8abc000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #2947 = VDIVSDrm
  { 2948,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x8abc000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #2948 = VDIVSDrm_Int
  { 2949,	3,	1,	102,	0,	0, 0x8abc000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #2949 = VDIVSDrr
  { 2950,	3,	1,	102,	0,	0, 0x8abc000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #2950 = VDIVSDrr_Int
  { 2951,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x8abc000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #2951 = VDIVSSrm
  { 2952,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x8abc000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #2952 = VDIVSSrm_Int
  { 2953,	3,	1,	103,	0,	0, 0x8abc000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #2953 = VDIVSSrr
  { 2954,	3,	1,	103,	0,	0, 0x8abc000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #2954 = VDIVSSrr_Int
  { 2955,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa83004e46ULL, NULL, NULL, OperandInfo137 },  // Inst #2955 = VDPPDrmi
  { 2956,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa83004e45ULL, NULL, NULL, OperandInfo85 },  // Inst #2956 = VDPPDrri
  { 2957,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a80804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #2957 = VDPPSYrmi
  { 2958,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a80804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #2958 = VDPPSYrri
  { 2959,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa80804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #2959 = VDPPSrmi
  { 2960,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa80804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #2960 = VDPPSrri
  { 2961,	5,	0,	464,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11cULL, NULL, NULL, OperandInfo40 },  // Inst #2961 = VERRm
  { 2962,	1,	0,	464,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x114ULL, NULL, NULL, OperandInfo112 },  // Inst #2962 = VERRr
  { 2963,	5,	0,	465,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11dULL, NULL, NULL, OperandInfo40 },  // Inst #2963 = VERWm
  { 2964,	1,	0,	466,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x115ULL, NULL, NULL, OperandInfo112 },  // Inst #2964 = VERWr
  { 2965,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x4232804e44ULL, NULL, NULL, OperandInfo261 },  // Inst #2965 = VEXTRACTF128mr
  { 2966,	3,	1,	0,	0,	0, 0x4232804e43ULL, NULL, NULL, OperandInfo262 },  // Inst #2966 = VEXTRACTF128rr
  { 2967,	7,	0,	0,	0,	0, 0x3490232804e44ULL, NULL, NULL, OperandInfo271 },  // Inst #2967 = VEXTRACTF32x4mr
  { 2968,	3,	1,	0,	0,	0, 0x90232804e43ULL, NULL, NULL, OperandInfo272 },  // Inst #2968 = VEXTRACTF32x4rr
  { 2969,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x3690636804e44ULL, NULL, NULL, OperandInfo271 },  // Inst #2969 = VEXTRACTF64x4mr
  { 2970,	3,	1,	0,	0,	0, 0x90636804e43ULL, NULL, NULL, OperandInfo273 },  // Inst #2970 = VEXTRACTF64x4rr
  { 2971,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x4273804e44ULL, NULL, NULL, OperandInfo261 },  // Inst #2971 = VEXTRACTI128mr
  { 2972,	3,	1,	0,	0,	0, 0x4273804e43ULL, NULL, NULL, OperandInfo262 },  // Inst #2972 = VEXTRACTI128rr
  { 2973,	7,	0,	0,	0,	0, 0x3490273804e44ULL, NULL, NULL, OperandInfo271 },  // Inst #2973 = VEXTRACTI32x4mr
  { 2974,	3,	1,	0,	0,	0, 0x90273804e43ULL, NULL, NULL, OperandInfo272 },  // Inst #2974 = VEXTRACTI32x4rr
  { 2975,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x3690677804e44ULL, NULL, NULL, OperandInfo271 },  // Inst #2975 = VEXTRACTI64x4mr
  { 2976,	3,	1,	0,	0,	0, 0x90677804e43ULL, NULL, NULL, OperandInfo273 },  // Inst #2976 = VEXTRACTI64x4rr
  { 2977,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x22e804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #2977 = VEXTRACTPSmr
  { 2978,	3,	1,	0,	0,	0, 0x22e804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #2978 = VEXTRACTPSrr
  { 2979,	3,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x22e804e43ULL, NULL, NULL, OperandInfo214 },  // Inst #2979 = VEXTRACTPSrr64
  { 2980,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x1022f804e44ULL, NULL, NULL, OperandInfo274 },  // Inst #2980 = VEXTRACTPSzmr
  { 2981,	3,	1,	0,	0,	0, 0x1022f804e43ULL, NULL, NULL, OperandInfo275 },  // Inst #2981 = VEXTRACTPSzrr
  { 2982,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad3004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #2982 = VFMADDPD4mr
  { 2983,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6ad3004e46ULL, NULL, NULL, OperandInfo243 },  // Inst #2983 = VFMADDPD4mrY
  { 2984,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ed3004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #2984 = VFMADDPD4rm
  { 2985,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ed3004e46ULL, NULL, NULL, OperandInfo277 },  // Inst #2985 = VFMADDPD4rmY
  { 2986,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ed3004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #2986 = VFMADDPD4rr
  { 2987,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ed3004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #2987 = VFMADDPD4rrY
  { 2988,	4,	1,	0,	0,	0, 0x6ad3004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #2988 = VFMADDPD4rrY_REV
  { 2989,	4,	1,	0,	0,	0, 0x2ad3004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #2989 = VFMADDPD4rr_REV
  { 2990,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf31000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #2990 = VFMADDPDr132m
  { 2991,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f31000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #2991 = VFMADDPDr132mY
  { 2992,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf31000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #2992 = VFMADDPDr132r
  { 2993,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f31000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #2993 = VFMADDPDr132rY
  { 2994,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf51000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #2994 = VFMADDPDr213m
  { 2995,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f51000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #2995 = VFMADDPDr213mY
  { 2996,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf51000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #2996 = VFMADDPDr213r
  { 2997,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f51000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #2997 = VFMADDPDr213rY
  { 2998,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf71000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #2998 = VFMADDPDr231m
  { 2999,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f71000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #2999 = VFMADDPDr231mY
  { 3000,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf71000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3000 = VFMADDPDr231r
  { 3001,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f71000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3001 = VFMADDPDr231rY
  { 3002,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad0804e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3002 = VFMADDPS4mr
  { 3003,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6ad0804e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3003 = VFMADDPS4mrY
  { 3004,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ed0804e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3004 = VFMADDPS4rm
  { 3005,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ed0804e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3005 = VFMADDPS4rmY
  { 3006,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ed0804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3006 = VFMADDPS4rr
  { 3007,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ed0804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3007 = VFMADDPS4rrY
  { 3008,	4,	1,	0,	0,	0, 0x6ad0804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3008 = VFMADDPS4rrY_REV
  { 3009,	4,	1,	0,	0,	0, 0x2ad0804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3009 = VFMADDPS4rr_REV
  { 3010,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb30800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3010 = VFMADDPSr132m
  { 3011,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b30800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3011 = VFMADDPSr132mY
  { 3012,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb30800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3012 = VFMADDPSr132r
  { 3013,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b30800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3013 = VFMADDPSr132rY
  { 3014,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb50800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3014 = VFMADDPSr213m
  { 3015,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b50800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3015 = VFMADDPSr213mY
  { 3016,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb50800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3016 = VFMADDPSr213r
  { 3017,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b50800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3017 = VFMADDPSr213rY
  { 3018,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb70800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3018 = VFMADDPSr231m
  { 3019,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b70800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3019 = VFMADDPSr231mY
  { 3020,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb70800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3020 = VFMADDPSr231r
  { 3021,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b70800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3021 = VFMADDPSr231rY
  { 3022,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad6004e46ULL, NULL, NULL, OperandInfo282 },  // Inst #3022 = VFMADDSD4mr
  { 3023,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad6004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3023 = VFMADDSD4mr_Int
  { 3024,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ed6004e46ULL, NULL, NULL, OperandInfo283 },  // Inst #3024 = VFMADDSD4rm
  { 3025,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ed6004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3025 = VFMADDSD4rm_Int
  { 3026,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ed6004e45ULL, NULL, NULL, OperandInfo284 },  // Inst #3026 = VFMADDSD4rr
  { 3027,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ed6004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3027 = VFMADDSD4rr_Int
  { 3028,	4,	1,	0,	0,	0, 0x2ad6004e45ULL, NULL, NULL, OperandInfo284 },  // Inst #3028 = VFMADDSD4rr_REV
  { 3029,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f32000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3029 = VFMADDSDr132m
  { 3030,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f32000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3030 = VFMADDSDr132r
  { 3031,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f52000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3031 = VFMADDSDr213m
  { 3032,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f52000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3032 = VFMADDSDr213m_Int
  { 3033,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f52000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3033 = VFMADDSDr213r
  { 3034,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f52000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3034 = VFMADDSDr213r_Int
  { 3035,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f72000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3035 = VFMADDSDr231m
  { 3036,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f72000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3036 = VFMADDSDr231r
  { 3037,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad4004e46ULL, NULL, NULL, OperandInfo287 },  // Inst #3037 = VFMADDSS4mr
  { 3038,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad4004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3038 = VFMADDSS4mr_Int
  { 3039,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ed4004e46ULL, NULL, NULL, OperandInfo288 },  // Inst #3039 = VFMADDSS4rm
  { 3040,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ed4004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3040 = VFMADDSS4rm_Int
  { 3041,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ed4004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3041 = VFMADDSS4rr
  { 3042,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ed4004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3042 = VFMADDSS4rr_Int
  { 3043,	4,	1,	0,	0,	0, 0x2ad4004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3043 = VFMADDSS4rr_REV
  { 3044,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b32000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3044 = VFMADDSSr132m
  { 3045,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b32000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3045 = VFMADDSSr132r
  { 3046,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b52000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3046 = VFMADDSSr213m
  { 3047,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b52000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3047 = VFMADDSSr213m_Int
  { 3048,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b52000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3048 = VFMADDSSr213r
  { 3049,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b52000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3049 = VFMADDSSr213r_Int
  { 3050,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b72000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3050 = VFMADDSSr231m
  { 3051,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b72000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3051 = VFMADDSSr231r
  { 3052,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2abb004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3052 = VFMADDSUBPD4mr
  { 3053,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6abb004e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3053 = VFMADDSUBPD4mrY
  { 3054,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ebb004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3054 = VFMADDSUBPD4rm
  { 3055,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ebb004e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3055 = VFMADDSUBPD4rmY
  { 3056,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ebb004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3056 = VFMADDSUBPD4rr
  { 3057,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ebb004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3057 = VFMADDSUBPD4rrY
  { 3058,	4,	1,	0,	0,	0, 0x6abb004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3058 = VFMADDSUBPD4rrY_REV
  { 3059,	4,	1,	0,	0,	0, 0x2abb004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3059 = VFMADDSUBPD4rr_REV
  { 3060,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf2d000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3060 = VFMADDSUBPDr132m
  { 3061,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f2d000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3061 = VFMADDSUBPDr132mY
  { 3062,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf2d000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3062 = VFMADDSUBPDr132r
  { 3063,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f2d000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3063 = VFMADDSUBPDr132rY
  { 3064,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf4d000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3064 = VFMADDSUBPDr213m
  { 3065,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f4d000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3065 = VFMADDSUBPDr213mY
  { 3066,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf4d000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3066 = VFMADDSUBPDr213r
  { 3067,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f4d000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3067 = VFMADDSUBPDr213rY
  { 3068,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf6d000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3068 = VFMADDSUBPDr231m
  { 3069,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f6d000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3069 = VFMADDSUBPDr231mY
  { 3070,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf6d000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3070 = VFMADDSUBPDr231r
  { 3071,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f6d000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3071 = VFMADDSUBPDr231rY
  { 3072,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ab8804e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3072 = VFMADDSUBPS4mr
  { 3073,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6ab8804e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3073 = VFMADDSUBPS4mrY
  { 3074,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002eb8804e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3074 = VFMADDSUBPS4rm
  { 3075,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006eb8804e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3075 = VFMADDSUBPS4rmY
  { 3076,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002eb8804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3076 = VFMADDSUBPS4rr
  { 3077,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006eb8804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3077 = VFMADDSUBPS4rrY
  { 3078,	4,	1,	0,	0,	0, 0x6ab8804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3078 = VFMADDSUBPS4rrY_REV
  { 3079,	4,	1,	0,	0,	0, 0x2ab8804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3079 = VFMADDSUBPS4rr_REV
  { 3080,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb2c800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3080 = VFMADDSUBPSr132m
  { 3081,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b2c800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3081 = VFMADDSUBPSr132mY
  { 3082,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb2c800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3082 = VFMADDSUBPSr132r
  { 3083,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b2c800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3083 = VFMADDSUBPSr132rY
  { 3084,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb4c800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3084 = VFMADDSUBPSr213m
  { 3085,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b4c800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3085 = VFMADDSUBPSr213mY
  { 3086,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb4c800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3086 = VFMADDSUBPSr213r
  { 3087,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b4c800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3087 = VFMADDSUBPSr213rY
  { 3088,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb6c800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3088 = VFMADDSUBPSr231m
  { 3089,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b6c800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3089 = VFMADDSUBPSr231mY
  { 3090,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb6c800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3090 = VFMADDSUBPSr231r
  { 3091,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b6c800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3091 = VFMADDSUBPSr231rY
  { 3092,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2abf004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3092 = VFMSUBADDPD4mr
  { 3093,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6abf004e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3093 = VFMSUBADDPD4mrY
  { 3094,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ebf004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3094 = VFMSUBADDPD4rm
  { 3095,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ebf004e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3095 = VFMSUBADDPD4rmY
  { 3096,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ebf004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3096 = VFMSUBADDPD4rr
  { 3097,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ebf004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3097 = VFMSUBADDPD4rrY
  { 3098,	4,	1,	0,	0,	0, 0x6abf004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3098 = VFMSUBADDPD4rrY_REV
  { 3099,	4,	1,	0,	0,	0, 0x2abf004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3099 = VFMSUBADDPD4rr_REV
  { 3100,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf2f000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3100 = VFMSUBADDPDr132m
  { 3101,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f2f000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3101 = VFMSUBADDPDr132mY
  { 3102,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf2f000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3102 = VFMSUBADDPDr132r
  { 3103,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f2f000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3103 = VFMSUBADDPDr132rY
  { 3104,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf4f000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3104 = VFMSUBADDPDr213m
  { 3105,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f4f000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3105 = VFMSUBADDPDr213mY
  { 3106,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf4f000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3106 = VFMSUBADDPDr213r
  { 3107,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f4f000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3107 = VFMSUBADDPDr213rY
  { 3108,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf6f000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3108 = VFMSUBADDPDr231m
  { 3109,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f6f000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3109 = VFMSUBADDPDr231mY
  { 3110,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf6f000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3110 = VFMSUBADDPDr231r
  { 3111,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f6f000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3111 = VFMSUBADDPDr231rY
  { 3112,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2abc804e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3112 = VFMSUBADDPS4mr
  { 3113,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6abc804e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3113 = VFMSUBADDPS4mrY
  { 3114,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ebc804e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3114 = VFMSUBADDPS4rm
  { 3115,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ebc804e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3115 = VFMSUBADDPS4rmY
  { 3116,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ebc804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3116 = VFMSUBADDPS4rr
  { 3117,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ebc804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3117 = VFMSUBADDPS4rrY
  { 3118,	4,	1,	0,	0,	0, 0x6abc804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3118 = VFMSUBADDPS4rrY_REV
  { 3119,	4,	1,	0,	0,	0, 0x2abc804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3119 = VFMSUBADDPS4rr_REV
  { 3120,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb2e800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3120 = VFMSUBADDPSr132m
  { 3121,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b2e800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3121 = VFMSUBADDPSr132mY
  { 3122,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb2e800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3122 = VFMSUBADDPSr132r
  { 3123,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b2e800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3123 = VFMSUBADDPSr132rY
  { 3124,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb4e800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3124 = VFMSUBADDPSr213m
  { 3125,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b4e800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3125 = VFMSUBADDPSr213mY
  { 3126,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb4e800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3126 = VFMSUBADDPSr213r
  { 3127,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b4e800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3127 = VFMSUBADDPSr213rY
  { 3128,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb6e800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3128 = VFMSUBADDPSr231m
  { 3129,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b6e800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3129 = VFMSUBADDPSr231mY
  { 3130,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb6e800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3130 = VFMSUBADDPSr231r
  { 3131,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b6e800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3131 = VFMSUBADDPSr231rY
  { 3132,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2adb004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3132 = VFMSUBPD4mr
  { 3133,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6adb004e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3133 = VFMSUBPD4mrY
  { 3134,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002edb004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3134 = VFMSUBPD4rm
  { 3135,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006edb004e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3135 = VFMSUBPD4rmY
  { 3136,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002edb004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3136 = VFMSUBPD4rr
  { 3137,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006edb004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3137 = VFMSUBPD4rrY
  { 3138,	4,	1,	0,	0,	0, 0x6adb004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3138 = VFMSUBPD4rrY_REV
  { 3139,	4,	1,	0,	0,	0, 0x2adb004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3139 = VFMSUBPD4rr_REV
  { 3140,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf35000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3140 = VFMSUBPDr132m
  { 3141,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f35000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3141 = VFMSUBPDr132mY
  { 3142,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf35000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3142 = VFMSUBPDr132r
  { 3143,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f35000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3143 = VFMSUBPDr132rY
  { 3144,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf55000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3144 = VFMSUBPDr213m
  { 3145,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f55000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3145 = VFMSUBPDr213mY
  { 3146,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf55000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3146 = VFMSUBPDr213r
  { 3147,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f55000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3147 = VFMSUBPDr213rY
  { 3148,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf75000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3148 = VFMSUBPDr231m
  { 3149,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f75000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3149 = VFMSUBPDr231mY
  { 3150,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf75000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3150 = VFMSUBPDr231r
  { 3151,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f75000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3151 = VFMSUBPDr231rY
  { 3152,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad8804e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3152 = VFMSUBPS4mr
  { 3153,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6ad8804e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3153 = VFMSUBPS4mrY
  { 3154,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ed8804e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3154 = VFMSUBPS4rm
  { 3155,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ed8804e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3155 = VFMSUBPS4rmY
  { 3156,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ed8804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3156 = VFMSUBPS4rr
  { 3157,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ed8804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3157 = VFMSUBPS4rrY
  { 3158,	4,	1,	0,	0,	0, 0x6ad8804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3158 = VFMSUBPS4rrY_REV
  { 3159,	4,	1,	0,	0,	0, 0x2ad8804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3159 = VFMSUBPS4rr_REV
  { 3160,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb34800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3160 = VFMSUBPSr132m
  { 3161,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b34800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3161 = VFMSUBPSr132mY
  { 3162,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb34800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3162 = VFMSUBPSr132r
  { 3163,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b34800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3163 = VFMSUBPSr132rY
  { 3164,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb54800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3164 = VFMSUBPSr213m
  { 3165,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b54800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3165 = VFMSUBPSr213mY
  { 3166,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb54800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3166 = VFMSUBPSr213r
  { 3167,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b54800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3167 = VFMSUBPSr213rY
  { 3168,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb74800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3168 = VFMSUBPSr231m
  { 3169,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b74800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3169 = VFMSUBPSr231mY
  { 3170,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb74800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3170 = VFMSUBPSr231r
  { 3171,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b74800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3171 = VFMSUBPSr231rY
  { 3172,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ade004e46ULL, NULL, NULL, OperandInfo282 },  // Inst #3172 = VFMSUBSD4mr
  { 3173,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ade004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3173 = VFMSUBSD4mr_Int
  { 3174,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ede004e46ULL, NULL, NULL, OperandInfo283 },  // Inst #3174 = VFMSUBSD4rm
  { 3175,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ede004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3175 = VFMSUBSD4rm_Int
  { 3176,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ede004e45ULL, NULL, NULL, OperandInfo284 },  // Inst #3176 = VFMSUBSD4rr
  { 3177,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ede004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3177 = VFMSUBSD4rr_Int
  { 3178,	4,	1,	0,	0,	0, 0x2ade004e45ULL, NULL, NULL, OperandInfo284 },  // Inst #3178 = VFMSUBSD4rr_REV
  { 3179,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f36000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3179 = VFMSUBSDr132m
  { 3180,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f36000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3180 = VFMSUBSDr132r
  { 3181,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f56000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3181 = VFMSUBSDr213m
  { 3182,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f56000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3182 = VFMSUBSDr213m_Int
  { 3183,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f56000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3183 = VFMSUBSDr213r
  { 3184,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f56000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3184 = VFMSUBSDr213r_Int
  { 3185,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f76000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3185 = VFMSUBSDr231m
  { 3186,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f76000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3186 = VFMSUBSDr231r
  { 3187,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2adc004e46ULL, NULL, NULL, OperandInfo287 },  // Inst #3187 = VFMSUBSS4mr
  { 3188,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2adc004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3188 = VFMSUBSS4mr_Int
  { 3189,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002edc004e46ULL, NULL, NULL, OperandInfo288 },  // Inst #3189 = VFMSUBSS4rm
  { 3190,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002edc004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3190 = VFMSUBSS4rm_Int
  { 3191,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002edc004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3191 = VFMSUBSS4rr
  { 3192,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002edc004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3192 = VFMSUBSS4rr_Int
  { 3193,	4,	1,	0,	0,	0, 0x2adc004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3193 = VFMSUBSS4rr_REV
  { 3194,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b36000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3194 = VFMSUBSSr132m
  { 3195,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b36000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3195 = VFMSUBSSr132r
  { 3196,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b56000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3196 = VFMSUBSSr213m
  { 3197,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b56000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3197 = VFMSUBSSr213m_Int
  { 3198,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b56000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3198 = VFMSUBSSr213r
  { 3199,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b56000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3199 = VFMSUBSSr213r_Int
  { 3200,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b76000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3200 = VFMSUBSSr231m
  { 3201,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b76000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3201 = VFMSUBSSr231r
  { 3202,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af3004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3202 = VFNMADDPD4mr
  { 3203,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6af3004e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3203 = VFNMADDPD4mrY
  { 3204,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ef3004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3204 = VFNMADDPD4rm
  { 3205,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ef3004e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3205 = VFNMADDPD4rmY
  { 3206,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ef3004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3206 = VFNMADDPD4rr
  { 3207,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ef3004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3207 = VFNMADDPD4rrY
  { 3208,	4,	1,	0,	0,	0, 0x6af3004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3208 = VFNMADDPD4rrY_REV
  { 3209,	4,	1,	0,	0,	0, 0x2af3004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3209 = VFNMADDPD4rr_REV
  { 3210,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf39000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3210 = VFNMADDPDr132m
  { 3211,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f39000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3211 = VFNMADDPDr132mY
  { 3212,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf39000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3212 = VFNMADDPDr132r
  { 3213,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f39000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3213 = VFNMADDPDr132rY
  { 3214,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf59000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3214 = VFNMADDPDr213m
  { 3215,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f59000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3215 = VFNMADDPDr213mY
  { 3216,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf59000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3216 = VFNMADDPDr213r
  { 3217,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f59000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3217 = VFNMADDPDr213rY
  { 3218,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf79000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3218 = VFNMADDPDr231m
  { 3219,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f79000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3219 = VFNMADDPDr231mY
  { 3220,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf79000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3220 = VFNMADDPDr231r
  { 3221,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f79000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3221 = VFNMADDPDr231rY
  { 3222,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af0804e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3222 = VFNMADDPS4mr
  { 3223,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6af0804e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3223 = VFNMADDPS4mrY
  { 3224,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ef0804e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3224 = VFNMADDPS4rm
  { 3225,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ef0804e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3225 = VFNMADDPS4rmY
  { 3226,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ef0804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3226 = VFNMADDPS4rr
  { 3227,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ef0804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3227 = VFNMADDPS4rrY
  { 3228,	4,	1,	0,	0,	0, 0x6af0804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3228 = VFNMADDPS4rrY_REV
  { 3229,	4,	1,	0,	0,	0, 0x2af0804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3229 = VFNMADDPS4rr_REV
  { 3230,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb38800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3230 = VFNMADDPSr132m
  { 3231,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b38800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3231 = VFNMADDPSr132mY
  { 3232,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb38800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3232 = VFNMADDPSr132r
  { 3233,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b38800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3233 = VFNMADDPSr132rY
  { 3234,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb58800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3234 = VFNMADDPSr213m
  { 3235,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b58800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3235 = VFNMADDPSr213mY
  { 3236,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb58800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3236 = VFNMADDPSr213r
  { 3237,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b58800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3237 = VFNMADDPSr213rY
  { 3238,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb78800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3238 = VFNMADDPSr231m
  { 3239,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b78800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3239 = VFNMADDPSr231mY
  { 3240,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb78800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3240 = VFNMADDPSr231r
  { 3241,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b78800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3241 = VFNMADDPSr231rY
  { 3242,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af6004e46ULL, NULL, NULL, OperandInfo282 },  // Inst #3242 = VFNMADDSD4mr
  { 3243,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af6004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3243 = VFNMADDSD4mr_Int
  { 3244,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ef6004e46ULL, NULL, NULL, OperandInfo283 },  // Inst #3244 = VFNMADDSD4rm
  { 3245,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ef6004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3245 = VFNMADDSD4rm_Int
  { 3246,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ef6004e45ULL, NULL, NULL, OperandInfo284 },  // Inst #3246 = VFNMADDSD4rr
  { 3247,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ef6004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3247 = VFNMADDSD4rr_Int
  { 3248,	4,	1,	0,	0,	0, 0x2af6004e45ULL, NULL, NULL, OperandInfo284 },  // Inst #3248 = VFNMADDSD4rr_REV
  { 3249,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f3a000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3249 = VFNMADDSDr132m
  { 3250,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f3a000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3250 = VFNMADDSDr132r
  { 3251,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f5a000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3251 = VFNMADDSDr213m
  { 3252,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f5a000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3252 = VFNMADDSDr213m_Int
  { 3253,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f5a000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3253 = VFNMADDSDr213r
  { 3254,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f5a000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3254 = VFNMADDSDr213r_Int
  { 3255,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f7a000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3255 = VFNMADDSDr231m
  { 3256,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f7a000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3256 = VFNMADDSDr231r
  { 3257,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af4004e46ULL, NULL, NULL, OperandInfo287 },  // Inst #3257 = VFNMADDSS4mr
  { 3258,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af4004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3258 = VFNMADDSS4mr_Int
  { 3259,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ef4004e46ULL, NULL, NULL, OperandInfo288 },  // Inst #3259 = VFNMADDSS4rm
  { 3260,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ef4004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3260 = VFNMADDSS4rm_Int
  { 3261,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ef4004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3261 = VFNMADDSS4rr
  { 3262,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ef4004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3262 = VFNMADDSS4rr_Int
  { 3263,	4,	1,	0,	0,	0, 0x2af4004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3263 = VFNMADDSS4rr_REV
  { 3264,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b3a000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3264 = VFNMADDSSr132m
  { 3265,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b3a000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3265 = VFNMADDSSr132r
  { 3266,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b5a000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3266 = VFNMADDSSr213m
  { 3267,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b5a000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3267 = VFNMADDSSr213m_Int
  { 3268,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b5a000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3268 = VFNMADDSSr213r
  { 3269,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b5a000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3269 = VFNMADDSSr213r_Int
  { 3270,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b7a000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3270 = VFNMADDSSr231m
  { 3271,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b7a000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3271 = VFNMADDSSr231r
  { 3272,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afb004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3272 = VFNMSUBPD4mr
  { 3273,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6afb004e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3273 = VFNMSUBPD4mrY
  { 3274,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002efb004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3274 = VFNMSUBPD4rm
  { 3275,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006efb004e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3275 = VFNMSUBPD4rmY
  { 3276,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002efb004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3276 = VFNMSUBPD4rr
  { 3277,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006efb004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3277 = VFNMSUBPD4rrY
  { 3278,	4,	1,	0,	0,	0, 0x6afb004e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3278 = VFNMSUBPD4rrY_REV
  { 3279,	4,	1,	0,	0,	0, 0x2afb004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3279 = VFNMSUBPD4rr_REV
  { 3280,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf3d000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3280 = VFNMSUBPDr132m
  { 3281,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f3d000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3281 = VFNMSUBPDr132mY
  { 3282,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf3d000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3282 = VFNMSUBPDr132r
  { 3283,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f3d000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3283 = VFNMSUBPDr132rY
  { 3284,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf5d000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3284 = VFNMSUBPDr213m
  { 3285,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f5d000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3285 = VFNMSUBPDr213mY
  { 3286,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf5d000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3286 = VFNMSUBPDr213r
  { 3287,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f5d000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3287 = VFNMSUBPDr213rY
  { 3288,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf7d000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3288 = VFNMSUBPDr231m
  { 3289,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f7d000d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3289 = VFNMSUBPDr231mY
  { 3290,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf7d000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3290 = VFNMSUBPDr231r
  { 3291,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f7d000d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3291 = VFNMSUBPDr231rY
  { 3292,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af8804e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3292 = VFNMSUBPS4mr
  { 3293,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6af8804e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3293 = VFNMSUBPS4mrY
  { 3294,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002ef8804e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3294 = VFNMSUBPS4rm
  { 3295,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006ef8804e46ULL, NULL, NULL, OperandInfo277 },  // Inst #3295 = VFNMSUBPS4rmY
  { 3296,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002ef8804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3296 = VFNMSUBPS4rr
  { 3297,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8006ef8804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3297 = VFNMSUBPS4rrY
  { 3298,	4,	1,	0,	0,	0, 0x6af8804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3298 = VFNMSUBPS4rrY_REV
  { 3299,	4,	1,	0,	0,	0, 0x2af8804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3299 = VFNMSUBPS4rr_REV
  { 3300,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb3c800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3300 = VFNMSUBPSr132m
  { 3301,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b3c800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3301 = VFNMSUBPSr132mY
  { 3302,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb3c800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3302 = VFNMSUBPSr132r
  { 3303,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b3c800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3303 = VFNMSUBPSr132rY
  { 3304,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb5c800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3304 = VFNMSUBPSr213m
  { 3305,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b5c800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3305 = VFNMSUBPSr213mY
  { 3306,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb5c800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3306 = VFNMSUBPSr213r
  { 3307,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b5c800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3307 = VFNMSUBPSr213rY
  { 3308,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb7c800d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3308 = VFNMSUBPSr231m
  { 3309,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b7c800d46ULL, NULL, NULL, OperandInfo279 },  // Inst #3309 = VFNMSUBPSr231mY
  { 3310,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb7c800d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3310 = VFNMSUBPSr231r
  { 3311,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b7c800d45ULL, NULL, NULL, OperandInfo281 },  // Inst #3311 = VFNMSUBPSr231rY
  { 3312,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afe004e46ULL, NULL, NULL, OperandInfo282 },  // Inst #3312 = VFNMSUBSD4mr
  { 3313,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afe004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3313 = VFNMSUBSD4mr_Int
  { 3314,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002efe004e46ULL, NULL, NULL, OperandInfo283 },  // Inst #3314 = VFNMSUBSD4rm
  { 3315,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002efe004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3315 = VFNMSUBSD4rm_Int
  { 3316,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002efe004e45ULL, NULL, NULL, OperandInfo284 },  // Inst #3316 = VFNMSUBSD4rr
  { 3317,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002efe004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3317 = VFNMSUBSD4rr_Int
  { 3318,	4,	1,	0,	0,	0, 0x2afe004e45ULL, NULL, NULL, OperandInfo284 },  // Inst #3318 = VFNMSUBSD4rr_REV
  { 3319,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f3e000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3319 = VFNMSUBSDr132m
  { 3320,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f3e000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3320 = VFNMSUBSDr132r
  { 3321,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f5e000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3321 = VFNMSUBSDr213m
  { 3322,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f5e000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3322 = VFNMSUBSDr213m_Int
  { 3323,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f5e000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3323 = VFNMSUBSDr213r
  { 3324,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f5e000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3324 = VFNMSUBSDr213r_Int
  { 3325,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f7e000d46ULL, NULL, NULL, OperandInfo285 },  // Inst #3325 = VFNMSUBSDr231m
  { 3326,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f7e000d45ULL, NULL, NULL, OperandInfo286 },  // Inst #3326 = VFNMSUBSDr231r
  { 3327,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afc004e46ULL, NULL, NULL, OperandInfo287 },  // Inst #3327 = VFNMSUBSS4mr
  { 3328,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afc004e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3328 = VFNMSUBSS4mr_Int
  { 3329,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002efc004e46ULL, NULL, NULL, OperandInfo288 },  // Inst #3329 = VFNMSUBSS4rm
  { 3330,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002efc004e46ULL, NULL, NULL, OperandInfo276 },  // Inst #3330 = VFNMSUBSS4rm_Int
  { 3331,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002efc004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3331 = VFNMSUBSS4rr
  { 3332,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8002efc004e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3332 = VFNMSUBSS4rr_Int
  { 3333,	4,	1,	0,	0,	0, 0x2afc004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3333 = VFNMSUBSS4rr_REV
  { 3334,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b3e000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3334 = VFNMSUBSSr132m
  { 3335,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b3e000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3335 = VFNMSUBSSr132r
  { 3336,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b5e000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3336 = VFNMSUBSSr213m
  { 3337,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b5e000d46ULL, NULL, NULL, OperandInfo278 },  // Inst #3337 = VFNMSUBSSr213m_Int
  { 3338,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b5e000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3338 = VFNMSUBSSr213r
  { 3339,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b5e000d45ULL, NULL, NULL, OperandInfo280 },  // Inst #3339 = VFNMSUBSSr213r_Int
  { 3340,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b7e000d46ULL, NULL, NULL, OperandInfo290 },  // Inst #3340 = VFNMSUBSSr231m
  { 3341,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b7e000d45ULL, NULL, NULL, OperandInfo291 },  // Inst #3341 = VFNMSUBSSr231r
  { 3342,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000303001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3342 = VFRCZPDrm
  { 3343,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10004303001506ULL, NULL, NULL, OperandInfo247 },  // Inst #3343 = VFRCZPDrmY
  { 3344,	2,	1,	0,	0,	0, 0x10000303001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3344 = VFRCZPDrr
  { 3345,	2,	1,	0,	0,	0, 0x10004303001505ULL, NULL, NULL, OperandInfo259 },  // Inst #3345 = VFRCZPDrrY
  { 3346,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000301001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3346 = VFRCZPSrm
  { 3347,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10004301001506ULL, NULL, NULL, OperandInfo247 },  // Inst #3347 = VFRCZPSrmY
  { 3348,	2,	1,	0,	0,	0, 0x10000301001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3348 = VFRCZPSrr
  { 3349,	2,	1,	0,	0,	0, 0x10004301001505ULL, NULL, NULL, OperandInfo259 },  // Inst #3349 = VFRCZPSrrY
  { 3350,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000307001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3350 = VFRCZSDrm
  { 3351,	2,	1,	0,	0,	0, 0x10000307001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3351 = VFRCZSDrr
  { 3352,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000305001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3352 = VFRCZSSrm
  { 3353,	2,	1,	0,	0,	0, 0x10000305001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3353 = VFRCZSSrr
  { 3354,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaab000146ULL, NULL, NULL, OperandInfo233 },  // Inst #3354 = VFsANDNPDrm
  { 3355,	3,	1,	138,	0,	0, 0xaab000145ULL, NULL, NULL, OperandInfo234 },  // Inst #3355 = VFsANDNPDrr
  { 3356,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaaa800106ULL, NULL, NULL, OperandInfo235 },  // Inst #3356 = VFsANDNPSrm
  { 3357,	3,	1,	138,	0,	0, 0xaaa800105ULL, NULL, NULL, OperandInfo236 },  // Inst #3357 = VFsANDNPSrr
  { 3358,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaa9000146ULL, NULL, NULL, OperandInfo233 },  // Inst #3358 = VFsANDPDrm
  { 3359,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaa9000145ULL, NULL, NULL, OperandInfo234 },  // Inst #3359 = VFsANDPDrr
  { 3360,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaa8800106ULL, NULL, NULL, OperandInfo235 },  // Inst #3360 = VFsANDPSrm
  { 3361,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaa8800105ULL, NULL, NULL, OperandInfo236 },  // Inst #3361 = VFsANDPSrr
  { 3362,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaad000146ULL, NULL, NULL, OperandInfo233 },  // Inst #3362 = VFsORPDrm
  { 3363,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaad000145ULL, NULL, NULL, OperandInfo234 },  // Inst #3363 = VFsORPDrr
  { 3364,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaac800106ULL, NULL, NULL, OperandInfo235 },  // Inst #3364 = VFsORPSrm
  { 3365,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaac800105ULL, NULL, NULL, OperandInfo236 },  // Inst #3365 = VFsORPSrr
  { 3366,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaaf000146ULL, NULL, NULL, OperandInfo233 },  // Inst #3366 = VFsXORPDrm
  { 3367,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaaf000145ULL, NULL, NULL, OperandInfo234 },  // Inst #3367 = VFsXORPDrr
  { 3368,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaae800106ULL, NULL, NULL, OperandInfo235 },  // Inst #3368 = VFsXORPSrm
  { 3369,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaae800105ULL, NULL, NULL, OperandInfo236 },  // Inst #3369 = VFsXORPSrr
  { 3370,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5725800d46ULL, NULL, NULL, OperandInfo292 },  // Inst #3370 = VGATHERDPDYrm
  { 3371,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1725800d46ULL, NULL, NULL, OperandInfo293 },  // Inst #3371 = VGATHERDPDrm
  { 3372,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5325800d46ULL, NULL, NULL, OperandInfo294 },  // Inst #3372 = VGATHERDPSYrm
  { 3373,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1325800d46ULL, NULL, NULL, OperandInfo293 },  // Inst #3373 = VGATHERDPSrm
  { 3374,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5727800d46ULL, NULL, NULL, OperandInfo294 },  // Inst #3374 = VGATHERQPDYrm
  { 3375,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1727800d46ULL, NULL, NULL, OperandInfo293 },  // Inst #3375 = VGATHERQPDrm
  { 3376,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5327800d46ULL, NULL, NULL, OperandInfo295 },  // Inst #3376 = VGATHERQPSYrm
  { 3377,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1327800d46ULL, NULL, NULL, OperandInfo293 },  // Inst #3377 = VGATHERQPSrm
  { 3378,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0x4af9000146ULL, NULL, NULL, OperandInfo231 },  // Inst #3378 = VHADDPDYrm
  { 3379,	3,	1,	142,	0,	0, 0x4af9000145ULL, NULL, NULL, OperandInfo232 },  // Inst #3379 = VHADDPDYrr
  { 3380,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xaf9000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3380 = VHADDPDrm
  { 3381,	3,	1,	142,	0,	0, 0xaf9000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3381 = VHADDPDrr
  { 3382,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0x4af8800b06ULL, NULL, NULL, OperandInfo231 },  // Inst #3382 = VHADDPSYrm
  { 3383,	3,	1,	142,	0,	0, 0x4af8800b05ULL, NULL, NULL, OperandInfo232 },  // Inst #3383 = VHADDPSYrr
  { 3384,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xaf8800b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3384 = VHADDPSrm
  { 3385,	3,	1,	142,	0,	0, 0xaf8800b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3385 = VHADDPSrr
  { 3386,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0x4afb000146ULL, NULL, NULL, OperandInfo231 },  // Inst #3386 = VHSUBPDYrm
  { 3387,	3,	1,	142,	0,	0, 0x4afb000145ULL, NULL, NULL, OperandInfo232 },  // Inst #3387 = VHSUBPDYrr
  { 3388,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xafb000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3388 = VHSUBPDrm
  { 3389,	3,	1,	142,	0,	0, 0xafb000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3389 = VHSUBPDrr
  { 3390,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0x4afa800b06ULL, NULL, NULL, OperandInfo231 },  // Inst #3390 = VHSUBPSYrm
  { 3391,	3,	1,	142,	0,	0, 0x4afa800b05ULL, NULL, NULL, OperandInfo232 },  // Inst #3391 = VHSUBPSYrr
  { 3392,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xafa800b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3392 = VHSUBPSrm
  { 3393,	3,	1,	142,	0,	0, 0xafa800b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3393 = VHSUBPSrr
  { 3394,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a30804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #3394 = VINSERTF128rm
  { 3395,	4,	1,	0,	0,	0, 0x4a30804e45ULL, NULL, NULL, OperandInfo296 },  // Inst #3395 = VINSERTF128rr
  { 3396,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x3490a30804e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3396 = VINSERTF32x4rm
  { 3397,	4,	1,	0,	0,	0, 0x90a30804e45ULL, NULL, NULL, OperandInfo297 },  // Inst #3397 = VINSERTF32x4rr
  { 3398,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x3690e35004e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3398 = VINSERTF64x4rm
  { 3399,	4,	1,	0,	0,	0, 0x90e35004e45ULL, NULL, NULL, OperandInfo298 },  // Inst #3399 = VINSERTF64x4rr
  { 3400,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a71804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #3400 = VINSERTI128rm
  { 3401,	4,	1,	0,	0,	0, 0x4a71804e45ULL, NULL, NULL, OperandInfo296 },  // Inst #3401 = VINSERTI128rr
  { 3402,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x3490a71804e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3402 = VINSERTI32x4rm
  { 3403,	4,	1,	0,	0,	0, 0x90a71804e45ULL, NULL, NULL, OperandInfo297 },  // Inst #3403 = VINSERTI32x4rr
  { 3404,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x3690e75804e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3404 = VINSERTI64x4rm
  { 3405,	4,	1,	0,	0,	0, 0x90e75804e45ULL, NULL, NULL, OperandInfo298 },  // Inst #3405 = VINSERTI64x4rr
  { 3406,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa42804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3406 = VINSERTPSrm
  { 3407,	4,	1,	0,	0,	0, 0xa42804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3407 = VINSERTPSrr
  { 3408,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2410a43804e46ULL, NULL, NULL, OperandInfo299 },  // Inst #3408 = VINSERTPSzrm
  { 3409,	4,	1,	0,	0,	0, 0x10a43804e45ULL, NULL, NULL, OperandInfo300 },  // Inst #3409 = VINSERTPSzrr
  { 3410,	6,	1,	182,	0,	0|(1<<MCID::MayLoad), 0x43e1000b06ULL, NULL, NULL, OperandInfo247 },  // Inst #3410 = VLDDQUYrm
  { 3411,	6,	1,	182,	0,	0|(1<<MCID::MayLoad), 0x3e1000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #3411 = VLDDQUrm
  { 3412,	5,	0,	196,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x35c80011aULL, NULL, NULL, OperandInfo40 },  // Inst #3412 = VLDMXCSR
  { 3413,	2,	0,	225,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x3ef800145ULL, ImplicitList41, NULL, OperandInfo50 },  // Inst #3413 = VMASKMOVDQU
  { 3414,	2,	0,	225,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x3ef800145ULL, ImplicitList42, NULL, OperandInfo50 },  // Inst #3414 = VMASKMOVDQU64
  { 3415,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4a5f000d44ULL, NULL, NULL, OperandInfo301 },  // Inst #3415 = VMASKMOVPDYmr
  { 3416,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a5b000d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3416 = VMASKMOVPDYrm
  { 3417,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xa5f000d44ULL, NULL, NULL, OperandInfo302 },  // Inst #3417 = VMASKMOVPDmr
  { 3418,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa5b000d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3418 = VMASKMOVPDrm
  { 3419,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4a5c800d44ULL, NULL, NULL, OperandInfo301 },  // Inst #3419 = VMASKMOVPSYmr
  { 3420,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a58800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3420 = VMASKMOVPSYrm
  { 3421,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xa5c800d44ULL, NULL, NULL, OperandInfo302 },  // Inst #3421 = VMASKMOVPSmr
  { 3422,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa58800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3422 = VMASKMOVPSrm
  { 3423,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4abf000146ULL, NULL, NULL, OperandInfo231 },  // Inst #3423 = VMAXCPDYrm
  { 3424,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x4abf000145ULL, NULL, NULL, OperandInfo232 },  // Inst #3424 = VMAXCPDYrr
  { 3425,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xabf000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3425 = VMAXCPDrm
  { 3426,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xabf000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3426 = VMAXCPDrr
  { 3427,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4abe800106ULL, NULL, NULL, OperandInfo231 },  // Inst #3427 = VMAXCPSYrm
  { 3428,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0x4abe800105ULL, NULL, NULL, OperandInfo232 },  // Inst #3428 = VMAXCPSYrr
  { 3429,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xabe800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3429 = VMAXCPSrm
  { 3430,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xabe800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3430 = VMAXCPSrr
  { 3431,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8abe000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #3431 = VMAXCSDrm
  { 3432,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0x8abe000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #3432 = VMAXCSDrr
  { 3433,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8abe000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #3433 = VMAXCSSrm
  { 3434,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0x8abe000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #3434 = VMAXCSSrr
  { 3435,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4abf000146ULL, NULL, NULL, OperandInfo231 },  // Inst #3435 = VMAXPDYrm
  { 3436,	3,	1,	11,	0,	0, 0x4abf000145ULL, NULL, NULL, OperandInfo232 },  // Inst #3436 = VMAXPDYrr
  { 3437,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xabf000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3437 = VMAXPDrm
  { 3438,	3,	1,	11,	0,	0, 0xabf000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3438 = VMAXPDrr
  { 3439,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4abe800106ULL, NULL, NULL, OperandInfo231 },  // Inst #3439 = VMAXPSYrm
  { 3440,	3,	1,	13,	0,	0, 0x4abe800105ULL, NULL, NULL, OperandInfo232 },  // Inst #3440 = VMAXPSYrr
  { 3441,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xabe800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3441 = VMAXPSrm
  { 3442,	3,	1,	13,	0,	0, 0xabe800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3442 = VMAXPSrr
  { 3443,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8abe000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #3443 = VMAXSDrm
  { 3444,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8abe000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3444 = VMAXSDrm_Int
  { 3445,	3,	1,	15,	0,	0, 0x8abe000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #3445 = VMAXSDrr
  { 3446,	3,	1,	15,	0,	0, 0x8abe000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3446 = VMAXSDrr_Int
  { 3447,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8abe000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #3447 = VMAXSSrm
  { 3448,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8abe000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #3448 = VMAXSSrm_Int
  { 3449,	3,	1,	17,	0,	0, 0x8abe000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #3449 = VMAXSSrr
  { 3450,	3,	1,	17,	0,	0, 0x8abe000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #3450 = VMAXSSrr_Int
  { 3451,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000121ULL, NULL, NULL, 0 },  // Inst #3451 = VMCALL
  { 3452,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00015eULL, NULL, NULL, OperandInfo40 },  // Inst #3452 = VMCLEARm
  { 3453,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000131ULL, NULL, NULL, 0 },  // Inst #3453 = VMFUNC
  { 3454,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4abb000146ULL, NULL, NULL, OperandInfo231 },  // Inst #3454 = VMINCPDYrm
  { 3455,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x4abb000145ULL, NULL, NULL, OperandInfo232 },  // Inst #3455 = VMINCPDYrr
  { 3456,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xabb000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3456 = VMINCPDrm
  { 3457,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xabb000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3457 = VMINCPDrr
  { 3458,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4aba800106ULL, NULL, NULL, OperandInfo231 },  // Inst #3458 = VMINCPSYrm
  { 3459,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0x4aba800105ULL, NULL, NULL, OperandInfo232 },  // Inst #3459 = VMINCPSYrr
  { 3460,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xaba800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3460 = VMINCPSrm
  { 3461,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xaba800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3461 = VMINCPSrr
  { 3462,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8aba000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #3462 = VMINCSDrm
  { 3463,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0x8aba000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #3463 = VMINCSDrr
  { 3464,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8aba000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #3464 = VMINCSSrm
  { 3465,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0x8aba000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #3465 = VMINCSSrr
  { 3466,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4abb000146ULL, NULL, NULL, OperandInfo231 },  // Inst #3466 = VMINPDYrm
  { 3467,	3,	1,	11,	0,	0, 0x4abb000145ULL, NULL, NULL, OperandInfo232 },  // Inst #3467 = VMINPDYrr
  { 3468,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xabb000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3468 = VMINPDrm
  { 3469,	3,	1,	11,	0,	0, 0xabb000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3469 = VMINPDrr
  { 3470,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4aba800106ULL, NULL, NULL, OperandInfo231 },  // Inst #3470 = VMINPSYrm
  { 3471,	3,	1,	13,	0,	0, 0x4aba800105ULL, NULL, NULL, OperandInfo232 },  // Inst #3471 = VMINPSYrr
  { 3472,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xaba800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3472 = VMINPSrm
  { 3473,	3,	1,	13,	0,	0, 0xaba800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3473 = VMINPSrr
  { 3474,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8aba000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #3474 = VMINSDrm
  { 3475,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8aba000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3475 = VMINSDrm_Int
  { 3476,	3,	1,	15,	0,	0, 0x8aba000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #3476 = VMINSDrr
  { 3477,	3,	1,	15,	0,	0, 0x8aba000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3477 = VMINSDrr_Int
  { 3478,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8aba000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #3478 = VMINSSrm
  { 3479,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8aba000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #3479 = VMINSSrm_Int
  { 3480,	3,	1,	17,	0,	0, 0x8aba000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #3480 = VMINSSrr
  { 3481,	3,	1,	17,	0,	0, 0x8aba000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #3481 = VMINSSrr_Int
  { 3482,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000122ULL, NULL, NULL, 0 },  // Inst #3482 = VMLAUNCH
  { 3483,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000136ULL, ImplicitList8, NULL, 0 },  // Inst #3483 = VMLOAD32
  { 3484,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000136ULL, ImplicitList9, NULL, 0 },  // Inst #3484 = VMLOAD64
  { 3485,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000135ULL, NULL, NULL, 0 },  // Inst #3485 = VMMCALL
  { 3486,	2,	1,	285,	0,	0, 0x6dc000145ULL, NULL, NULL, OperandInfo195 },  // Inst #3486 = VMOV64toPQIrr
  { 3487,	6,	1,	182,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo100 },  // Inst #3487 = VMOV64toSDrm
  { 3488,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0x6dc000145ULL, NULL, NULL, OperandInfo101 },  // Inst #3488 = VMOV64toSDrr
  { 3489,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x4253000144ULL, NULL, NULL, OperandInfo303 },  // Inst #3489 = VMOVAPDYmr
  { 3490,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x4251000146ULL, NULL, NULL, OperandInfo247 },  // Inst #3490 = VMOVAPDYrm
  { 3491,	2,	1,	140,	0,	0, 0x4251000145ULL, NULL, NULL, OperandInfo259 },  // Inst #3491 = VMOVAPDYrr
  { 3492,	2,	1,	140,	0,	0, 0x4253000143ULL, NULL, NULL, OperandInfo259 },  // Inst #3492 = VMOVAPDYrr_REV
  { 3493,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x690653000144ULL, NULL, NULL, OperandInfo304 },  // Inst #3493 = VMOVAPDZmr
  { 3494,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x690651000046ULL, NULL, NULL, OperandInfo249 },  // Inst #3494 = VMOVAPDZrm
  { 3495,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6b0651000046ULL, NULL, NULL, OperandInfo305 },  // Inst #3495 = VMOVAPDZrmk
  { 3496,	2,	1,	0,	0,	0, 0x690651000045ULL, NULL, NULL, OperandInfo306 },  // Inst #3496 = VMOVAPDZrr
  { 3497,	4,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6b0651000045ULL, NULL, NULL, OperandInfo307 },  // Inst #3497 = VMOVAPDZrrk
  { 3498,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x253000144ULL, NULL, NULL, OperandInfo199 },  // Inst #3498 = VMOVAPDmr
  { 3499,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x251000146ULL, NULL, NULL, OperandInfo49 },  // Inst #3499 = VMOVAPDrm
  { 3500,	2,	1,	140,	0,	0, 0x251000145ULL, NULL, NULL, OperandInfo50 },  // Inst #3500 = VMOVAPDrr
  { 3501,	2,	1,	140,	0,	0, 0x253000143ULL, NULL, NULL, OperandInfo50 },  // Inst #3501 = VMOVAPDrr_REV
  { 3502,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x4252800104ULL, NULL, NULL, OperandInfo303 },  // Inst #3502 = VMOVAPSYmr
  { 3503,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x4250800106ULL, NULL, NULL, OperandInfo247 },  // Inst #3503 = VMOVAPSYrm
  { 3504,	2,	1,	140,	0,	0, 0x4250800105ULL, NULL, NULL, OperandInfo259 },  // Inst #3504 = VMOVAPSYrr
  { 3505,	2,	1,	140,	0,	0, 0x4252800103ULL, NULL, NULL, OperandInfo259 },  // Inst #3505 = VMOVAPSYrr_REV
  { 3506,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x490252800104ULL, NULL, NULL, OperandInfo304 },  // Inst #3506 = VMOVAPSZmr
  { 3507,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x490250800006ULL, NULL, NULL, OperandInfo249 },  // Inst #3507 = VMOVAPSZrm
  { 3508,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4b0250800006ULL, NULL, NULL, OperandInfo308 },  // Inst #3508 = VMOVAPSZrmk
  { 3509,	2,	1,	0,	0,	0, 0x490250800005ULL, NULL, NULL, OperandInfo306 },  // Inst #3509 = VMOVAPSZrr
  { 3510,	4,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4b0250800005ULL, NULL, NULL, OperandInfo309 },  // Inst #3510 = VMOVAPSZrrk
  { 3511,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x252800104ULL, NULL, NULL, OperandInfo199 },  // Inst #3511 = VMOVAPSmr
  { 3512,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x250800106ULL, NULL, NULL, OperandInfo49 },  // Inst #3512 = VMOVAPSrm
  { 3513,	2,	1,	140,	0,	0, 0x250800105ULL, NULL, NULL, OperandInfo50 },  // Inst #3513 = VMOVAPSrr
  { 3514,	2,	1,	140,	0,	0, 0x252800103ULL, NULL, NULL, OperandInfo50 },  // Inst #3514 = VMOVAPSrr_REV
  { 3515,	6,	1,	467,	0,	0|(1<<MCID::MayLoad), 0x4225000b06ULL, NULL, NULL, OperandInfo247 },  // Inst #3515 = VMOVDDUPYrm
  { 3516,	2,	1,	468,	0,	0, 0x4225000b05ULL, NULL, NULL, OperandInfo259 },  // Inst #3516 = VMOVDDUPYrr
  { 3517,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x225000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #3517 = VMOVDDUPrm
  { 3518,	2,	1,	291,	0,	0, 0x225000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #3518 = VMOVDDUPrr
  { 3519,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0x2dc000146ULL, NULL, NULL, OperandInfo49 },  // Inst #3519 = VMOVDI2PDIrm
  { 3520,	2,	1,	285,	0,	0, 0x2dc000145ULL, NULL, NULL, OperandInfo200 },  // Inst #3520 = VMOVDI2PDIrr
  { 3521,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0x2dc000146ULL, NULL, NULL, OperandInfo98 },  // Inst #3521 = VMOVDI2SSrm
  { 3522,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0x2dc000145ULL, NULL, NULL, OperandInfo104 },  // Inst #3522 = VMOVDI2SSrr
  { 3523,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x4902ff800144ULL, NULL, NULL, OperandInfo304 },  // Inst #3523 = VMOVDQA32mr
  { 3524,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4902df800146ULL, NULL, NULL, OperandInfo249 },  // Inst #3524 = VMOVDQA32rm
  { 3525,	2,	1,	0,	0,	0, 0x902df800145ULL, NULL, NULL, OperandInfo306 },  // Inst #3525 = VMOVDQA32rr
  { 3526,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x6906ff800144ULL, NULL, NULL, OperandInfo304 },  // Inst #3526 = VMOVDQA64mr
  { 3527,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6906df800146ULL, NULL, NULL, OperandInfo249 },  // Inst #3527 = VMOVDQA64rm
  { 3528,	2,	1,	0,	0,	0, 0x906df800145ULL, NULL, NULL, OperandInfo306 },  // Inst #3528 = VMOVDQA64rr
  { 3529,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x42ff800144ULL, NULL, NULL, OperandInfo303 },  // Inst #3529 = VMOVDQAYmr
  { 3530,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x42df800146ULL, NULL, NULL, OperandInfo247 },  // Inst #3530 = VMOVDQAYrm
  { 3531,	2,	1,	140,	0,	0, 0x42df800145ULL, NULL, NULL, OperandInfo259 },  // Inst #3531 = VMOVDQAYrr
  { 3532,	2,	1,	140,	0,	0, 0x42ff800143ULL, NULL, NULL, OperandInfo259 },  // Inst #3532 = VMOVDQAYrr_REV
  { 3533,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x2ff800144ULL, NULL, NULL, OperandInfo199 },  // Inst #3533 = VMOVDQAmr
  { 3534,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x2df800146ULL, NULL, NULL, OperandInfo49 },  // Inst #3534 = VMOVDQArm
  { 3535,	2,	1,	140,	0,	0, 0x2df800145ULL, NULL, NULL, OperandInfo50 },  // Inst #3535 = VMOVDQArr
  { 3536,	2,	1,	140,	0,	0, 0x2ff800143ULL, NULL, NULL, OperandInfo50 },  // Inst #3536 = VMOVDQArr_REV
  { 3537,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x4902de000c06ULL, NULL, NULL, OperandInfo249 },  // Inst #3537 = VMOVDQU32rm
  { 3538,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4b02de000c06ULL, NULL, NULL, OperandInfo308 },  // Inst #3538 = VMOVDQU32rmk
  { 3539,	2,	1,	0,	0,	0, 0x4902de000c05ULL, NULL, NULL, OperandInfo306 },  // Inst #3539 = VMOVDQU32rr
  { 3540,	4,	1,	0,	0,	0, 0x4b02de000c05ULL, NULL, NULL, OperandInfo309 },  // Inst #3540 = VMOVDQU32rrk
  { 3541,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x6906de000c06ULL, NULL, NULL, OperandInfo249 },  // Inst #3541 = VMOVDQU64rm
  { 3542,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6b06de000c06ULL, NULL, NULL, OperandInfo305 },  // Inst #3542 = VMOVDQU64rmk
  { 3543,	2,	1,	0,	0,	0, 0x6906de000c05ULL, NULL, NULL, OperandInfo306 },  // Inst #3543 = VMOVDQU64rr
  { 3544,	4,	1,	0,	0,	0, 0x6b06de000c05ULL, NULL, NULL, OperandInfo307 },  // Inst #3544 = VMOVDQU64rrk
  { 3545,	6,	0,	292,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42ff800c04ULL, NULL, NULL, OperandInfo303 },  // Inst #3545 = VMOVDQUYmr
  { 3546,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x42df800c06ULL, NULL, NULL, OperandInfo247 },  // Inst #3546 = VMOVDQUYrm
  { 3547,	2,	1,	294,	0,	0, 0x42df800c05ULL, NULL, NULL, OperandInfo259 },  // Inst #3547 = VMOVDQUYrr
  { 3548,	2,	1,	294,	0,	0, 0x42ff800c03ULL, NULL, NULL, OperandInfo259 },  // Inst #3548 = VMOVDQUYrr_REV
  { 3549,	6,	0,	292,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2ff800c04ULL, NULL, NULL, OperandInfo199 },  // Inst #3549 = VMOVDQUmr
  { 3550,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x2df800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3550 = VMOVDQUrm
  { 3551,	2,	1,	294,	0,	0, 0x2df800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3551 = VMOVDQUrr
  { 3552,	2,	1,	294,	0,	0, 0x2ff800c03ULL, NULL, NULL, OperandInfo50 },  // Inst #3552 = VMOVDQUrr_REV
  { 3553,	3,	1,	291,	0,	0, 0xa24800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3553 = VMOVHLPSrr
  { 3554,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x22f000144ULL, NULL, NULL, OperandInfo199 },  // Inst #3554 = VMOVHPDmr
  { 3555,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0xa2d000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3555 = VMOVHPDrm
  { 3556,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x22e800104ULL, NULL, NULL, OperandInfo199 },  // Inst #3556 = VMOVHPSmr
  { 3557,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0xa2c800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3557 = VMOVHPSrm
  { 3558,	3,	1,	291,	0,	0, 0xa2c800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3558 = VMOVLHPSrr
  { 3559,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x227000144ULL, NULL, NULL, OperandInfo199 },  // Inst #3559 = VMOVLPDmr
  { 3560,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0xa25000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3560 = VMOVLPDrm
  { 3561,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x226800104ULL, NULL, NULL, OperandInfo199 },  // Inst #3561 = VMOVLPSmr
  { 3562,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0xa24800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3562 = VMOVLPSrm
  { 3563,	6,	0,	469,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x3ac000144ULL, NULL, NULL, OperandInfo199 },  // Inst #3563 = VMOVLQ128mr
  { 3564,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42a1000145ULL, NULL, NULL, OperandInfo310 },  // Inst #3564 = VMOVMSKPDYr64r
  { 3565,	2,	1,	298,	0,	0, 0x42a1000145ULL, NULL, NULL, OperandInfo311 },  // Inst #3565 = VMOVMSKPDYrr32
  { 3566,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42a1002145ULL, NULL, NULL, OperandInfo310 },  // Inst #3566 = VMOVMSKPDYrr64
  { 3567,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a1000145ULL, NULL, NULL, OperandInfo96 },  // Inst #3567 = VMOVMSKPDr64r
  { 3568,	2,	1,	298,	0,	0, 0x2a1000145ULL, NULL, NULL, OperandInfo97 },  // Inst #3568 = VMOVMSKPDrr32
  { 3569,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a1002145ULL, NULL, NULL, OperandInfo96 },  // Inst #3569 = VMOVMSKPDrr64
  { 3570,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42a0800105ULL, NULL, NULL, OperandInfo310 },  // Inst #3570 = VMOVMSKPSYr64r
  { 3571,	2,	1,	298,	0,	0, 0x42a0800105ULL, NULL, NULL, OperandInfo311 },  // Inst #3571 = VMOVMSKPSYrr32
  { 3572,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42a0802105ULL, NULL, NULL, OperandInfo310 },  // Inst #3572 = VMOVMSKPSYrr64
  { 3573,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a0800105ULL, NULL, NULL, OperandInfo96 },  // Inst #3573 = VMOVMSKPSr64r
  { 3574,	2,	1,	298,	0,	0, 0x2a0800105ULL, NULL, NULL, OperandInfo97 },  // Inst #3574 = VMOVMSKPSrr32
  { 3575,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a0802105ULL, NULL, NULL, OperandInfo96 },  // Inst #3575 = VMOVMSKPSrr64
  { 3576,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4255800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #3576 = VMOVNTDQAYrm
  { 3577,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x255800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3577 = VMOVNTDQArm
  { 3578,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x43cf800144ULL, NULL, NULL, OperandInfo303 },  // Inst #3578 = VMOVNTDQYmr
  { 3579,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x3cf800144ULL, NULL, NULL, OperandInfo199 },  // Inst #3579 = VMOVNTDQmr
  { 3580,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x4257000144ULL, NULL, NULL, OperandInfo303 },  // Inst #3580 = VMOVNTPDYmr
  { 3581,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x257000144ULL, NULL, NULL, OperandInfo199 },  // Inst #3581 = VMOVNTPDmr
  { 3582,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x4256800104ULL, NULL, NULL, OperandInfo303 },  // Inst #3582 = VMOVNTPSYmr
  { 3583,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x256800104ULL, NULL, NULL, OperandInfo199 },  // Inst #3583 = VMOVNTPSmr
  { 3584,	6,	0,	286,	0,	0|(1<<MCID::MayStore), 0x2fc000144ULL, NULL, NULL, OperandInfo199 },  // Inst #3584 = VMOVPDI2DImr
  { 3585,	2,	1,	300,	0,	0, 0x2fc000143ULL, NULL, NULL, OperandInfo97 },  // Inst #3585 = VMOVPDI2DIrr
  { 3586,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0x3ac000144ULL, NULL, NULL, OperandInfo199 },  // Inst #3586 = VMOVPQI2QImr
  { 3587,	2,	1,	300,	0,	0, 0x6fc000143ULL, NULL, NULL, OperandInfo96 },  // Inst #3587 = VMOVPQIto64rr
  { 3588,	6,	1,	182,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3588 = VMOVQI2PQIrm
  { 3589,	2,	1,	285,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6fc000143ULL, NULL, NULL, OperandInfo96 },  // Inst #3589 = VMOVQd64rr
  { 3590,	2,	1,	285,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6fc000143ULL, NULL, NULL, OperandInfo96 },  // Inst #3590 = VMOVQd64rr_alt
  { 3591,	2,	1,	285,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6dc000145ULL, NULL, NULL, OperandInfo195 },  // Inst #3591 = VMOVQs64rr
  { 3592,	2,	1,	238,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2fc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3592 = VMOVQxrxr
  { 3593,	6,	0,	303,	0,	0|(1<<MCID::MayStore), 0x8222000b04ULL, NULL, NULL, OperandInfo201 },  // Inst #3593 = VMOVSDmr
  { 3594,	6,	1,	304,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x8220000b06ULL, NULL, NULL, OperandInfo100 },  // Inst #3594 = VMOVSDrm
  { 3595,	3,	1,	305,	0,	0, 0x8a20000b05ULL, NULL, NULL, OperandInfo312 },  // Inst #3595 = VMOVSDrr
  { 3596,	3,	1,	305,	0,	0, 0x8a22000b03ULL, NULL, NULL, OperandInfo312 },  // Inst #3596 = VMOVSDrr_REV
  { 3597,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0x6fc000144ULL, NULL, NULL, OperandInfo201 },  // Inst #3597 = VMOVSDto64mr
  { 3598,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0x6fc000143ULL, NULL, NULL, OperandInfo106 },  // Inst #3598 = VMOVSDto64rr
  { 3599,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x422c800c06ULL, NULL, NULL, OperandInfo247 },  // Inst #3599 = VMOVSHDUPYrm
  { 3600,	2,	1,	291,	0,	0, 0x422c800c05ULL, NULL, NULL, OperandInfo259 },  // Inst #3600 = VMOVSHDUPYrr
  { 3601,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x22c800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3601 = VMOVSHDUPrm
  { 3602,	2,	1,	291,	0,	0, 0x22c800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3602 = VMOVSHDUPrr
  { 3603,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x4224800c06ULL, NULL, NULL, OperandInfo247 },  // Inst #3603 = VMOVSLDUPYrm
  { 3604,	2,	1,	291,	0,	0, 0x4224800c05ULL, NULL, NULL, OperandInfo259 },  // Inst #3604 = VMOVSLDUPYrr
  { 3605,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x224800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3605 = VMOVSLDUPrm
  { 3606,	2,	1,	291,	0,	0, 0x224800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3606 = VMOVSLDUPrr
  { 3607,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0x2fc000144ULL, NULL, NULL, OperandInfo203 },  // Inst #3607 = VMOVSS2DImr
  { 3608,	2,	1,	300,	0,	0|(1<<MCID::Bitcast), 0x2fc000143ULL, NULL, NULL, OperandInfo109 },  // Inst #3608 = VMOVSS2DIrr
  { 3609,	6,	0,	303,	0,	0|(1<<MCID::MayStore), 0x8222000c04ULL, NULL, NULL, OperandInfo203 },  // Inst #3609 = VMOVSSmr
  { 3610,	6,	1,	304,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x8220000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #3610 = VMOVSSrm
  { 3611,	3,	1,	305,	0,	0, 0x8a20000c05ULL, NULL, NULL, OperandInfo313 },  // Inst #3611 = VMOVSSrr
  { 3612,	3,	1,	305,	0,	0, 0x8a22000c03ULL, NULL, NULL, OperandInfo313 },  // Inst #3612 = VMOVSSrr_REV
  { 3613,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x4223000144ULL, NULL, NULL, OperandInfo303 },  // Inst #3613 = VMOVUPDYmr
  { 3614,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x4221000146ULL, NULL, NULL, OperandInfo247 },  // Inst #3614 = VMOVUPDYrm
  { 3615,	2,	1,	294,	0,	0, 0x4221000145ULL, NULL, NULL, OperandInfo259 },  // Inst #3615 = VMOVUPDYrr
  { 3616,	2,	1,	294,	0,	0, 0x4223000143ULL, NULL, NULL, OperandInfo259 },  // Inst #3616 = VMOVUPDYrr_REV
  { 3617,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x690623000144ULL, NULL, NULL, OperandInfo304 },  // Inst #3617 = VMOVUPDZmr
  { 3618,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x690621000046ULL, NULL, NULL, OperandInfo249 },  // Inst #3618 = VMOVUPDZrm
  { 3619,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6b0621000046ULL, NULL, NULL, OperandInfo305 },  // Inst #3619 = VMOVUPDZrmk
  { 3620,	2,	1,	0,	0,	0, 0x690621000045ULL, NULL, NULL, OperandInfo306 },  // Inst #3620 = VMOVUPDZrr
  { 3621,	4,	1,	0,	0,	0, 0x6b0621000045ULL, NULL, NULL, OperandInfo307 },  // Inst #3621 = VMOVUPDZrrk
  { 3622,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x223000144ULL, NULL, NULL, OperandInfo199 },  // Inst #3622 = VMOVUPDmr
  { 3623,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x221000146ULL, NULL, NULL, OperandInfo49 },  // Inst #3623 = VMOVUPDrm
  { 3624,	2,	1,	294,	0,	0, 0x221000145ULL, NULL, NULL, OperandInfo50 },  // Inst #3624 = VMOVUPDrr
  { 3625,	2,	1,	294,	0,	0, 0x223000143ULL, NULL, NULL, OperandInfo50 },  // Inst #3625 = VMOVUPDrr_REV
  { 3626,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x4222800104ULL, NULL, NULL, OperandInfo303 },  // Inst #3626 = VMOVUPSYmr
  { 3627,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x4220800106ULL, NULL, NULL, OperandInfo247 },  // Inst #3627 = VMOVUPSYrm
  { 3628,	2,	1,	294,	0,	0, 0x4220800105ULL, NULL, NULL, OperandInfo259 },  // Inst #3628 = VMOVUPSYrr
  { 3629,	2,	1,	294,	0,	0, 0x4222800103ULL, NULL, NULL, OperandInfo259 },  // Inst #3629 = VMOVUPSYrr_REV
  { 3630,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x490222800104ULL, NULL, NULL, OperandInfo304 },  // Inst #3630 = VMOVUPSZmr
  { 3631,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x490220800106ULL, NULL, NULL, OperandInfo249 },  // Inst #3631 = VMOVUPSZrm
  { 3632,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4b0220800106ULL, NULL, NULL, OperandInfo308 },  // Inst #3632 = VMOVUPSZrmk
  { 3633,	2,	1,	0,	0,	0, 0x490220800105ULL, NULL, NULL, OperandInfo306 },  // Inst #3633 = VMOVUPSZrr
  { 3634,	4,	1,	0,	0,	0, 0x4b0220800105ULL, NULL, NULL, OperandInfo309 },  // Inst #3634 = VMOVUPSZrrk
  { 3635,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x222800104ULL, NULL, NULL, OperandInfo199 },  // Inst #3635 = VMOVUPSmr
  { 3636,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x220800106ULL, NULL, NULL, OperandInfo49 },  // Inst #3636 = VMOVUPSrm
  { 3637,	2,	1,	294,	0,	0, 0x220800105ULL, NULL, NULL, OperandInfo50 },  // Inst #3637 = VMOVUPSrr
  { 3638,	2,	1,	294,	0,	0, 0x222800103ULL, NULL, NULL, OperandInfo50 },  // Inst #3638 = VMOVUPSrr_REV
  { 3639,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0x2dc000146ULL, NULL, NULL, OperandInfo49 },  // Inst #3639 = VMOVZDI2PDIrm
  { 3640,	2,	1,	285,	0,	0, 0x2dc000145ULL, NULL, NULL, OperandInfo200 },  // Inst #3640 = VMOVZDI2PDIrr
  { 3641,	6,	1,	310,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3641 = VMOVZPQILo2PQIrm
  { 3642,	2,	1,	311,	0,	0, 0x2fc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3642 = VMOVZPQILo2PQIrr
  { 3643,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3643 = VMOVZQI2PQIrm
  { 3644,	2,	1,	285,	0,	0, 0x6dc000145ULL, NULL, NULL, OperandInfo195 },  // Inst #3644 = VMOVZQI2PQIrr
  { 3645,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a85804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #3645 = VMPSADBWYrmi
  { 3646,	4,	1,	0,	0,	0, 0x4a85804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3646 = VMPSADBWYrri
  { 3647,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa85804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3647 = VMPSADBWrmi
  { 3648,	4,	1,	0,	0,	0, 0xa85804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3648 = VMPSADBWrri
  { 3649,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00011eULL, NULL, NULL, OperandInfo40 },  // Inst #3649 = VMPTRLDm
  { 3650,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00011fULL, NULL, NULL, OperandInfo40 },  // Inst #3650 = VMPTRSTm
  { 3651,	6,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000104ULL, NULL, NULL, OperandInfo20 },  // Inst #3651 = VMREAD32rm
  { 3652,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000103ULL, NULL, NULL, OperandInfo32 },  // Inst #3652 = VMREAD32rr
  { 3653,	6,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000104ULL, NULL, NULL, OperandInfo24 },  // Inst #3653 = VMREAD64rm
  { 3654,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000103ULL, NULL, NULL, OperandInfo33 },  // Inst #3654 = VMREAD64rr
  { 3655,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000123ULL, NULL, NULL, 0 },  // Inst #3655 = VMRESUME
  { 3656,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000134ULL, ImplicitList8, NULL, 0 },  // Inst #3656 = VMRUN32
  { 3657,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000134ULL, ImplicitList9, NULL, 0 },  // Inst #3657 = VMRUN64
  { 3658,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000137ULL, ImplicitList8, NULL, 0 },  // Inst #3658 = VMSAVE32
  { 3659,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000137ULL, ImplicitList9, NULL, 0 },  // Inst #3659 = VMSAVE64
  { 3660,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0x4ab3000146ULL, NULL, NULL, OperandInfo231 },  // Inst #3660 = VMULPDYrm
  { 3661,	3,	1,	325,	0,	0|(1<<MCID::Commutable), 0x4ab3000145ULL, NULL, NULL, OperandInfo232 },  // Inst #3661 = VMULPDYrr
  { 3662,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0xab3000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3662 = VMULPDrm
  { 3663,	3,	1,	325,	0,	0|(1<<MCID::Commutable), 0xab3000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3663 = VMULPDrr
  { 3664,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0x4ab2800106ULL, NULL, NULL, OperandInfo231 },  // Inst #3664 = VMULPSYrm
  { 3665,	3,	1,	326,	0,	0|(1<<MCID::Commutable), 0x4ab2800105ULL, NULL, NULL, OperandInfo232 },  // Inst #3665 = VMULPSYrr
  { 3666,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0xab2800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3666 = VMULPSrm
  { 3667,	3,	1,	326,	0,	0|(1<<MCID::Commutable), 0xab2800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3667 = VMULPSrr
  { 3668,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0x8ab2000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #3668 = VMULSDrm
  { 3669,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0x8ab2000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3669 = VMULSDrm_Int
  { 3670,	3,	1,	328,	0,	0|(1<<MCID::Commutable), 0x8ab2000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #3670 = VMULSDrr
  { 3671,	3,	1,	328,	0,	0, 0x8ab2000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3671 = VMULSDrr_Int
  { 3672,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0x8ab2000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #3672 = VMULSSrm
  { 3673,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0x8ab2000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #3673 = VMULSSrm_Int
  { 3674,	3,	1,	329,	0,	0|(1<<MCID::Commutable), 0x8ab2000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #3674 = VMULSSrr
  { 3675,	3,	1,	329,	0,	0, 0x8ab2000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #3675 = VMULSSrr_Int
  { 3676,	6,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000106ULL, NULL, NULL, OperandInfo12 },  // Inst #3676 = VMWRITE32rm
  { 3677,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000105ULL, NULL, NULL, OperandInfo32 },  // Inst #3677 = VMWRITE32rr
  { 3678,	6,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000106ULL, NULL, NULL, OperandInfo13 },  // Inst #3678 = VMWRITE64rm
  { 3679,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000105ULL, NULL, NULL, OperandInfo33 },  // Inst #3679 = VMWRITE64rr
  { 3680,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000124ULL, NULL, NULL, 0 },  // Inst #3680 = VMXOFF
  { 3681,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000c1eULL, NULL, NULL, OperandInfo40 },  // Inst #3681 = VMXON
  { 3682,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aad000146ULL, NULL, NULL, OperandInfo231 },  // Inst #3682 = VORPDYrm
  { 3683,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aad000145ULL, NULL, NULL, OperandInfo232 },  // Inst #3683 = VORPDYrr
  { 3684,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaad000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3684 = VORPDrm
  { 3685,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaad000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3685 = VORPDrr
  { 3686,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aac800106ULL, NULL, NULL, OperandInfo231 },  // Inst #3686 = VORPSYrm
  { 3687,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aac800105ULL, NULL, NULL, OperandInfo232 },  // Inst #3687 = VORPSYrr
  { 3688,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaac800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3688 = VORPSrm
  { 3689,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaac800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3689 = VORPSrr
  { 3690,	6,	1,	337,	0,	0|(1<<MCID::MayLoad), 0x239800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3690 = VPABSBrm128
  { 3691,	6,	1,	470,	0,	0|(1<<MCID::MayLoad), 0x4239800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #3691 = VPABSBrm256
  { 3692,	2,	1,	338,	0,	0, 0x239800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3692 = VPABSBrr128
  { 3693,	2,	1,	350,	0,	0, 0x4239800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3693 = VPABSBrr256
  { 3694,	6,	1,	337,	0,	0|(1<<MCID::MayLoad), 0x23d800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3694 = VPABSDrm128
  { 3695,	6,	1,	470,	0,	0|(1<<MCID::MayLoad), 0x423d800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #3695 = VPABSDrm256
  { 3696,	2,	1,	338,	0,	0, 0x23d800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3696 = VPABSDrr128
  { 3697,	2,	1,	350,	0,	0, 0x423d800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3697 = VPABSDrr256
  { 3698,	6,	1,	337,	0,	0|(1<<MCID::MayLoad), 0x23b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3698 = VPABSWrm128
  { 3699,	6,	1,	470,	0,	0|(1<<MCID::MayLoad), 0x423b800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #3699 = VPABSWrm256
  { 3700,	2,	1,	338,	0,	0, 0x23b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3700 = VPABSWrr128
  { 3701,	2,	1,	350,	0,	0, 0x423b800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3701 = VPABSWrr256
  { 3702,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4ad7800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3702 = VPACKSSDWYrm
  { 3703,	3,	1,	340,	0,	0, 0x4ad7800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3703 = VPACKSSDWYrr
  { 3704,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xad7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3704 = VPACKSSDWrm
  { 3705,	3,	1,	340,	0,	0, 0xad7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3705 = VPACKSSDWrr
  { 3706,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4ac7800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3706 = VPACKSSWBYrm
  { 3707,	3,	1,	340,	0,	0, 0x4ac7800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3707 = VPACKSSWBYrr
  { 3708,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xac7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3708 = VPACKSSWBrm
  { 3709,	3,	1,	340,	0,	0, 0xac7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3709 = VPACKSSWBrr
  { 3710,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a57800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3710 = VPACKUSDWYrm
  { 3711,	3,	1,	0,	0,	0, 0x4a57800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #3711 = VPACKUSDWYrr
  { 3712,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa57800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3712 = VPACKUSDWrm
  { 3713,	3,	1,	0,	0,	0, 0xa57800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3713 = VPACKUSDWrr
  { 3714,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4acf800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3714 = VPACKUSWBYrm
  { 3715,	3,	1,	340,	0,	0, 0x4acf800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3715 = VPACKUSWBYrr
  { 3716,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xacf800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3716 = VPACKUSWBrm
  { 3717,	3,	1,	340,	0,	0, 0xacf800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3717 = VPACKUSWBrr
  { 3718,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bf9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3718 = VPADDBYrm
  { 3719,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bf9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3719 = VPADDBYrr
  { 3720,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbf9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3720 = VPADDBrm
  { 3721,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbf9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3721 = VPADDBrr
  { 3722,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bfd800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3722 = VPADDDYrm
  { 3723,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bfd800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3723 = VPADDDYrr
  { 3724,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbfd800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3724 = VPADDDrm
  { 3725,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbfd800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3725 = VPADDDrr
  { 3726,	7,	1,	341,	0,	0|(1<<MCID::MayLoad), 0x4ba9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3726 = VPADDQYrm
  { 3727,	3,	1,	342,	0,	0|(1<<MCID::Commutable), 0x4ba9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3727 = VPADDQYrr
  { 3728,	7,	1,	341,	0,	0|(1<<MCID::MayLoad), 0xba9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3728 = VPADDQrm
  { 3729,	3,	1,	342,	0,	0|(1<<MCID::Commutable), 0xba9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3729 = VPADDQrr
  { 3730,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bd9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3730 = VPADDSBYrm
  { 3731,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bd9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3731 = VPADDSBYrr
  { 3732,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbd9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3732 = VPADDSBrm
  { 3733,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbd9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3733 = VPADDSBrr
  { 3734,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bdb800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3734 = VPADDSWYrm
  { 3735,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bdb800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3735 = VPADDSWYrr
  { 3736,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbdb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3736 = VPADDSWrm
  { 3737,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbdb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3737 = VPADDSWrr
  { 3738,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bb9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3738 = VPADDUSBYrm
  { 3739,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bb9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3739 = VPADDUSBYrr
  { 3740,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbb9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3740 = VPADDUSBrm
  { 3741,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbb9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3741 = VPADDUSBrr
  { 3742,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bbb800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3742 = VPADDUSWYrm
  { 3743,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bbb800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3743 = VPADDUSWYrr
  { 3744,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbbb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3744 = VPADDUSWrm
  { 3745,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbbb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3745 = VPADDUSWrr
  { 3746,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bfb800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3746 = VPADDWYrm
  { 3747,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bfb800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3747 = VPADDWYrr
  { 3748,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbfb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3748 = VPADDWrm
  { 3749,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbfb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3749 = VPADDWrr
  { 3750,	8,	1,	343,	0,	0|(1<<MCID::MayLoad), 0xa1f804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3750 = VPALIGNR128rm
  { 3751,	4,	1,	344,	0,	0, 0xa1f804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3751 = VPALIGNR128rr
  { 3752,	8,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4a1f804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #3752 = VPALIGNR256rm
  { 3753,	4,	1,	468,	0,	0, 0x4a1f804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3753 = VPALIGNR256rr
  { 3754,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x4bbf800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3754 = VPANDNYrm
  { 3755,	3,	1,	138,	0,	0, 0x4bbf800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3755 = VPANDNYrr
  { 3756,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xbbf800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3756 = VPANDNrm
  { 3757,	3,	1,	138,	0,	0, 0xbbf800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3757 = VPANDNrr
  { 3758,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x4bb7800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3758 = VPANDYrm
  { 3759,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x4bb7800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3759 = VPANDYrr
  { 3760,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xbb7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3760 = VPANDrm
  { 3761,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xbb7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3761 = VPANDrr
  { 3762,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bc1800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3762 = VPAVGBYrm
  { 3763,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bc1800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3763 = VPAVGBYrr
  { 3764,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbc1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3764 = VPAVGBrm
  { 3765,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbc1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3765 = VPAVGBrr
  { 3766,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bc7800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3766 = VPAVGWYrm
  { 3767,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bc7800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3767 = VPAVGWYrr
  { 3768,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbc7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3768 = VPAVGWrm
  { 3769,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbc7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3769 = VPAVGWrr
  { 3770,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a05804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #3770 = VPBLENDDYrmi
  { 3771,	4,	1,	0,	0,	0, 0x4a05804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3771 = VPBLENDDYrri
  { 3772,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa05804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3772 = VPBLENDDrmi
  { 3773,	4,	1,	0,	0,	0, 0xa05804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3773 = VPBLENDDrri
  { 3774,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4b0ac9800d46ULL, NULL, NULL, OperandInfo240 },  // Inst #3774 = VPBLENDMDZrm
  { 3775,	4,	1,	0,	0,	0, 0x4b0ac9800d45ULL, NULL, NULL, OperandInfo241 },  // Inst #3775 = VPBLENDMDZrr
  { 3776,	8,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6b0ec9800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3776 = VPBLENDMQZrm
  { 3777,	4,	1,	0,	0,	0, 0x6b0ec9800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #3777 = VPBLENDMQZrr
  { 3778,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a99804e46ULL, NULL, NULL, OperandInfo243 },  // Inst #3778 = VPBLENDVBYrm
  { 3779,	4,	1,	0,	0,	0, 0x6a99804e45ULL, NULL, NULL, OperandInfo244 },  // Inst #3779 = VPBLENDVBYrr
  { 3780,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a99804e46ULL, NULL, NULL, OperandInfo245 },  // Inst #3780 = VPBLENDVBrm
  { 3781,	4,	1,	0,	0,	0, 0x2a99804e45ULL, NULL, NULL, OperandInfo246 },  // Inst #3781 = VPBLENDVBrr
  { 3782,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a1d804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #3782 = VPBLENDWYrmi
  { 3783,	4,	1,	0,	0,	0, 0x4a1d804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3783 = VPBLENDWYrri
  { 3784,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa1d804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3784 = VPBLENDWrmi
  { 3785,	4,	1,	0,	0,	0, 0xa1d804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3785 = VPBLENDWrri
  { 3786,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42f1800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #3786 = VPBROADCASTBYrm
  { 3787,	2,	1,	0,	0,	0, 0x42f1800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #3787 = VPBROADCASTBYrr
  { 3788,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2f1800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3788 = VPBROADCASTBrm
  { 3789,	2,	1,	0,	0,	0, 0x2f1800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3789 = VPBROADCASTBrr
  { 3790,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b1800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #3790 = VPBROADCASTDYrm
  { 3791,	2,	1,	0,	0,	0, 0x42b1800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #3791 = VPBROADCASTDYrr
  { 3792,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x24f02b1800d46ULL, NULL, NULL, OperandInfo314 },  // Inst #3792 = VPBROADCASTDZkrm
  { 3793,	3,	1,	0,	0,	0, 0x24f02b1800d45ULL, NULL, NULL, OperandInfo315 },  // Inst #3793 = VPBROADCASTDZkrr
  { 3794,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x24902b1800d46ULL, NULL, NULL, OperandInfo249 },  // Inst #3794 = VPBROADCASTDZrm
  { 3795,	2,	1,	0,	0,	0, 0x24902b1800d45ULL, NULL, NULL, OperandInfo250 },  // Inst #3795 = VPBROADCASTDZrr
  { 3796,	3,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf02f9800d45ULL, NULL, NULL, OperandInfo316 },  // Inst #3796 = VPBROADCASTDrZkrr
  { 3797,	2,	1,	0,	0,	0, 0x902f9800d45ULL, NULL, NULL, OperandInfo317 },  // Inst #3797 = VPBROADCASTDrZrr
  { 3798,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2b1800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3798 = VPBROADCASTDrm
  { 3799,	2,	1,	0,	0,	0, 0x2b1800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3799 = VPBROADCASTDrr
  { 3800,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x90655801203ULL, NULL, NULL, OperandInfo318 },  // Inst #3800 = VPBROADCASTMB2Qrr
  { 3801,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x90275801203ULL, NULL, NULL, OperandInfo319 },  // Inst #3801 = VPBROADCASTMW2Drr
  { 3802,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b3800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #3802 = VPBROADCASTQYrm
  { 3803,	2,	1,	0,	0,	0, 0x42b3800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #3803 = VPBROADCASTQYrr
  { 3804,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26f06b3800d46ULL, NULL, NULL, OperandInfo320 },  // Inst #3804 = VPBROADCASTQZkrm
  { 3805,	3,	1,	0,	0,	0, 0x26f06b3800d45ULL, NULL, NULL, OperandInfo321 },  // Inst #3805 = VPBROADCASTQZkrr
  { 3806,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26906b3800d46ULL, NULL, NULL, OperandInfo249 },  // Inst #3806 = VPBROADCASTQZrm
  { 3807,	2,	1,	0,	0,	0, 0x26906b3800d45ULL, NULL, NULL, OperandInfo250 },  // Inst #3807 = VPBROADCASTQZrr
  { 3808,	3,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf06f9800d45ULL, NULL, NULL, OperandInfo322 },  // Inst #3808 = VPBROADCASTQrZkrr
  { 3809,	2,	1,	0,	0,	0, 0x906f9800d45ULL, NULL, NULL, OperandInfo323 },  // Inst #3809 = VPBROADCASTQrZrr
  { 3810,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2b3800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3810 = VPBROADCASTQrm
  { 3811,	2,	1,	0,	0,	0, 0x2b3800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3811 = VPBROADCASTQrr
  { 3812,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42f3800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #3812 = VPBROADCASTWYrm
  { 3813,	2,	1,	0,	0,	0, 0x42f3800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #3813 = VPBROADCASTWYrr
  { 3814,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2f3800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3814 = VPBROADCASTWrm
  { 3815,	2,	1,	0,	0,	0, 0x2f3800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3815 = VPBROADCASTWrr
  { 3816,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa89804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3816 = VPCLMULQDQrm
  { 3817,	4,	1,	0,	0,	0, 0xa89804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3817 = VPCLMULQDQrr
  { 3818,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b45005406ULL, NULL, NULL, OperandInfo245 },  // Inst #3818 = VPCMOVmr
  { 3819,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10006b45005406ULL, NULL, NULL, OperandInfo243 },  // Inst #3819 = VPCMOVmrY
  { 3820,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x18002f45005406ULL, NULL, NULL, OperandInfo276 },  // Inst #3820 = VPCMOVrm
  { 3821,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x18006f45005406ULL, NULL, NULL, OperandInfo277 },  // Inst #3821 = VPCMOVrmY
  { 3822,	4,	1,	0,	0,	0, 0x10002b45005405ULL, NULL, NULL, OperandInfo246 },  // Inst #3822 = VPCMOVrr
  { 3823,	4,	1,	0,	0,	0, 0x10006b45005405ULL, NULL, NULL, OperandInfo244 },  // Inst #3823 = VPCMOVrrY
  { 3824,	8,	1,	457,	0,	0|(1<<MCID::MayLoad), 0x490a3f804e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3824 = VPCMPDZrmi
  { 3825,	8,	1,	457,	0,	0, 0x490a3f804e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3825 = VPCMPDZrmi_alt
  { 3826,	4,	1,	458,	0,	0, 0x490a3f804e45ULL, NULL, NULL, OperandInfo256 },  // Inst #3826 = VPCMPDZrri
  { 3827,	4,	1,	458,	0,	0, 0x490a3f804e45ULL, NULL, NULL, OperandInfo254 },  // Inst #3827 = VPCMPDZrri_alt
  { 3828,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4ae9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3828 = VPCMPEQBYrm
  { 3829,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4ae9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3829 = VPCMPEQBYrr
  { 3830,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xae9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3830 = VPCMPEQBrm
  { 3831,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xae9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3831 = VPCMPEQBrr
  { 3832,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4aed800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3832 = VPCMPEQDYrm
  { 3833,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4aed800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3833 = VPCMPEQDYrr
  { 3834,	7,	1,	457,	0,	0|(1<<MCID::MayLoad), 0x90aed800146ULL, NULL, NULL, OperandInfo324 },  // Inst #3834 = VPCMPEQDZrm
  { 3835,	3,	1,	458,	0,	0, 0x90aed800145ULL, NULL, NULL, OperandInfo325 },  // Inst #3835 = VPCMPEQDZrr
  { 3836,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xaed800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3836 = VPCMPEQDrm
  { 3837,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xaed800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3837 = VPCMPEQDrr
  { 3838,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a53800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3838 = VPCMPEQQYrm
  { 3839,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a53800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #3839 = VPCMPEQQYrr
  { 3840,	7,	1,	457,	0,	0|(1<<MCID::MayLoad), 0x90e53800d46ULL, NULL, NULL, OperandInfo326 },  // Inst #3840 = VPCMPEQQZrm
  { 3841,	3,	1,	458,	0,	0, 0x90e53800d45ULL, NULL, NULL, OperandInfo327 },  // Inst #3841 = VPCMPEQQZrr
  { 3842,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa53800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3842 = VPCMPEQQrm
  { 3843,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa53800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3843 = VPCMPEQQrr
  { 3844,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4aeb800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3844 = VPCMPEQWYrm
  { 3845,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4aeb800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3845 = VPCMPEQWYrr
  { 3846,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xaeb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3846 = VPCMPEQWrm
  { 3847,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xaeb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3847 = VPCMPEQWrr
  { 3848,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList21, ImplicitList3, OperandInfo212 },  // Inst #3848 = VPCMPESTRIMEM
  { 3849,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList21, ImplicitList3, OperandInfo213 },  // Inst #3849 = VPCMPESTRIREG
  { 3850,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2c3804e46ULL, ImplicitList21, ImplicitList54, OperandInfo51 },  // Inst #3850 = VPCMPESTRIrm
  { 3851,	3,	0,	0,	0,	0, 0x2c3804e45ULL, ImplicitList21, ImplicitList54, OperandInfo52 },  // Inst #3851 = VPCMPESTRIrr
  { 3852,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList21, ImplicitList3, OperandInfo137 },  // Inst #3852 = VPCMPESTRM128MEM
  { 3853,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList21, ImplicitList3, OperandInfo85 },  // Inst #3853 = VPCMPESTRM128REG
  { 3854,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2c1804e46ULL, ImplicitList21, ImplicitList55, OperandInfo51 },  // Inst #3854 = VPCMPESTRM128rm
  { 3855,	3,	0,	0,	0,	0, 0x2c1804e45ULL, ImplicitList21, ImplicitList55, OperandInfo52 },  // Inst #3855 = VPCMPESTRM128rr
  { 3856,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4ac9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3856 = VPCMPGTBYrm
  { 3857,	3,	1,	340,	0,	0, 0x4ac9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3857 = VPCMPGTBYrr
  { 3858,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xac9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3858 = VPCMPGTBrm
  { 3859,	3,	1,	340,	0,	0, 0xac9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3859 = VPCMPGTBrr
  { 3860,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4acd800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3860 = VPCMPGTDYrm
  { 3861,	3,	1,	340,	0,	0, 0x4acd800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3861 = VPCMPGTDYrr
  { 3862,	7,	1,	457,	0,	0|(1<<MCID::MayLoad), 0x90acd800146ULL, NULL, NULL, OperandInfo324 },  // Inst #3862 = VPCMPGTDZrm
  { 3863,	3,	1,	458,	0,	0, 0x90acd800145ULL, NULL, NULL, OperandInfo325 },  // Inst #3863 = VPCMPGTDZrr
  { 3864,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xacd800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3864 = VPCMPGTDrm
  { 3865,	3,	1,	340,	0,	0, 0xacd800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3865 = VPCMPGTDrr
  { 3866,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a6f800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3866 = VPCMPGTQYrm
  { 3867,	3,	1,	0,	0,	0, 0x4a6f800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #3867 = VPCMPGTQYrr
  { 3868,	7,	1,	457,	0,	0|(1<<MCID::MayLoad), 0x90e6f800d46ULL, NULL, NULL, OperandInfo326 },  // Inst #3868 = VPCMPGTQZrm
  { 3869,	3,	1,	458,	0,	0, 0x90e6f800d45ULL, NULL, NULL, OperandInfo327 },  // Inst #3869 = VPCMPGTQZrr
  { 3870,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa6f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3870 = VPCMPGTQrm
  { 3871,	3,	1,	0,	0,	0, 0xa6f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3871 = VPCMPGTQrr
  { 3872,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4acb800146ULL, NULL, NULL, OperandInfo231 },  // Inst #3872 = VPCMPGTWYrm
  { 3873,	3,	1,	340,	0,	0, 0x4acb800145ULL, NULL, NULL, OperandInfo232 },  // Inst #3873 = VPCMPGTWYrr
  { 3874,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xacb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3874 = VPCMPGTWrm
  { 3875,	3,	1,	340,	0,	0, 0xacb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3875 = VPCMPGTWrr
  { 3876,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo212 },  // Inst #3876 = VPCMPISTRIMEM
  { 3877,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo213 },  // Inst #3877 = VPCMPISTRIREG
  { 3878,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2c7804e46ULL, NULL, ImplicitList54, OperandInfo51 },  // Inst #3878 = VPCMPISTRIrm
  { 3879,	3,	0,	0,	0,	0, 0x2c7804e45ULL, NULL, ImplicitList54, OperandInfo52 },  // Inst #3879 = VPCMPISTRIrr
  { 3880,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo137 },  // Inst #3880 = VPCMPISTRM128MEM
  { 3881,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo85 },  // Inst #3881 = VPCMPISTRM128REG
  { 3882,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2c5804e46ULL, NULL, ImplicitList55, OperandInfo51 },  // Inst #3882 = VPCMPISTRM128rm
  { 3883,	3,	0,	0,	0,	0, 0x2c5804e45ULL, NULL, ImplicitList55, OperandInfo52 },  // Inst #3883 = VPCMPISTRM128rr
  { 3884,	8,	1,	457,	0,	0|(1<<MCID::MayLoad), 0x690e3f804e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3884 = VPCMPQZrmi
  { 3885,	8,	1,	457,	0,	0, 0x690e3f804e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3885 = VPCMPQZrmi_alt
  { 3886,	4,	1,	458,	0,	0, 0x690e3f804e45ULL, NULL, NULL, OperandInfo253 },  // Inst #3886 = VPCMPQZrri
  { 3887,	4,	1,	458,	0,	0, 0x690e3f804e45ULL, NULL, NULL, OperandInfo254 },  // Inst #3887 = VPCMPQZrri_alt
  { 3888,	8,	1,	457,	0,	0|(1<<MCID::MayLoad), 0x490a3d804e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3888 = VPCMPUDZrmi
  { 3889,	8,	1,	457,	0,	0, 0x490a3d804e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3889 = VPCMPUDZrmi_alt
  { 3890,	4,	1,	458,	0,	0, 0x490a3d804e45ULL, NULL, NULL, OperandInfo256 },  // Inst #3890 = VPCMPUDZrri
  { 3891,	4,	1,	458,	0,	0, 0x490a3d804e45ULL, NULL, NULL, OperandInfo254 },  // Inst #3891 = VPCMPUDZrri_alt
  { 3892,	8,	1,	457,	0,	0|(1<<MCID::MayLoad), 0x690e3d804e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3892 = VPCMPUQZrmi
  { 3893,	8,	1,	457,	0,	0, 0x690e3d804e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3893 = VPCMPUQZrmi_alt
  { 3894,	4,	1,	458,	0,	0, 0x690e3d804e45ULL, NULL, NULL, OperandInfo253 },  // Inst #3894 = VPCMPUQZrri
  { 3895,	4,	1,	458,	0,	0, 0x690e3d804e45ULL, NULL, NULL, OperandInfo254 },  // Inst #3895 = VPCMPUQZrri_alt
  { 3896,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000b99005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3896 = VPCOMBmi
  { 3897,	4,	1,	0,	0,	0, 0x10000b99005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3897 = VPCOMBri
  { 3898,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000b9d005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3898 = VPCOMDmi
  { 3899,	4,	1,	0,	0,	0, 0x10000b9d005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3899 = VPCOMDri
  { 3900,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000b9f005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3900 = VPCOMQmi
  { 3901,	4,	1,	0,	0,	0, 0x10000b9f005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3901 = VPCOMQri
  { 3902,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000bd9005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3902 = VPCOMUBmi
  { 3903,	4,	1,	0,	0,	0, 0x10000bd9005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3903 = VPCOMUBri
  { 3904,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000bdd005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3904 = VPCOMUDmi
  { 3905,	4,	1,	0,	0,	0, 0x10000bdd005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3905 = VPCOMUDri
  { 3906,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000bdf005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3906 = VPCOMUQmi
  { 3907,	4,	1,	0,	0,	0, 0x10000bdf005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3907 = VPCOMUQri
  { 3908,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000bdb005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3908 = VPCOMUWmi
  { 3909,	4,	1,	0,	0,	0, 0x10000bdb005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3909 = VPCOMUWri
  { 3910,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000b9b005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3910 = VPCOMWmi
  { 3911,	4,	1,	0,	0,	0, 0x10000b9b005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3911 = VPCOMWri
  { 3912,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a0c804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #3912 = VPERM2F128rm
  { 3913,	4,	1,	0,	0,	0, 0x4a0c804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3913 = VPERM2F128rr
  { 3914,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a8d804e46ULL, NULL, NULL, OperandInfo242 },  // Inst #3914 = VPERM2I128rm
  { 3915,	4,	1,	0,	0,	0, 0x4a8d804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3915 = VPERM2I128rr
  { 3916,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a6d800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3916 = VPERMDYrm
  { 3917,	3,	1,	0,	0,	0, 0x4a6d800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #3917 = VPERMDYrr
  { 3918,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x490a6d800d46ULL, NULL, NULL, OperandInfo328 },  // Inst #3918 = VPERMDZrm
  { 3919,	3,	1,	0,	0,	0, 0x490a6d800d45ULL, NULL, NULL, OperandInfo329 },  // Inst #3919 = VPERMDZrr
  { 3920,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x490aed800d46ULL, NULL, NULL, OperandInfo330 },  // Inst #3920 = VPERMI2Drm
  { 3921,	4,	1,	0,	0,	0, 0x490aed800d45ULL, NULL, NULL, OperandInfo331 },  // Inst #3921 = VPERMI2Drr
  { 3922,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x690eef800d46ULL, NULL, NULL, OperandInfo330 },  // Inst #3922 = VPERMI2PDrm
  { 3923,	4,	1,	0,	0,	0, 0x690eef800d45ULL, NULL, NULL, OperandInfo331 },  // Inst #3923 = VPERMI2PDrr
  { 3924,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x490aef800d46ULL, NULL, NULL, OperandInfo330 },  // Inst #3924 = VPERMI2PSrm
  { 3925,	4,	1,	0,	0,	0, 0x490aef800d45ULL, NULL, NULL, OperandInfo331 },  // Inst #3925 = VPERMI2PSrr
  { 3926,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x690eed800d46ULL, NULL, NULL, OperandInfo330 },  // Inst #3926 = VPERMI2Qrm
  { 3927,	4,	1,	0,	0,	0, 0x690eed800d45ULL, NULL, NULL, OperandInfo331 },  // Inst #3927 = VPERMI2Qrr
  { 3928,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a93804e46ULL, NULL, NULL, OperandInfo332 },  // Inst #3928 = VPERMIL2PDmr
  { 3929,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a93804e46ULL, NULL, NULL, OperandInfo333 },  // Inst #3929 = VPERMIL2PDmrY
  { 3930,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002e93804e46ULL, NULL, NULL, OperandInfo334 },  // Inst #3930 = VPERMIL2PDrm
  { 3931,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006e93804e46ULL, NULL, NULL, OperandInfo335 },  // Inst #3931 = VPERMIL2PDrmY
  { 3932,	5,	1,	0,	0,	0, 0x2a93804e45ULL, NULL, NULL, OperandInfo336 },  // Inst #3932 = VPERMIL2PDrr
  { 3933,	5,	1,	0,	0,	0, 0x6a93804e45ULL, NULL, NULL, OperandInfo337 },  // Inst #3933 = VPERMIL2PDrrY
  { 3934,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a91804e46ULL, NULL, NULL, OperandInfo332 },  // Inst #3934 = VPERMIL2PSmr
  { 3935,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a91804e46ULL, NULL, NULL, OperandInfo333 },  // Inst #3935 = VPERMIL2PSmrY
  { 3936,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8002e91804e46ULL, NULL, NULL, OperandInfo334 },  // Inst #3936 = VPERMIL2PSrm
  { 3937,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8006e91804e46ULL, NULL, NULL, OperandInfo335 },  // Inst #3937 = VPERMIL2PSrmY
  { 3938,	5,	1,	0,	0,	0, 0x2a91804e45ULL, NULL, NULL, OperandInfo336 },  // Inst #3938 = VPERMIL2PSrr
  { 3939,	5,	1,	0,	0,	0, 0x6a91804e45ULL, NULL, NULL, OperandInfo337 },  // Inst #3939 = VPERMIL2PSrrY
  { 3940,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x420b004e46ULL, NULL, NULL, OperandInfo338 },  // Inst #3940 = VPERMILPDYmi
  { 3941,	3,	1,	0,	0,	0, 0x420b004e45ULL, NULL, NULL, OperandInfo339 },  // Inst #3941 = VPERMILPDYri
  { 3942,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a1b000d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3942 = VPERMILPDYrm
  { 3943,	3,	1,	0,	0,	0, 0x4a1b000d45ULL, NULL, NULL, OperandInfo232 },  // Inst #3943 = VPERMILPDYrr
  { 3944,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20b004e46ULL, NULL, NULL, OperandInfo51 },  // Inst #3944 = VPERMILPDmi
  { 3945,	3,	1,	0,	0,	0, 0x20b004e45ULL, NULL, NULL, OperandInfo52 },  // Inst #3945 = VPERMILPDri
  { 3946,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa1b000d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3946 = VPERMILPDrm
  { 3947,	3,	1,	0,	0,	0, 0xa1b000d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3947 = VPERMILPDrr
  { 3948,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4208804e46ULL, NULL, NULL, OperandInfo338 },  // Inst #3948 = VPERMILPSYmi
  { 3949,	3,	1,	0,	0,	0, 0x4208804e45ULL, NULL, NULL, OperandInfo339 },  // Inst #3949 = VPERMILPSYri
  { 3950,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a18800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3950 = VPERMILPSYrm
  { 3951,	3,	1,	0,	0,	0, 0x4a18800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #3951 = VPERMILPSYrr
  { 3952,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x208804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #3952 = VPERMILPSmi
  { 3953,	3,	1,	0,	0,	0, 0x208804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #3953 = VPERMILPSri
  { 3954,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa18800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3954 = VPERMILPSrm
  { 3955,	3,	1,	0,	0,	0, 0xa18800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3955 = VPERMILPSrr
  { 3956,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4603004e46ULL, NULL, NULL, OperandInfo338 },  // Inst #3956 = VPERMPDYmi
  { 3957,	3,	1,	0,	0,	0, 0x4603004e45ULL, NULL, NULL, OperandInfo339 },  // Inst #3957 = VPERMPDYri
  { 3958,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x690603004e46ULL, NULL, NULL, OperandInfo340 },  // Inst #3958 = VPERMPDZmi
  { 3959,	3,	1,	0,	0,	0, 0x690603004e45ULL, NULL, NULL, OperandInfo341 },  // Inst #3959 = VPERMPDZri
  { 3960,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x690e2d000d46ULL, NULL, NULL, OperandInfo328 },  // Inst #3960 = VPERMPDZrm
  { 3961,	3,	1,	0,	0,	0, 0x690e2d000d45ULL, NULL, NULL, OperandInfo329 },  // Inst #3961 = VPERMPDZrr
  { 3962,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a2c800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3962 = VPERMPSYrm
  { 3963,	3,	1,	0,	0,	0, 0x4a2c800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #3963 = VPERMPSYrr
  { 3964,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x490a2c800d46ULL, NULL, NULL, OperandInfo328 },  // Inst #3964 = VPERMPSZrm
  { 3965,	3,	1,	0,	0,	0, 0x490a2c800d45ULL, NULL, NULL, OperandInfo329 },  // Inst #3965 = VPERMPSZrr
  { 3966,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4601804e46ULL, NULL, NULL, OperandInfo338 },  // Inst #3966 = VPERMQYmi
  { 3967,	3,	1,	0,	0,	0, 0x4601804e45ULL, NULL, NULL, OperandInfo339 },  // Inst #3967 = VPERMQYri
  { 3968,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x690601804e46ULL, NULL, NULL, OperandInfo340 },  // Inst #3968 = VPERMQZmi
  { 3969,	3,	1,	0,	0,	0, 0x690601804e45ULL, NULL, NULL, OperandInfo341 },  // Inst #3969 = VPERMQZri
  { 3970,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x690e6d800d46ULL, NULL, NULL, OperandInfo328 },  // Inst #3970 = VPERMQZrm
  { 3971,	3,	1,	0,	0,	0, 0x690e6d800d45ULL, NULL, NULL, OperandInfo329 },  // Inst #3971 = VPERMQZrr
  { 3972,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x229804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #3972 = VPEXTRBmr
  { 3973,	3,	1,	0,	0,	0, 0x229804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #3973 = VPEXTRBrr
  { 3974,	3,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x229804e43ULL, NULL, NULL, OperandInfo214 },  // Inst #3974 = VPEXTRBrr64
  { 3975,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x22d804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #3975 = VPEXTRDmr
  { 3976,	3,	1,	0,	0,	0, 0x22d804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #3976 = VPEXTRDrr
  { 3977,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x62d806e44ULL, NULL, NULL, OperandInfo114 },  // Inst #3977 = VPEXTRQmr
  { 3978,	3,	1,	0,	0,	0, 0x62d806e43ULL, NULL, NULL, OperandInfo214 },  // Inst #3978 = VPEXTRQrr
  { 3979,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x22b804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #3979 = VPEXTRWmr
  { 3980,	3,	1,	468,	0,	0, 0x38b804145ULL, NULL, NULL, OperandInfo115 },  // Inst #3980 = VPEXTRWri
  { 3981,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5321800d46ULL, NULL, NULL, OperandInfo294 },  // Inst #3981 = VPGATHERDDYrm
  { 3982,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1321800d46ULL, NULL, NULL, OperandInfo293 },  // Inst #3982 = VPGATHERDDrm
  { 3983,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5721800d46ULL, NULL, NULL, OperandInfo292 },  // Inst #3983 = VPGATHERDQYrm
  { 3984,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1721800d46ULL, NULL, NULL, OperandInfo293 },  // Inst #3984 = VPGATHERDQrm
  { 3985,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5323800d46ULL, NULL, NULL, OperandInfo295 },  // Inst #3985 = VPGATHERQDYrm
  { 3986,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1323800d46ULL, NULL, NULL, OperandInfo293 },  // Inst #3986 = VPGATHERQDrm
  { 3987,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5723800d46ULL, NULL, NULL, OperandInfo294 },  // Inst #3987 = VPGATHERQQYrm
  { 3988,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1723800d46ULL, NULL, NULL, OperandInfo293 },  // Inst #3988 = VPGATHERQQrm
  { 3989,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000385001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3989 = VPHADDBDrm
  { 3990,	2,	1,	0,	0,	0, 0x10000385001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3990 = VPHADDBDrr
  { 3991,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000387001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3991 = VPHADDBQrm
  { 3992,	2,	1,	0,	0,	0, 0x10000387001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3992 = VPHADDBQrr
  { 3993,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000383001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3993 = VPHADDBWrm
  { 3994,	2,	1,	0,	0,	0, 0x10000383001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3994 = VPHADDBWrr
  { 3995,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000397001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3995 = VPHADDDQrm
  { 3996,	2,	1,	0,	0,	0, 0x10000397001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3996 = VPHADDDQrr
  { 3997,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x4a05800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #3997 = VPHADDDYrm
  { 3998,	3,	1,	352,	0,	0, 0x4a05800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #3998 = VPHADDDYrr
  { 3999,	7,	1,	347,	0,	0|(1<<MCID::MayLoad), 0xa05800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3999 = VPHADDDrm
  { 4000,	3,	1,	348,	0,	0, 0xa05800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4000 = VPHADDDrr
  { 4001,	7,	1,	349,	0,	0|(1<<MCID::MayLoad), 0xa07800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4001 = VPHADDSWrm128
  { 4002,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a07800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4002 = VPHADDSWrm256
  { 4003,	3,	1,	350,	0,	0, 0xa07800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4003 = VPHADDSWrr128
  { 4004,	3,	1,	0,	0,	0, 0x4a07800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4004 = VPHADDSWrr256
  { 4005,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003a5001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4005 = VPHADDUBDrm
  { 4006,	2,	1,	0,	0,	0, 0x100003a5001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4006 = VPHADDUBDrr
  { 4007,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003a7001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4007 = VPHADDUBQrm
  { 4008,	2,	1,	0,	0,	0, 0x100003a7001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4008 = VPHADDUBQrr
  { 4009,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003a3001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4009 = VPHADDUBWrm
  { 4010,	2,	1,	0,	0,	0, 0x100003a3001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4010 = VPHADDUBWrr
  { 4011,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003b7001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4011 = VPHADDUDQrm
  { 4012,	2,	1,	0,	0,	0, 0x100003b7001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4012 = VPHADDUDQrr
  { 4013,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003ad001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4013 = VPHADDUWDrm
  { 4014,	2,	1,	0,	0,	0, 0x100003ad001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4014 = VPHADDUWDrr
  { 4015,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003af001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4015 = VPHADDUWQrm
  { 4016,	2,	1,	0,	0,	0, 0x100003af001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4016 = VPHADDUWQrr
  { 4017,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1000038d001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4017 = VPHADDWDrm
  { 4018,	2,	1,	0,	0,	0, 0x1000038d001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4018 = VPHADDWDrr
  { 4019,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1000038f001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4019 = VPHADDWQrm
  { 4020,	2,	1,	0,	0,	0, 0x1000038f001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4020 = VPHADDWQrr
  { 4021,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x4a03800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4021 = VPHADDWYrm
  { 4022,	3,	1,	352,	0,	0, 0x4a03800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4022 = VPHADDWYrr
  { 4023,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0xa03800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4023 = VPHADDWrm
  { 4024,	3,	1,	352,	0,	0, 0xa03800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4024 = VPHADDWrr
  { 4025,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x283800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4025 = VPHMINPOSUWrm128
  { 4026,	2,	1,	0,	0,	0, 0x283800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4026 = VPHMINPOSUWrr128
  { 4027,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003c3001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4027 = VPHSUBBWrm
  { 4028,	2,	1,	0,	0,	0, 0x100003c3001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4028 = VPHSUBBWrr
  { 4029,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003c7001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4029 = VPHSUBDQrm
  { 4030,	2,	1,	0,	0,	0, 0x100003c7001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4030 = VPHSUBDQrr
  { 4031,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x4a0d800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4031 = VPHSUBDYrm
  { 4032,	3,	1,	352,	0,	0, 0x4a0d800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4032 = VPHSUBDYrr
  { 4033,	7,	1,	347,	0,	0|(1<<MCID::MayLoad), 0xa0d800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4033 = VPHSUBDrm
  { 4034,	3,	1,	348,	0,	0, 0xa0d800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4034 = VPHSUBDrr
  { 4035,	7,	1,	349,	0,	0|(1<<MCID::MayLoad), 0xa0f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4035 = VPHSUBSWrm128
  { 4036,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a0f800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4036 = VPHSUBSWrm256
  { 4037,	3,	1,	350,	0,	0, 0xa0f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4037 = VPHSUBSWrr128
  { 4038,	3,	1,	0,	0,	0, 0x4a0f800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4038 = VPHSUBSWrr256
  { 4039,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x100003c5001506ULL, NULL, NULL, OperandInfo49 },  // Inst #4039 = VPHSUBWDrm
  { 4040,	2,	1,	0,	0,	0, 0x100003c5001505ULL, NULL, NULL, OperandInfo50 },  // Inst #4040 = VPHSUBWDrr
  { 4041,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x4a0b800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4041 = VPHSUBWYrm
  { 4042,	3,	1,	352,	0,	0, 0x4a0b800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4042 = VPHSUBWYrr
  { 4043,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0xa0b800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4043 = VPHSUBWrm
  { 4044,	3,	1,	352,	0,	0, 0xa0b800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4044 = VPHSUBWrr
  { 4045,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa41804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #4045 = VPINSRBrm
  { 4046,	4,	1,	0,	0,	0, 0xa41804e45ULL, NULL, NULL, OperandInfo342 },  // Inst #4046 = VPINSRBrr
  { 4047,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa45804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #4047 = VPINSRDrm
  { 4048,	4,	1,	0,	0,	0, 0xa45804e45ULL, NULL, NULL, OperandInfo342 },  // Inst #4048 = VPINSRDrr
  { 4049,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xe45804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #4049 = VPINSRQrm
  { 4050,	4,	1,	0,	0,	0, 0xe45804e45ULL, NULL, NULL, OperandInfo343 },  // Inst #4050 = VPINSRQrr
  { 4051,	8,	1,	353,	0,	0|(1<<MCID::MayLoad), 0xb89804146ULL, NULL, NULL, OperandInfo137 },  // Inst #4051 = VPINSRWrmi
  { 4052,	4,	1,	468,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb89804145ULL, NULL, NULL, OperandInfo343 },  // Inst #4052 = VPINSRWrr64i
  { 4053,	4,	1,	354,	0,	0, 0xb89804145ULL, NULL, NULL, OperandInfo342 },  // Inst #4053 = VPINSRWrri
  { 4054,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b3d005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4054 = VPMACSDDrm
  { 4055,	4,	1,	0,	0,	0, 0x10002b3d005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4055 = VPMACSDDrr
  { 4056,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b3f005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4056 = VPMACSDQHrm
  { 4057,	4,	1,	0,	0,	0, 0x10002b3f005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4057 = VPMACSDQHrr
  { 4058,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b2f005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4058 = VPMACSDQLrm
  { 4059,	4,	1,	0,	0,	0, 0x10002b2f005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4059 = VPMACSDQLrr
  { 4060,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b1d005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4060 = VPMACSSDDrm
  { 4061,	4,	1,	0,	0,	0, 0x10002b1d005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4061 = VPMACSSDDrr
  { 4062,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b1f005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4062 = VPMACSSDQHrm
  { 4063,	4,	1,	0,	0,	0, 0x10002b1f005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4063 = VPMACSSDQHrr
  { 4064,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b0f005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4064 = VPMACSSDQLrm
  { 4065,	4,	1,	0,	0,	0, 0x10002b0f005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4065 = VPMACSSDQLrr
  { 4066,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b0d005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4066 = VPMACSSWDrm
  { 4067,	4,	1,	0,	0,	0, 0x10002b0d005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4067 = VPMACSSWDrr
  { 4068,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b0b005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4068 = VPMACSSWWrm
  { 4069,	4,	1,	0,	0,	0, 0x10002b0b005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4069 = VPMACSSWWrr
  { 4070,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b2d005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4070 = VPMACSWDrm
  { 4071,	4,	1,	0,	0,	0, 0x10002b2d005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4071 = VPMACSWDrr
  { 4072,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b2b005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4072 = VPMACSWWrm
  { 4073,	4,	1,	0,	0,	0, 0x10002b2b005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4073 = VPMACSWWrr
  { 4074,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b4d005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4074 = VPMADCSSWDrm
  { 4075,	4,	1,	0,	0,	0, 0x10002b4d005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4075 = VPMADCSSWDrr
  { 4076,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b6d005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4076 = VPMADCSWDrm
  { 4077,	4,	1,	0,	0,	0, 0x10002b6d005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4077 = VPMADCSWDrr
  { 4078,	7,	1,	355,	0,	0|(1<<MCID::MayLoad), 0xa09800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4078 = VPMADDUBSWrm128
  { 4079,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a09800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4079 = VPMADDUBSWrm256
  { 4080,	3,	1,	356,	0,	0, 0xa09800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4080 = VPMADDUBSWrr128
  { 4081,	3,	1,	0,	0,	0, 0x4a09800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4081 = VPMADDUBSWrr256
  { 4082,	7,	1,	357,	0,	0|(1<<MCID::MayLoad), 0x4beb800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4082 = VPMADDWDYrm
  { 4083,	3,	1,	358,	0,	0|(1<<MCID::Commutable), 0x4beb800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4083 = VPMADDWDYrr
  { 4084,	7,	1,	357,	0,	0|(1<<MCID::MayLoad), 0xbeb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4084 = VPMADDWDrm
  { 4085,	3,	1,	358,	0,	0|(1<<MCID::Commutable), 0xbeb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4085 = VPMADDWDrr
  { 4086,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4b1d800d44ULL, NULL, NULL, OperandInfo301 },  // Inst #4086 = VPMASKMOVDYmr
  { 4087,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b19800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4087 = VPMASKMOVDYrm
  { 4088,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xb1d800d44ULL, NULL, NULL, OperandInfo302 },  // Inst #4088 = VPMASKMOVDmr
  { 4089,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb19800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4089 = VPMASKMOVDrm
  { 4090,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4f1d800d44ULL, NULL, NULL, OperandInfo301 },  // Inst #4090 = VPMASKMOVQYmr
  { 4091,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f19800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4091 = VPMASKMOVQYrm
  { 4092,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xf1d800d44ULL, NULL, NULL, OperandInfo302 },  // Inst #4092 = VPMASKMOVQmr
  { 4093,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf19800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4093 = VPMASKMOVQrm
  { 4094,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a79800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4094 = VPMAXSBYrm
  { 4095,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a79800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4095 = VPMAXSBYrr
  { 4096,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa79800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4096 = VPMAXSBrm
  { 4097,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa79800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4097 = VPMAXSBrr
  { 4098,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a7b800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4098 = VPMAXSDYrm
  { 4099,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a7b800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4099 = VPMAXSDYrr
  { 4100,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa7b800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4100 = VPMAXSDrm
  { 4101,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa7b800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4101 = VPMAXSDrr
  { 4102,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bdd800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4102 = VPMAXSWYrm
  { 4103,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bdd800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4103 = VPMAXSWYrr
  { 4104,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbdd800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4104 = VPMAXSWrm
  { 4105,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbdd800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4105 = VPMAXSWrr
  { 4106,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bbd800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4106 = VPMAXUBYrm
  { 4107,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bbd800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4107 = VPMAXUBYrr
  { 4108,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbbd800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4108 = VPMAXUBrm
  { 4109,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbbd800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4109 = VPMAXUBrr
  { 4110,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a7f800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4110 = VPMAXUDYrm
  { 4111,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a7f800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4111 = VPMAXUDYrr
  { 4112,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa7f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4112 = VPMAXUDrm
  { 4113,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa7f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4113 = VPMAXUDrr
  { 4114,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a7d800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4114 = VPMAXUWYrm
  { 4115,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a7d800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4115 = VPMAXUWYrr
  { 4116,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa7d800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4116 = VPMAXUWrm
  { 4117,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa7d800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4117 = VPMAXUWrr
  { 4118,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a71800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4118 = VPMINSBYrm
  { 4119,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a71800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4119 = VPMINSBYrr
  { 4120,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa71800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4120 = VPMINSBrm
  { 4121,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa71800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4121 = VPMINSBrr
  { 4122,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a73800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4122 = VPMINSDYrm
  { 4123,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a73800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4123 = VPMINSDYrr
  { 4124,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa73800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4124 = VPMINSDrm
  { 4125,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa73800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4125 = VPMINSDrr
  { 4126,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bd5800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4126 = VPMINSWYrm
  { 4127,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bd5800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4127 = VPMINSWYrr
  { 4128,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbd5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4128 = VPMINSWrm
  { 4129,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbd5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4129 = VPMINSWrr
  { 4130,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bb5800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4130 = VPMINUBYrm
  { 4131,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bb5800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4131 = VPMINUBYrr
  { 4132,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbb5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4132 = VPMINUBrm
  { 4133,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbb5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4133 = VPMINUBrr
  { 4134,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a77800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4134 = VPMINUDYrm
  { 4135,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a77800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4135 = VPMINUDYrr
  { 4136,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa77800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4136 = VPMINUDrm
  { 4137,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa77800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4137 = VPMINUDrr
  { 4138,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a75800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4138 = VPMINUWYrm
  { 4139,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a75800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4139 = VPMINUWYrr
  { 4140,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa75800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4140 = VPMINUWrm
  { 4141,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa75800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4141 = VPMINUWrr
  { 4142,	2,	1,	22,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x43af800145ULL, NULL, NULL, OperandInfo310 },  // Inst #4142 = VPMOVMSKBYr64r
  { 4143,	2,	1,	22,	0,	0, 0x43af800145ULL, NULL, NULL, OperandInfo311 },  // Inst #4143 = VPMOVMSKBYrr
  { 4144,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3af800145ULL, NULL, NULL, OperandInfo96 },  // Inst #4144 = VPMOVMSKBr64r
  { 4145,	2,	1,	298,	0,	0, 0x3af800145ULL, NULL, NULL, OperandInfo97 },  // Inst #4145 = VPMOVMSKBrr
  { 4146,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4243800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4146 = VPMOVSXBDYrm
  { 4147,	2,	1,	0,	0,	0, 0x4243800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4147 = VPMOVSXBDYrr
  { 4148,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x243800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4148 = VPMOVSXBDrm
  { 4149,	2,	1,	0,	0,	0, 0x243800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4149 = VPMOVSXBDrr
  { 4150,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4245800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4150 = VPMOVSXBQYrm
  { 4151,	2,	1,	0,	0,	0, 0x4245800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4151 = VPMOVSXBQYrr
  { 4152,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x245800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4152 = VPMOVSXBQrm
  { 4153,	2,	1,	0,	0,	0, 0x245800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4153 = VPMOVSXBQrr
  { 4154,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4241800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4154 = VPMOVSXBWYrm
  { 4155,	2,	1,	0,	0,	0, 0x4241800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4155 = VPMOVSXBWYrr
  { 4156,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x241800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4156 = VPMOVSXBWrm
  { 4157,	2,	1,	0,	0,	0, 0x241800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4157 = VPMOVSXBWrr
  { 4158,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x424b800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4158 = VPMOVSXDQYrm
  { 4159,	2,	1,	0,	0,	0, 0x424b800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4159 = VPMOVSXDQYrr
  { 4160,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x24b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4160 = VPMOVSXDQrm
  { 4161,	2,	1,	0,	0,	0, 0x24b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4161 = VPMOVSXDQrr
  { 4162,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4247800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4162 = VPMOVSXWDYrm
  { 4163,	2,	1,	0,	0,	0, 0x4247800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4163 = VPMOVSXWDYrr
  { 4164,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x247800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4164 = VPMOVSXWDrm
  { 4165,	2,	1,	0,	0,	0, 0x247800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4165 = VPMOVSXWDrr
  { 4166,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4249800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4166 = VPMOVSXWQYrm
  { 4167,	2,	1,	0,	0,	0, 0x4249800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4167 = VPMOVSXWQYrr
  { 4168,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x249800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4168 = VPMOVSXWQrm
  { 4169,	2,	1,	0,	0,	0, 0x249800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4169 = VPMOVSXWQrr
  { 4170,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4263800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4170 = VPMOVZXBDYrm
  { 4171,	2,	1,	0,	0,	0, 0x4263800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4171 = VPMOVZXBDYrr
  { 4172,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x263800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4172 = VPMOVZXBDrm
  { 4173,	2,	1,	0,	0,	0, 0x263800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4173 = VPMOVZXBDrr
  { 4174,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4265800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4174 = VPMOVZXBQYrm
  { 4175,	2,	1,	0,	0,	0, 0x4265800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4175 = VPMOVZXBQYrr
  { 4176,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x265800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4176 = VPMOVZXBQrm
  { 4177,	2,	1,	0,	0,	0, 0x265800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4177 = VPMOVZXBQrr
  { 4178,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4261800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4178 = VPMOVZXBWYrm
  { 4179,	2,	1,	0,	0,	0, 0x4261800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4179 = VPMOVZXBWYrr
  { 4180,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x261800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4180 = VPMOVZXBWrm
  { 4181,	2,	1,	0,	0,	0, 0x261800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4181 = VPMOVZXBWrr
  { 4182,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x426b800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4182 = VPMOVZXDQYrm
  { 4183,	2,	1,	0,	0,	0, 0x426b800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4183 = VPMOVZXDQYrr
  { 4184,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4184 = VPMOVZXDQrm
  { 4185,	2,	1,	0,	0,	0, 0x26b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4185 = VPMOVZXDQrr
  { 4186,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4267800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4186 = VPMOVZXWDYrm
  { 4187,	2,	1,	0,	0,	0, 0x4267800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4187 = VPMOVZXWDYrr
  { 4188,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x267800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4188 = VPMOVZXWDrm
  { 4189,	2,	1,	0,	0,	0, 0x267800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4189 = VPMOVZXWDrr
  { 4190,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4269800d46ULL, NULL, NULL, OperandInfo247 },  // Inst #4190 = VPMOVZXWQYrm
  { 4191,	2,	1,	0,	0,	0, 0x4269800d45ULL, NULL, NULL, OperandInfo248 },  // Inst #4191 = VPMOVZXWQYrr
  { 4192,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x269800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4192 = VPMOVZXWQrm
  { 4193,	2,	1,	0,	0,	0, 0x269800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4193 = VPMOVZXWQrr
  { 4194,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a51800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4194 = VPMULDQYrm
  { 4195,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a51800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4195 = VPMULDQYrr
  { 4196,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa51800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4196 = VPMULDQrm
  { 4197,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa51800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4197 = VPMULDQrr
  { 4198,	7,	1,	355,	0,	0|(1<<MCID::MayLoad), 0xa17800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4198 = VPMULHRSWrm128
  { 4199,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a17800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4199 = VPMULHRSWrm256
  { 4200,	3,	1,	356,	0,	0|(1<<MCID::Commutable), 0xa17800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4200 = VPMULHRSWrr128
  { 4201,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a17800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4201 = VPMULHRSWrr256
  { 4202,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0x4bc9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4202 = VPMULHUWYrm
  { 4203,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0x4bc9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4203 = VPMULHUWYrr
  { 4204,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0xbc9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4204 = VPMULHUWrm
  { 4205,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0xbc9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4205 = VPMULHUWrr
  { 4206,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0x4bcb800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4206 = VPMULHWYrm
  { 4207,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0x4bcb800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4207 = VPMULHWYrr
  { 4208,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0xbcb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4208 = VPMULHWrm
  { 4209,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0xbcb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4209 = VPMULHWrr
  { 4210,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a81800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4210 = VPMULLDYrm
  { 4211,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a81800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4211 = VPMULLDYrr
  { 4212,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa81800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4212 = VPMULLDrm
  { 4213,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa81800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4213 = VPMULLDrr
  { 4214,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0x4bab800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4214 = VPMULLWYrm
  { 4215,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0x4bab800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4215 = VPMULLWYrr
  { 4216,	7,	1,	359,	0,	0|(1<<MCID::MayLoad), 0xbab800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4216 = VPMULLWrm
  { 4217,	3,	1,	360,	0,	0|(1<<MCID::Commutable), 0xbab800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4217 = VPMULLWrr
  { 4218,	7,	1,	355,	0,	0|(1<<MCID::MayLoad), 0x4be9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4218 = VPMULUDQYrm
  { 4219,	3,	1,	356,	0,	0|(1<<MCID::Commutable), 0x4be9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4219 = VPMULUDQYrr
  { 4220,	7,	1,	355,	0,	0|(1<<MCID::MayLoad), 0xbe9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4220 = VPMULUDQrm
  { 4221,	3,	1,	356,	0,	0|(1<<MCID::Commutable), 0xbe9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4221 = VPMULUDQrr
  { 4222,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x4bd7800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4222 = VPORYrm
  { 4223,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x4bd7800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4223 = VPORYrr
  { 4224,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xbd7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4224 = VPORrm
  { 4225,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xbd7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4225 = VPORrr
  { 4226,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10002b47005406ULL, NULL, NULL, OperandInfo245 },  // Inst #4226 = VPPERMmr
  { 4227,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x18002f47005406ULL, NULL, NULL, OperandInfo276 },  // Inst #4227 = VPPERMrm
  { 4228,	4,	1,	0,	0,	0, 0x10002b47005405ULL, NULL, NULL, OperandInfo246 },  // Inst #4228 = VPPERMrr
  { 4229,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000381005406ULL, NULL, NULL, OperandInfo51 },  // Inst #4229 = VPROTBmi
  { 4230,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001321001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4230 = VPROTBmr
  { 4231,	3,	1,	0,	0,	0, 0x10000381005405ULL, NULL, NULL, OperandInfo52 },  // Inst #4231 = VPROTBri
  { 4232,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f21001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4232 = VPROTBrm
  { 4233,	3,	1,	0,	0,	0, 0x10001321001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4233 = VPROTBrr
  { 4234,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000385005406ULL, NULL, NULL, OperandInfo51 },  // Inst #4234 = VPROTDmi
  { 4235,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001325001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4235 = VPROTDmr
  { 4236,	3,	1,	0,	0,	0, 0x10000385005405ULL, NULL, NULL, OperandInfo52 },  // Inst #4236 = VPROTDri
  { 4237,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f25001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4237 = VPROTDrm
  { 4238,	3,	1,	0,	0,	0, 0x10001325001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4238 = VPROTDrr
  { 4239,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000387005406ULL, NULL, NULL, OperandInfo51 },  // Inst #4239 = VPROTQmi
  { 4240,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001327001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4240 = VPROTQmr
  { 4241,	3,	1,	0,	0,	0, 0x10000387005405ULL, NULL, NULL, OperandInfo52 },  // Inst #4241 = VPROTQri
  { 4242,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f27001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4242 = VPROTQrm
  { 4243,	3,	1,	0,	0,	0, 0x10001327001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4243 = VPROTQrr
  { 4244,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000383005406ULL, NULL, NULL, OperandInfo51 },  // Inst #4244 = VPROTWmi
  { 4245,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001323001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4245 = VPROTWmr
  { 4246,	3,	1,	0,	0,	0, 0x10000383005405ULL, NULL, NULL, OperandInfo52 },  // Inst #4246 = VPROTWri
  { 4247,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f23001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4247 = VPROTWrm
  { 4248,	3,	1,	0,	0,	0, 0x10001323001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4248 = VPROTWrr
  { 4249,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bed800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4249 = VPSADBWYrm
  { 4250,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0x4bed800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4250 = VPSADBWYrr
  { 4251,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbed800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4251 = VPSADBWrm
  { 4252,	3,	1,	340,	0,	0|(1<<MCID::Commutable), 0xbed800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4252 = VPSADBWrr
  { 4253,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001331001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4253 = VPSHABmr
  { 4254,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f31001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4254 = VPSHABrm
  { 4255,	3,	1,	0,	0,	0, 0x10001331001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4255 = VPSHABrr
  { 4256,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001335001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4256 = VPSHADmr
  { 4257,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f35001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4257 = VPSHADrm
  { 4258,	3,	1,	0,	0,	0, 0x10001335001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4258 = VPSHADrr
  { 4259,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001337001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4259 = VPSHAQmr
  { 4260,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f37001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4260 = VPSHAQrm
  { 4261,	3,	1,	0,	0,	0, 0x10001337001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4261 = VPSHAQrr
  { 4262,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001333001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4262 = VPSHAWmr
  { 4263,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f33001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4263 = VPSHAWrm
  { 4264,	3,	1,	0,	0,	0, 0x10001333001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4264 = VPSHAWrr
  { 4265,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10001329001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4265 = VPSHLBmr
  { 4266,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f29001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4266 = VPSHLBrm
  { 4267,	3,	1,	0,	0,	0, 0x10001329001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4267 = VPSHLBrr
  { 4268,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1000132d001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4268 = VPSHLDmr
  { 4269,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f2d001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4269 = VPSHLDrm
  { 4270,	3,	1,	0,	0,	0, 0x1000132d001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4270 = VPSHLDrr
  { 4271,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1000132f001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4271 = VPSHLQmr
  { 4272,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f2f001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4272 = VPSHLQrm
  { 4273,	3,	1,	0,	0,	0, 0x1000132f001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4273 = VPSHLQrr
  { 4274,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1000132b001506ULL, NULL, NULL, OperandInfo344 },  // Inst #4274 = VPSHLWmr
  { 4275,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10000f2b001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4275 = VPSHLWrm
  { 4276,	3,	1,	0,	0,	0, 0x1000132b001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4276 = VPSHLWrr
  { 4277,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x4a01800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4277 = VPSHUFBYrm
  { 4278,	3,	1,	352,	0,	0, 0x4a01800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4278 = VPSHUFBYrr
  { 4279,	7,	1,	369,	0,	0|(1<<MCID::MayLoad), 0xa01800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4279 = VPSHUFBrm
  { 4280,	3,	1,	370,	0,	0, 0xa01800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4280 = VPSHUFBrr
  { 4281,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0x42e1804146ULL, NULL, NULL, OperandInfo338 },  // Inst #4281 = VPSHUFDYmi
  { 4282,	3,	1,	372,	0,	0, 0x42e1804145ULL, NULL, NULL, OperandInfo339 },  // Inst #4282 = VPSHUFDYri
  { 4283,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0x2e1804146ULL, NULL, NULL, OperandInfo51 },  // Inst #4283 = VPSHUFDmi
  { 4284,	3,	1,	372,	0,	0, 0x2e1804145ULL, NULL, NULL, OperandInfo52 },  // Inst #4284 = VPSHUFDri
  { 4285,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0x42e1804c06ULL, NULL, NULL, OperandInfo338 },  // Inst #4285 = VPSHUFHWYmi
  { 4286,	3,	1,	372,	0,	0, 0x42e1804c05ULL, NULL, NULL, OperandInfo339 },  // Inst #4286 = VPSHUFHWYri
  { 4287,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0x2e1804c06ULL, NULL, NULL, OperandInfo51 },  // Inst #4287 = VPSHUFHWmi
  { 4288,	3,	1,	372,	0,	0, 0x2e1804c05ULL, NULL, NULL, OperandInfo52 },  // Inst #4288 = VPSHUFHWri
  { 4289,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0x42e1804b06ULL, NULL, NULL, OperandInfo338 },  // Inst #4289 = VPSHUFLWYmi
  { 4290,	3,	1,	372,	0,	0, 0x42e1804b05ULL, NULL, NULL, OperandInfo339 },  // Inst #4290 = VPSHUFLWYri
  { 4291,	7,	1,	371,	0,	0|(1<<MCID::MayLoad), 0x2e1804b06ULL, NULL, NULL, OperandInfo51 },  // Inst #4291 = VPSHUFLWmi
  { 4292,	3,	1,	372,	0,	0, 0x2e1804b05ULL, NULL, NULL, OperandInfo52 },  // Inst #4292 = VPSHUFLWri
  { 4293,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x4a11800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4293 = VPSIGNBYrm
  { 4294,	3,	1,	352,	0,	0, 0x4a11800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4294 = VPSIGNBYrr
  { 4295,	7,	1,	373,	0,	0|(1<<MCID::MayLoad), 0xa11800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4295 = VPSIGNBrm
  { 4296,	3,	1,	374,	0,	0, 0xa11800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4296 = VPSIGNBrr
  { 4297,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x4a15800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4297 = VPSIGNDYrm
  { 4298,	3,	1,	352,	0,	0, 0x4a15800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4298 = VPSIGNDYrr
  { 4299,	7,	1,	373,	0,	0|(1<<MCID::MayLoad), 0xa15800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4299 = VPSIGNDrm
  { 4300,	3,	1,	374,	0,	0, 0xa15800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4300 = VPSIGNDrr
  { 4301,	7,	1,	351,	0,	0|(1<<MCID::MayLoad), 0x4a13800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4301 = VPSIGNWYrm
  { 4302,	3,	1,	352,	0,	0, 0x4a13800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4302 = VPSIGNWYrr
  { 4303,	7,	1,	373,	0,	0|(1<<MCID::MayLoad), 0xa13800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4303 = VPSIGNWrm
  { 4304,	3,	1,	374,	0,	0, 0xa13800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4304 = VPSIGNWrr
  { 4305,	3,	1,	375,	0,	0, 0x4ae7804157ULL, NULL, NULL, OperandInfo339 },  // Inst #4305 = VPSLLDQYri
  { 4306,	3,	1,	375,	0,	0, 0xae7804157ULL, NULL, NULL, OperandInfo52 },  // Inst #4306 = VPSLLDQri
  { 4307,	3,	1,	376,	0,	0, 0x4ae5804156ULL, NULL, NULL, OperandInfo339 },  // Inst #4307 = VPSLLDYri
  { 4308,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x4be5800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4308 = VPSLLDYrm
  { 4309,	3,	1,	378,	0,	0, 0x4be5800145ULL, NULL, NULL, OperandInfo345 },  // Inst #4309 = VPSLLDYrr
  { 4310,	3,	1,	376,	0,	0, 0xae5804156ULL, NULL, NULL, OperandInfo52 },  // Inst #4310 = VPSLLDri
  { 4311,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0xbe5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4311 = VPSLLDrm
  { 4312,	3,	1,	378,	0,	0, 0xbe5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4312 = VPSLLDrr
  { 4313,	3,	1,	376,	0,	0, 0x4ae7804156ULL, NULL, NULL, OperandInfo339 },  // Inst #4313 = VPSLLQYri
  { 4314,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x4be7800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4314 = VPSLLQYrm
  { 4315,	3,	1,	378,	0,	0, 0x4be7800145ULL, NULL, NULL, OperandInfo345 },  // Inst #4315 = VPSLLQYrr
  { 4316,	3,	1,	376,	0,	0, 0xae7804156ULL, NULL, NULL, OperandInfo52 },  // Inst #4316 = VPSLLQri
  { 4317,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0xbe7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4317 = VPSLLQrm
  { 4318,	3,	1,	378,	0,	0, 0xbe7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4318 = VPSLLQrr
  { 4319,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a8f800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4319 = VPSLLVDYrm
  { 4320,	3,	1,	0,	0,	0, 0x4a8f800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4320 = VPSLLVDYrr
  { 4321,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa8f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4321 = VPSLLVDrm
  { 4322,	3,	1,	0,	0,	0, 0xa8f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4322 = VPSLLVDrr
  { 4323,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4e8f800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4323 = VPSLLVQYrm
  { 4324,	3,	1,	0,	0,	0, 0x4e8f800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4324 = VPSLLVQYrr
  { 4325,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xe8f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4325 = VPSLLVQrm
  { 4326,	3,	1,	0,	0,	0, 0xe8f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4326 = VPSLLVQrr
  { 4327,	3,	1,	376,	0,	0, 0x4ae3804156ULL, NULL, NULL, OperandInfo339 },  // Inst #4327 = VPSLLWYri
  { 4328,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x4be3800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4328 = VPSLLWYrm
  { 4329,	3,	1,	378,	0,	0, 0x4be3800145ULL, NULL, NULL, OperandInfo345 },  // Inst #4329 = VPSLLWYrr
  { 4330,	3,	1,	376,	0,	0, 0xae3804156ULL, NULL, NULL, OperandInfo52 },  // Inst #4330 = VPSLLWri
  { 4331,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0xbe3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4331 = VPSLLWrm
  { 4332,	3,	1,	378,	0,	0, 0xbe3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4332 = VPSLLWrr
  { 4333,	3,	1,	376,	0,	0, 0x4ae5804154ULL, NULL, NULL, OperandInfo339 },  // Inst #4333 = VPSRADYri
  { 4334,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x4bc5800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4334 = VPSRADYrm
  { 4335,	3,	1,	378,	0,	0, 0x4bc5800145ULL, NULL, NULL, OperandInfo345 },  // Inst #4335 = VPSRADYrr
  { 4336,	3,	1,	376,	0,	0, 0xae5804154ULL, NULL, NULL, OperandInfo52 },  // Inst #4336 = VPSRADri
  { 4337,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0xbc5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4337 = VPSRADrm
  { 4338,	3,	1,	378,	0,	0, 0xbc5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4338 = VPSRADrr
  { 4339,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a8d800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4339 = VPSRAVDYrm
  { 4340,	3,	1,	0,	0,	0, 0x4a8d800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4340 = VPSRAVDYrr
  { 4341,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa8d800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4341 = VPSRAVDrm
  { 4342,	3,	1,	0,	0,	0, 0xa8d800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4342 = VPSRAVDrr
  { 4343,	3,	1,	376,	0,	0, 0x4ae3804154ULL, NULL, NULL, OperandInfo339 },  // Inst #4343 = VPSRAWYri
  { 4344,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x4bc3800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4344 = VPSRAWYrm
  { 4345,	3,	1,	378,	0,	0, 0x4bc3800145ULL, NULL, NULL, OperandInfo345 },  // Inst #4345 = VPSRAWYrr
  { 4346,	3,	1,	376,	0,	0, 0xae3804154ULL, NULL, NULL, OperandInfo52 },  // Inst #4346 = VPSRAWri
  { 4347,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0xbc3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4347 = VPSRAWrm
  { 4348,	3,	1,	378,	0,	0, 0xbc3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4348 = VPSRAWrr
  { 4349,	3,	1,	375,	0,	0, 0x4ae7804153ULL, NULL, NULL, OperandInfo339 },  // Inst #4349 = VPSRLDQYri
  { 4350,	3,	1,	375,	0,	0, 0xae7804153ULL, NULL, NULL, OperandInfo52 },  // Inst #4350 = VPSRLDQri
  { 4351,	3,	1,	376,	0,	0, 0x4ae5804152ULL, NULL, NULL, OperandInfo339 },  // Inst #4351 = VPSRLDYri
  { 4352,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x4ba5800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4352 = VPSRLDYrm
  { 4353,	3,	1,	378,	0,	0, 0x4ba5800145ULL, NULL, NULL, OperandInfo345 },  // Inst #4353 = VPSRLDYrr
  { 4354,	3,	1,	376,	0,	0, 0xae5804152ULL, NULL, NULL, OperandInfo52 },  // Inst #4354 = VPSRLDri
  { 4355,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0xba5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4355 = VPSRLDrm
  { 4356,	3,	1,	378,	0,	0, 0xba5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4356 = VPSRLDrr
  { 4357,	3,	1,	376,	0,	0, 0x4ae7804152ULL, NULL, NULL, OperandInfo339 },  // Inst #4357 = VPSRLQYri
  { 4358,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x4ba7800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4358 = VPSRLQYrm
  { 4359,	3,	1,	378,	0,	0, 0x4ba7800145ULL, NULL, NULL, OperandInfo345 },  // Inst #4359 = VPSRLQYrr
  { 4360,	3,	1,	376,	0,	0, 0xae7804152ULL, NULL, NULL, OperandInfo52 },  // Inst #4360 = VPSRLQri
  { 4361,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0xba7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4361 = VPSRLQrm
  { 4362,	3,	1,	378,	0,	0, 0xba7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4362 = VPSRLQrr
  { 4363,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a8b800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4363 = VPSRLVDYrm
  { 4364,	3,	1,	0,	0,	0, 0x4a8b800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4364 = VPSRLVDYrr
  { 4365,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa8b800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4365 = VPSRLVDrm
  { 4366,	3,	1,	0,	0,	0, 0xa8b800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4366 = VPSRLVDrr
  { 4367,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4e8b800d46ULL, NULL, NULL, OperandInfo231 },  // Inst #4367 = VPSRLVQYrm
  { 4368,	3,	1,	0,	0,	0, 0x4e8b800d45ULL, NULL, NULL, OperandInfo232 },  // Inst #4368 = VPSRLVQYrr
  { 4369,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xe8b800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4369 = VPSRLVQrm
  { 4370,	3,	1,	0,	0,	0, 0xe8b800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4370 = VPSRLVQrr
  { 4371,	3,	1,	376,	0,	0, 0x4ae3804152ULL, NULL, NULL, OperandInfo339 },  // Inst #4371 = VPSRLWYri
  { 4372,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0x4ba3800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4372 = VPSRLWYrm
  { 4373,	3,	1,	378,	0,	0, 0x4ba3800145ULL, NULL, NULL, OperandInfo345 },  // Inst #4373 = VPSRLWYrr
  { 4374,	3,	1,	376,	0,	0, 0xae3804152ULL, NULL, NULL, OperandInfo52 },  // Inst #4374 = VPSRLWri
  { 4375,	7,	1,	377,	0,	0|(1<<MCID::MayLoad), 0xba3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4375 = VPSRLWrm
  { 4376,	3,	1,	378,	0,	0, 0xba3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4376 = VPSRLWrr
  { 4377,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bf1800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4377 = VPSUBBYrm
  { 4378,	3,	1,	340,	0,	0, 0x4bf1800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4378 = VPSUBBYrr
  { 4379,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbf1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4379 = VPSUBBrm
  { 4380,	3,	1,	340,	0,	0, 0xbf1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4380 = VPSUBBrr
  { 4381,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bf5800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4381 = VPSUBDYrm
  { 4382,	3,	1,	340,	0,	0, 0x4bf5800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4382 = VPSUBDYrr
  { 4383,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbf5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4383 = VPSUBDrm
  { 4384,	3,	1,	340,	0,	0, 0xbf5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4384 = VPSUBDrr
  { 4385,	7,	1,	341,	0,	0|(1<<MCID::MayLoad), 0x4bf7800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4385 = VPSUBQYrm
  { 4386,	3,	1,	342,	0,	0, 0x4bf7800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4386 = VPSUBQYrr
  { 4387,	7,	1,	341,	0,	0|(1<<MCID::MayLoad), 0xbf7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4387 = VPSUBQrm
  { 4388,	3,	1,	342,	0,	0, 0xbf7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4388 = VPSUBQrr
  { 4389,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bd1800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4389 = VPSUBSBYrm
  { 4390,	3,	1,	340,	0,	0, 0x4bd1800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4390 = VPSUBSBYrr
  { 4391,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbd1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4391 = VPSUBSBrm
  { 4392,	3,	1,	340,	0,	0, 0xbd1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4392 = VPSUBSBrr
  { 4393,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bd3800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4393 = VPSUBSWYrm
  { 4394,	3,	1,	340,	0,	0, 0x4bd3800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4394 = VPSUBSWYrr
  { 4395,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbd3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4395 = VPSUBSWrm
  { 4396,	3,	1,	340,	0,	0, 0xbd3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4396 = VPSUBSWrr
  { 4397,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bb1800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4397 = VPSUBUSBYrm
  { 4398,	3,	1,	340,	0,	0, 0x4bb1800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4398 = VPSUBUSBYrr
  { 4399,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbb1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4399 = VPSUBUSBrm
  { 4400,	3,	1,	340,	0,	0, 0xbb1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4400 = VPSUBUSBrr
  { 4401,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bb3800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4401 = VPSUBUSWYrm
  { 4402,	3,	1,	340,	0,	0, 0x4bb3800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4402 = VPSUBUSWYrr
  { 4403,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbb3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4403 = VPSUBUSWrm
  { 4404,	3,	1,	340,	0,	0, 0xbb3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4404 = VPSUBUSWrr
  { 4405,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0x4bf3800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4405 = VPSUBWYrm
  { 4406,	3,	1,	340,	0,	0, 0x4bf3800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4406 = VPSUBWYrr
  { 4407,	7,	1,	339,	0,	0|(1<<MCID::MayLoad), 0xbf3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4407 = VPSUBWrm
  { 4408,	3,	1,	340,	0,	0, 0xbf3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4408 = VPSUBWrr
  { 4409,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x422f800d46ULL, NULL, ImplicitList3, OperandInfo247 },  // Inst #4409 = VPTESTYrm
  { 4410,	2,	0,	0,	0,	0, 0x422f800d45ULL, NULL, ImplicitList3, OperandInfo259 },  // Inst #4410 = VPTESTYrr
  { 4411,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x22f800d46ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #4411 = VPTESTrm
  { 4412,	2,	0,	0,	0,	0, 0x22f800d45ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #4412 = VPTESTrr
  { 4413,	7,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4ad1800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4413 = VPUNPCKHBWYrm
  { 4414,	3,	1,	468,	0,	0, 0x4ad1800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4414 = VPUNPCKHBWYrr
  { 4415,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xad1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4415 = VPUNPCKHBWrm
  { 4416,	3,	1,	380,	0,	0, 0xad1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4416 = VPUNPCKHBWrr
  { 4417,	7,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4ad5800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4417 = VPUNPCKHDQYrm
  { 4418,	3,	1,	468,	0,	0, 0x4ad5800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4418 = VPUNPCKHDQYrr
  { 4419,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xad5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4419 = VPUNPCKHDQrm
  { 4420,	3,	1,	380,	0,	0, 0xad5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4420 = VPUNPCKHDQrr
  { 4421,	7,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4adb800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4421 = VPUNPCKHQDQYrm
  { 4422,	3,	1,	468,	0,	0, 0x4adb800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4422 = VPUNPCKHQDQYrr
  { 4423,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xadb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4423 = VPUNPCKHQDQrm
  { 4424,	3,	1,	380,	0,	0, 0xadb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4424 = VPUNPCKHQDQrr
  { 4425,	7,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4ad3800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4425 = VPUNPCKHWDYrm
  { 4426,	3,	1,	468,	0,	0, 0x4ad3800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4426 = VPUNPCKHWDYrr
  { 4427,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xad3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4427 = VPUNPCKHWDrm
  { 4428,	3,	1,	380,	0,	0, 0xad3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4428 = VPUNPCKHWDrr
  { 4429,	7,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4ac1800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4429 = VPUNPCKLBWYrm
  { 4430,	3,	1,	468,	0,	0, 0x4ac1800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4430 = VPUNPCKLBWYrr
  { 4431,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xac1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4431 = VPUNPCKLBWrm
  { 4432,	3,	1,	380,	0,	0, 0xac1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4432 = VPUNPCKLBWrr
  { 4433,	7,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4ac5800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4433 = VPUNPCKLDQYrm
  { 4434,	3,	1,	468,	0,	0, 0x4ac5800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4434 = VPUNPCKLDQYrr
  { 4435,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xac5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4435 = VPUNPCKLDQrm
  { 4436,	3,	1,	380,	0,	0, 0xac5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4436 = VPUNPCKLDQrr
  { 4437,	7,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4ad9800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4437 = VPUNPCKLQDQYrm
  { 4438,	3,	1,	468,	0,	0, 0x4ad9800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4438 = VPUNPCKLQDQYrr
  { 4439,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xad9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4439 = VPUNPCKLQDQrm
  { 4440,	3,	1,	380,	0,	0, 0xad9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4440 = VPUNPCKLQDQrr
  { 4441,	7,	1,	471,	0,	0|(1<<MCID::MayLoad), 0x4ac3800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4441 = VPUNPCKLWDYrm
  { 4442,	3,	1,	468,	0,	0, 0x4ac3800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4442 = VPUNPCKLWDYrr
  { 4443,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xac3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4443 = VPUNPCKLWDrm
  { 4444,	3,	1,	380,	0,	0, 0xac3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4444 = VPUNPCKLWDrr
  { 4445,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x4bdf800146ULL, NULL, NULL, OperandInfo231 },  // Inst #4445 = VPXORYrm
  { 4446,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x4bdf800145ULL, NULL, NULL, OperandInfo232 },  // Inst #4446 = VPXORYrr
  { 4447,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xbdf800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4447 = VPXORrm
  { 4448,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xbdf800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4448 = VPXORrr
  { 4449,	6,	1,	390,	0,	0|(1<<MCID::MayLoad), 0x42a6800106ULL, NULL, NULL, OperandInfo247 },  // Inst #4449 = VRCPPSYm
  { 4450,	6,	1,	390,	0,	0|(1<<MCID::MayLoad), 0x42a6800106ULL, NULL, NULL, OperandInfo247 },  // Inst #4450 = VRCPPSYm_Int
  { 4451,	2,	1,	391,	0,	0, 0x42a6800105ULL, NULL, NULL, OperandInfo259 },  // Inst #4451 = VRCPPSYr
  { 4452,	2,	1,	391,	0,	0, 0x42a6800105ULL, NULL, NULL, OperandInfo259 },  // Inst #4452 = VRCPPSYr_Int
  { 4453,	6,	1,	390,	0,	0|(1<<MCID::MayLoad), 0x2a6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4453 = VRCPPSm
  { 4454,	6,	1,	390,	0,	0|(1<<MCID::MayLoad), 0x2a6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4454 = VRCPPSm_Int
  { 4455,	2,	1,	391,	0,	0, 0x2a6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4455 = VRCPPSr
  { 4456,	2,	1,	391,	0,	0, 0x2a6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4456 = VRCPPSr_Int
  { 4457,	7,	1,	472,	0,	0|(1<<MCID::MayLoad), 0x8aa6000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #4457 = VRCPSSm
  { 4458,	7,	1,	472,	0,	0|(1<<MCID::MayLoad), 0x8aa6000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #4458 = VRCPSSm_Int
  { 4459,	3,	1,	394,	0,	0, 0x8aa6000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #4459 = VRCPSSr
  { 4460,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x213004e46ULL, NULL, NULL, OperandInfo51 },  // Inst #4460 = VROUNDPDm
  { 4461,	3,	1,	0,	0,	0, 0x213004e45ULL, NULL, NULL, OperandInfo52 },  // Inst #4461 = VROUNDPDr
  { 4462,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x210804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #4462 = VROUNDPSm
  { 4463,	3,	1,	0,	0,	0, 0x210804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #4463 = VROUNDPSr
  { 4464,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8a16004e46ULL, NULL, NULL, OperandInfo137 },  // Inst #4464 = VROUNDSDm
  { 4465,	4,	1,	0,	0,	0, 0x8a16004e45ULL, NULL, NULL, OperandInfo78 },  // Inst #4465 = VROUNDSDr
  { 4466,	4,	1,	0,	0,	0, 0x8a16004e45ULL, NULL, NULL, OperandInfo85 },  // Inst #4466 = VROUNDSDr_Int
  { 4467,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8a14004e46ULL, NULL, NULL, OperandInfo137 },  // Inst #4467 = VROUNDSSm
  { 4468,	4,	1,	0,	0,	0, 0x8a14004e45ULL, NULL, NULL, OperandInfo77 },  // Inst #4468 = VROUNDSSr
  { 4469,	4,	1,	0,	0,	0, 0x8a14004e45ULL, NULL, NULL, OperandInfo85 },  // Inst #4469 = VROUNDSSr_Int
  { 4470,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4213004e46ULL, NULL, NULL, OperandInfo338 },  // Inst #4470 = VROUNDYPDm
  { 4471,	3,	1,	0,	0,	0, 0x4213004e45ULL, NULL, NULL, OperandInfo339 },  // Inst #4471 = VROUNDYPDr
  { 4472,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4210804e46ULL, NULL, NULL, OperandInfo338 },  // Inst #4472 = VROUNDYPSm
  { 4473,	3,	1,	0,	0,	0, 0x4210804e45ULL, NULL, NULL, OperandInfo339 },  // Inst #4473 = VROUNDYPSr
  { 4474,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0x42a4800106ULL, NULL, NULL, OperandInfo247 },  // Inst #4474 = VRSQRTPSYm
  { 4475,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0x42a4800106ULL, NULL, NULL, OperandInfo247 },  // Inst #4475 = VRSQRTPSYm_Int
  { 4476,	2,	1,	406,	0,	0, 0x42a4800105ULL, NULL, NULL, OperandInfo259 },  // Inst #4476 = VRSQRTPSYr
  { 4477,	2,	1,	406,	0,	0, 0x42a4800105ULL, NULL, NULL, OperandInfo259 },  // Inst #4477 = VRSQRTPSYr_Int
  { 4478,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0x2a4800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4478 = VRSQRTPSm
  { 4479,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0x2a4800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4479 = VRSQRTPSm_Int
  { 4480,	2,	1,	406,	0,	0, 0x2a4800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4480 = VRSQRTPSr
  { 4481,	2,	1,	406,	0,	0, 0x2a4800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4481 = VRSQRTPSr_Int
  { 4482,	7,	1,	473,	0,	0|(1<<MCID::MayLoad), 0x8aa4000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #4482 = VRSQRTSSm
  { 4483,	7,	1,	473,	0,	0|(1<<MCID::MayLoad), 0x8aa4000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #4483 = VRSQRTSSm_Int
  { 4484,	3,	1,	409,	0,	0, 0x8aa4000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #4484 = VRSQRTSSr
  { 4485,	8,	1,	429,	0,	0|(1<<MCID::MayLoad), 0x4b8d004146ULL, NULL, NULL, OperandInfo242 },  // Inst #4485 = VSHUFPDYrmi
  { 4486,	4,	1,	430,	0,	0, 0x4b8d004145ULL, NULL, NULL, OperandInfo86 },  // Inst #4486 = VSHUFPDYrri
  { 4487,	8,	1,	429,	0,	0|(1<<MCID::MayLoad), 0xb8d004146ULL, NULL, NULL, OperandInfo137 },  // Inst #4487 = VSHUFPDrmi
  { 4488,	4,	1,	430,	0,	0, 0xb8d004145ULL, NULL, NULL, OperandInfo85 },  // Inst #4488 = VSHUFPDrri
  { 4489,	8,	1,	429,	0,	0|(1<<MCID::MayLoad), 0x4b8c804106ULL, NULL, NULL, OperandInfo242 },  // Inst #4489 = VSHUFPSYrmi
  { 4490,	4,	1,	430,	0,	0, 0x4b8c804105ULL, NULL, NULL, OperandInfo86 },  // Inst #4490 = VSHUFPSYrri
  { 4491,	8,	1,	429,	0,	0|(1<<MCID::MayLoad), 0xb8c804106ULL, NULL, NULL, OperandInfo137 },  // Inst #4491 = VSHUFPSrmi
  { 4492,	4,	1,	430,	0,	0, 0xb8c804105ULL, NULL, NULL, OperandInfo85 },  // Inst #4492 = VSHUFPSrri
  { 4493,	6,	1,	434,	0,	0|(1<<MCID::MayLoad), 0x42a3000146ULL, NULL, NULL, OperandInfo247 },  // Inst #4493 = VSQRTPDYm
  { 4494,	2,	1,	435,	0,	0, 0x42a3000145ULL, NULL, NULL, OperandInfo259 },  // Inst #4494 = VSQRTPDYr
  { 4495,	6,	1,	434,	0,	0|(1<<MCID::MayLoad), 0x2a3000146ULL, NULL, NULL, OperandInfo49 },  // Inst #4495 = VSQRTPDm
  { 4496,	2,	1,	435,	0,	0, 0x2a3000145ULL, NULL, NULL, OperandInfo50 },  // Inst #4496 = VSQRTPDr
  { 4497,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0x42a2800106ULL, NULL, NULL, OperandInfo247 },  // Inst #4497 = VSQRTPSYm
  { 4498,	2,	1,	406,	0,	0, 0x42a2800105ULL, NULL, NULL, OperandInfo259 },  // Inst #4498 = VSQRTPSYr
  { 4499,	6,	1,	405,	0,	0|(1<<MCID::MayLoad), 0x2a2800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4499 = VSQRTPSm
  { 4500,	2,	1,	406,	0,	0, 0x2a2800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4500 = VSQRTPSr
  { 4501,	7,	1,	473,	0,	0|(1<<MCID::MayLoad), 0x8aa2000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #4501 = VSQRTSDm
  { 4502,	7,	1,	473,	0,	0|(1<<MCID::MayLoad), 0x8aa2000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #4502 = VSQRTSDm_Int
  { 4503,	3,	1,	409,	0,	0, 0x8aa2000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #4503 = VSQRTSDr
  { 4504,	7,	1,	473,	0,	0|(1<<MCID::MayLoad), 0x8aa2000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #4504 = VSQRTSSm
  { 4505,	7,	1,	473,	0,	0|(1<<MCID::MayLoad), 0x8aa2000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #4505 = VSQRTSSm_Int
  { 4506,	3,	1,	409,	0,	0, 0x8aa2000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #4506 = VSQRTSSr
  { 4507,	5,	0,	441,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x35c80011bULL, NULL, NULL, OperandInfo40 },  // Inst #4507 = VSTMXCSR
  { 4508,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4ab9000146ULL, NULL, NULL, OperandInfo231 },  // Inst #4508 = VSUBPDYrm
  { 4509,	3,	1,	11,	0,	0, 0x4ab9000145ULL, NULL, NULL, OperandInfo232 },  // Inst #4509 = VSUBPDYrr
  { 4510,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xab9000146ULL, NULL, NULL, OperandInfo138 },  // Inst #4510 = VSUBPDrm
  { 4511,	3,	1,	11,	0,	0, 0xab9000145ULL, NULL, NULL, OperandInfo139 },  // Inst #4511 = VSUBPDrr
  { 4512,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4ab8800106ULL, NULL, NULL, OperandInfo231 },  // Inst #4512 = VSUBPSYrm
  { 4513,	3,	1,	13,	0,	0, 0x4ab8800105ULL, NULL, NULL, OperandInfo232 },  // Inst #4513 = VSUBPSYrr
  { 4514,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xab8800106ULL, NULL, NULL, OperandInfo138 },  // Inst #4514 = VSUBPSrm
  { 4515,	3,	1,	13,	0,	0, 0xab8800105ULL, NULL, NULL, OperandInfo139 },  // Inst #4515 = VSUBPSrr
  { 4516,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8ab8000b06ULL, NULL, NULL, OperandInfo233 },  // Inst #4516 = VSUBSDrm
  { 4517,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8ab8000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #4517 = VSUBSDrm_Int
  { 4518,	3,	1,	15,	0,	0, 0x8ab8000b05ULL, NULL, NULL, OperandInfo234 },  // Inst #4518 = VSUBSDrr
  { 4519,	3,	1,	15,	0,	0, 0x8ab8000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #4519 = VSUBSDrr_Int
  { 4520,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8ab8000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #4520 = VSUBSSrm
  { 4521,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8ab8000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #4521 = VSUBSSrm_Int
  { 4522,	3,	1,	17,	0,	0, 0x8ab8000c05ULL, NULL, NULL, OperandInfo236 },  // Inst #4522 = VSUBSSrr
  { 4523,	3,	1,	17,	0,	0, 0x8ab8000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #4523 = VSUBSSrr_Int
  { 4524,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x421f000d46ULL, NULL, ImplicitList3, OperandInfo247 },  // Inst #4524 = VTESTPDYrm
  { 4525,	2,	0,	0,	0,	0, 0x421f000d45ULL, NULL, ImplicitList3, OperandInfo259 },  // Inst #4525 = VTESTPDYrr
  { 4526,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x21f000d46ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #4526 = VTESTPDrm
  { 4527,	2,	0,	0,	0,	0, 0x21f000d45ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #4527 = VTESTPDrr
  { 4528,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x421c800d46ULL, NULL, ImplicitList3, OperandInfo247 },  // Inst #4528 = VTESTPSYrm
  { 4529,	2,	0,	0,	0,	0, 0x421c800d45ULL, NULL, ImplicitList3, OperandInfo259 },  // Inst #4529 = VTESTPSYrr
  { 4530,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x21c800d46ULL, NULL, ImplicitList3, OperandInfo49 },  // Inst #4530 = VTESTPSrm
  { 4531,	2,	0,	0,	0,	0, 0x21c800d45ULL, NULL, ImplicitList3, OperandInfo50 },  // Inst #4531 = VTESTPSrr
  { 4532,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x825c000146ULL, NULL, ImplicitList3, OperandInfo100 },  // Inst #4532 = VUCOMISDrm
  { 4533,	2,	0,	63,	0,	0, 0x825c000145ULL, NULL, ImplicitList3, OperandInfo123 },  // Inst #4533 = VUCOMISDrr
  { 4534,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x825c000106ULL, NULL, ImplicitList3, OperandInfo98 },  // Inst #4534 = VUCOMISSrm
  { 4535,	2,	0,	63,	0,	0, 0x825c000105ULL, NULL, ImplicitList3, OperandInfo124 },  // Inst #4535 = VUCOMISSrr
  { 4536,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0x4a2b000146ULL, NULL, NULL, OperandInfo231 },  // Inst #4536 = VUNPCKHPDYrm
  { 4537,	3,	1,	380,	0,	0, 0x4a2b000145ULL, NULL, NULL, OperandInfo232 },  // Inst #4537 = VUNPCKHPDYrr
  { 4538,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xa2b000146ULL, NULL, NULL, OperandInfo138 },  // Inst #4538 = VUNPCKHPDrm
  { 4539,	3,	1,	380,	0,	0, 0xa2b000145ULL, NULL, NULL, OperandInfo139 },  // Inst #4539 = VUNPCKHPDrr
  { 4540,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0x4a2a800106ULL, NULL, NULL, OperandInfo231 },  // Inst #4540 = VUNPCKHPSYrm
  { 4541,	3,	1,	380,	0,	0, 0x4a2a800105ULL, NULL, NULL, OperandInfo232 },  // Inst #4541 = VUNPCKHPSYrr
  { 4542,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xa2a800106ULL, NULL, NULL, OperandInfo138 },  // Inst #4542 = VUNPCKHPSrm
  { 4543,	3,	1,	380,	0,	0, 0xa2a800105ULL, NULL, NULL, OperandInfo139 },  // Inst #4543 = VUNPCKHPSrr
  { 4544,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0x4a29000146ULL, NULL, NULL, OperandInfo231 },  // Inst #4544 = VUNPCKLPDYrm
  { 4545,	3,	1,	380,	0,	0, 0x4a29000145ULL, NULL, NULL, OperandInfo232 },  // Inst #4545 = VUNPCKLPDYrr
  { 4546,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xa29000146ULL, NULL, NULL, OperandInfo138 },  // Inst #4546 = VUNPCKLPDrm
  { 4547,	3,	1,	380,	0,	0, 0xa29000145ULL, NULL, NULL, OperandInfo139 },  // Inst #4547 = VUNPCKLPDrr
  { 4548,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0x4a28800106ULL, NULL, NULL, OperandInfo231 },  // Inst #4548 = VUNPCKLPSYrm
  { 4549,	3,	1,	380,	0,	0, 0x4a28800105ULL, NULL, NULL, OperandInfo232 },  // Inst #4549 = VUNPCKLPSYrr
  { 4550,	7,	1,	379,	0,	0|(1<<MCID::MayLoad), 0xa28800106ULL, NULL, NULL, OperandInfo138 },  // Inst #4550 = VUNPCKLPSrm
  { 4551,	3,	1,	380,	0,	0, 0xa28800105ULL, NULL, NULL, OperandInfo139 },  // Inst #4551 = VUNPCKLPSrr
  { 4552,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aaf000146ULL, NULL, NULL, OperandInfo231 },  // Inst #4552 = VXORPDYrm
  { 4553,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aaf000145ULL, NULL, NULL, OperandInfo232 },  // Inst #4553 = VXORPDYrr
  { 4554,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaaf000146ULL, NULL, NULL, OperandInfo138 },  // Inst #4554 = VXORPDrm
  { 4555,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaaf000145ULL, NULL, NULL, OperandInfo139 },  // Inst #4555 = VXORPDrr
  { 4556,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aae800106ULL, NULL, NULL, OperandInfo231 },  // Inst #4556 = VXORPSYrm
  { 4557,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aae800105ULL, NULL, NULL, OperandInfo232 },  // Inst #4557 = VXORPSYrr
  { 4558,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaae800106ULL, NULL, NULL, OperandInfo138 },  // Inst #4558 = VXORPSrm
  { 4559,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaae800105ULL, NULL, NULL, OperandInfo139 },  // Inst #4559 = VXORPSrr
  { 4560,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42ee000101ULL, NULL, ImplicitList80, 0 },  // Inst #4560 = VZEROALL
  { 4561,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ee000101ULL, NULL, ImplicitList80, 0 },  // Inst #4561 = VZEROUPPER
  { 4562,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo346 },  // Inst #4562 = V_SET0
  { 4563,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo346 },  // Inst #4563 = V_SETALLONES
  { 4564,	1,	0,	41,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1d0018001ULL, ImplicitList13, ImplicitList81, OperandInfo72 },  // Inst #4564 = W64ALLOCA
  { 4565,	0,	0,	474,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x136000001ULL, NULL, NULL, 0 },  // Inst #4565 = WAIT
  { 4566,	0,	0,	175,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x12000101ULL, NULL, NULL, 0 },  // Inst #4566 = WBINVD
  { 4567,	0,	0,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList11, ImplicitList69, 0 },  // Inst #4567 = WIN_ALLOCA
  { 4568,	1,	0,	0,	0,	0, 0xe0000ULL, NULL, ImplicitList82, OperandInfo153 },  // Inst #4568 = WIN_FTOL_32
  { 4569,	1,	0,	0,	0,	0, 0xe0000ULL, NULL, ImplicitList82, OperandInfo154 },  // Inst #4569 = WIN_FTOL_64
  { 4570,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c12ULL, NULL, NULL, OperandInfo71 },  // Inst #4570 = WRFSBASE
  { 4571,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c12ULL, NULL, NULL, OperandInfo73 },  // Inst #4571 = WRFSBASE64
  { 4572,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c13ULL, NULL, NULL, OperandInfo71 },  // Inst #4572 = WRGSBASE
  { 4573,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c13ULL, NULL, NULL, OperandInfo73 },  // Inst #4573 = WRGSBASE64
  { 4574,	0,	0,	475,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x60000101ULL, NULL, NULL, 0 },  // Inst #4574 = WRMSR
  { 4575,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x18c00402dULL, NULL, NULL, OperandInfo2 },  // Inst #4575 = XABORT
  { 4576,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e4000001ULL, NULL, NULL, 0 },  // Inst #4576 = XACQUIRE_PREFIX
  { 4577,	6,	0,	476,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182000144ULL, NULL, NULL, OperandInfo16 },  // Inst #4577 = XADD16rm
  { 4578,	2,	1,	477,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182000143ULL, NULL, NULL, OperandInfo57 },  // Inst #4578 = XADD16rr
  { 4579,	6,	0,	476,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182000104ULL, NULL, NULL, OperandInfo20 },  // Inst #4579 = XADD32rm
  { 4580,	2,	1,	477,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182000103ULL, NULL, NULL, OperandInfo32 },  // Inst #4580 = XADD32rr
  { 4581,	6,	0,	476,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182002104ULL, NULL, NULL, OperandInfo24 },  // Inst #4581 = XADD64rm
  { 4582,	2,	1,	477,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182002103ULL, NULL, NULL, OperandInfo33 },  // Inst #4582 = XADD64rr
  { 4583,	6,	0,	476,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x180000104ULL, NULL, NULL, OperandInfo28 },  // Inst #4583 = XADD8rm
  { 4584,	2,	1,	477,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000103ULL, NULL, NULL, OperandInfo88 },  // Inst #4584 = XADD8rr
  { 4585,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #4585 = XBEGIN
  { 4586,	1,	0,	0,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x18e01802dULL, NULL, ImplicitList8, OperandInfo72 },  // Inst #4586 = XBEGIN_4
  { 4587,	1,	0,	478,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000042ULL, NULL, NULL, OperandInfo112 },  // Inst #4587 = XCHG16ar
  { 4588,	7,	1,	479,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e000046ULL, NULL, NULL, OperandInfo18 },  // Inst #4588 = XCHG16rm
  { 4589,	3,	1,	478,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e000045ULL, NULL, NULL, OperandInfo19 },  // Inst #4589 = XCHG16rr
  { 4590,	1,	0,	478,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000002ULL, NULL, NULL, OperandInfo71 },  // Inst #4590 = XCHG32ar
  { 4591,	1,	0,	478,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000002ULL, NULL, NULL, OperandInfo347 },  // Inst #4591 = XCHG32ar64
  { 4592,	7,	1,	479,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e000006ULL, NULL, NULL, OperandInfo22 },  // Inst #4592 = XCHG32rm
  { 4593,	3,	1,	478,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e000005ULL, NULL, NULL, OperandInfo23 },  // Inst #4593 = XCHG32rr
  { 4594,	1,	0,	478,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120002002ULL, NULL, NULL, OperandInfo73 },  // Inst #4594 = XCHG64ar
  { 4595,	7,	1,	479,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e002006ULL, NULL, NULL, OperandInfo26 },  // Inst #4595 = XCHG64rm
  { 4596,	3,	1,	478,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e002005ULL, NULL, NULL, OperandInfo27 },  // Inst #4596 = XCHG64rr
  { 4597,	7,	1,	479,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10c000006ULL, NULL, NULL, OperandInfo30 },  // Inst #4597 = XCHG8rm
  { 4598,	3,	1,	478,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10c000005ULL, NULL, NULL, OperandInfo31 },  // Inst #4598 = XCHG8rr
  { 4599,	1,	0,	480,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000402ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #4599 = XCH_F
  { 4600,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0001001ULL, ImplicitList83, ImplicitList84, 0 },  // Inst #4600 = XCRYPTCBC
  { 4601,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0001001ULL, ImplicitList83, ImplicitList84, 0 },  // Inst #4601 = XCRYPTCFB
  { 4602,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0001001ULL, ImplicitList83, ImplicitList84, 0 },  // Inst #4602 = XCRYPTCTR
  { 4603,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190001001ULL, ImplicitList83, ImplicitList84, 0 },  // Inst #4603 = XCRYPTECB
  { 4604,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0001001ULL, ImplicitList83, ImplicitList84, 0 },  // Inst #4604 = XCRYPTOFB
  { 4605,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2000132ULL, NULL, NULL, 0 },  // Inst #4605 = XEND
  { 4606,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012fULL, ImplicitList37, ImplicitList85, 0 },  // Inst #4606 = XGETBV
  { 4607,	0,	0,	481,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ae000001ULL, NULL, NULL, 0 },  // Inst #4607 = XLAT
  { 4608,	1,	0,	5,	0,	0, 0x6a00c041ULL, ImplicitList7, ImplicitList2, OperandInfo2 },  // Inst #4608 = XOR16i16
  { 4609,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #4609 = XOR16mi
  { 4610,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #4610 = XOR16mi8
  { 4611,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62000044ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #4611 = XOR16mr
  { 4612,	3,	1,	5,	0,	0, 0x10200c056ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #4612 = XOR16ri
  { 4613,	3,	1,	5,	0,	0, 0x106004056ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #4613 = XOR16ri8
  { 4614,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x66000046ULL, NULL, ImplicitList3, OperandInfo18 },  // Inst #4614 = XOR16rm
  { 4615,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x62000043ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #4615 = XOR16rr
  { 4616,	3,	1,	5,	0,	0, 0x66000045ULL, NULL, ImplicitList3, OperandInfo19 },  // Inst #4616 = XOR16rr_REV
  { 4617,	1,	0,	5,	0,	0, 0x6a014001ULL, ImplicitList8, ImplicitList4, OperandInfo2 },  // Inst #4617 = XOR32i32
  { 4618,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #4618 = XOR32mi
  { 4619,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #4619 = XOR32mi8
  { 4620,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62000004ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #4620 = XOR32mr
  { 4621,	3,	1,	5,	0,	0, 0x102014016ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #4621 = XOR32ri
  { 4622,	3,	1,	5,	0,	0, 0x106004016ULL, NULL, ImplicitList3, OperandInfo21 },  // Inst #4622 = XOR32ri8
  { 4623,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x66000006ULL, NULL, ImplicitList3, OperandInfo22 },  // Inst #4623 = XOR32rm
  { 4624,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x62000003ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #4624 = XOR32rr
  { 4625,	3,	1,	5,	0,	0, 0x66000005ULL, NULL, ImplicitList3, OperandInfo23 },  // Inst #4625 = XOR32rr_REV
  { 4626,	1,	0,	5,	0,	0, 0x6a016001ULL, ImplicitList9, ImplicitList5, OperandInfo2 },  // Inst #4626 = XOR64i32
  { 4627,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #4627 = XOR64mi32
  { 4628,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #4628 = XOR64mi8
  { 4629,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62002004ULL, NULL, ImplicitList3, OperandInfo24 },  // Inst #4629 = XOR64mr
  { 4630,	3,	1,	5,	0,	0, 0x102016016ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #4630 = XOR64ri32
  { 4631,	3,	1,	5,	0,	0, 0x106006016ULL, NULL, ImplicitList3, OperandInfo25 },  // Inst #4631 = XOR64ri8
  { 4632,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x66002006ULL, NULL, ImplicitList3, OperandInfo26 },  // Inst #4632 = XOR64rm
  { 4633,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x62002003ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #4633 = XOR64rr
  { 4634,	3,	1,	5,	0,	0, 0x66002005ULL, NULL, ImplicitList3, OperandInfo27 },  // Inst #4634 = XOR64rr_REV
  { 4635,	1,	0,	5,	0,	0, 0x68004001ULL, ImplicitList10, ImplicitList6, OperandInfo2 },  // Inst #4635 = XOR8i8
  { 4636,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401eULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #4636 = XOR8mi
  { 4637,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x60000004ULL, NULL, ImplicitList3, OperandInfo28 },  // Inst #4637 = XOR8mr
  { 4638,	3,	1,	5,	0,	0, 0x100004016ULL, NULL, ImplicitList3, OperandInfo29 },  // Inst #4638 = XOR8ri
  { 4639,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x64000006ULL, NULL, ImplicitList3, OperandInfo30 },  // Inst #4639 = XOR8rm
  { 4640,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x60000003ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #4640 = XOR8rr
  { 4641,	3,	1,	5,	0,	0, 0x64000005ULL, NULL, ImplicitList3, OperandInfo31 },  // Inst #4641 = XOR8rr_REV
  { 4642,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaf000146ULL, NULL, NULL, OperandInfo34 },  // Inst #4642 = XORPDrm
  { 4643,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaf000145ULL, NULL, NULL, OperandInfo35 },  // Inst #4643 = XORPDrr
  { 4644,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xae800106ULL, NULL, NULL, OperandInfo34 },  // Inst #4644 = XORPSrm
  { 4645,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xae800105ULL, NULL, NULL, OperandInfo35 },  // Inst #4645 = XORPSrr
  { 4646,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e6000001ULL, NULL, NULL, 0 },  // Inst #4646 = XRELEASE_PREFIX
  { 4647,	5,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011dULL, ImplicitList85, NULL, OperandInfo40 },  // Inst #4647 = XRSTOR
  { 4648,	5,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211dULL, ImplicitList85, NULL, OperandInfo40 },  // Inst #4648 = XRSTOR64
  { 4649,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011cULL, ImplicitList85, NULL, OperandInfo40 },  // Inst #4649 = XSAVE
  { 4650,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211cULL, ImplicitList85, NULL, OperandInfo40 },  // Inst #4650 = XSAVE64
  { 4651,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011eULL, ImplicitList85, NULL, OperandInfo40 },  // Inst #4651 = XSAVEOPT
  { 4652,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211eULL, ImplicitList85, NULL, OperandInfo40 },  // Inst #4652 = XSAVEOPT64
  { 4653,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000130ULL, ImplicitList86, NULL, 0 },  // Inst #4653 = XSETBV
  { 4654,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000f01ULL, ImplicitList87, ImplicitList87, 0 },  // Inst #4654 = XSHA1
  { 4655,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000f01ULL, ImplicitList87, ImplicitList87, 0 },  // Inst #4655 = XSHA256
  { 4656,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180001001ULL, ImplicitList88, ImplicitList89, 0 },  // Inst #4656 = XSTORE
  { 4657,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000133ULL, NULL, ImplicitList3, 0 },  // Inst #4657 = XTEST
};

extern const char X86InstrNameData[] = {
  /* 0 */ 'M', 'O', 'R', 'E', 'S', 'T', 'A', 'C', 'K', '_', 'R', 'E', 'T', '_', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'R', '1', '0', 0,
  /* 26 */ 'L', 'D', '_', 'F', 'p', '0', '8', '0', 0,
  /* 35 */ 'L', 'D', '_', 'F', 'p', '1', '8', '0', 0,
  /* 44 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '8', '0', 0,
  /* 55 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 68 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 81 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 94 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 108 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 122 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 135 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 147 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 159 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 172 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 184 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 196 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 209 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 222 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 235 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 248 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 262 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 276 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 289 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 301 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 313 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 326 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 338 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 347 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 358 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 0,
  /* 367 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 380 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 392 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 404 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 415 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 0,
  /* 424 */ 'S', 'I', 'N', '_', 'F', 'p', '8', '0', 0,
  /* 433 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '8', '0', 0,
  /* 445 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '8', '0', 0,
  /* 456 */ 'A', 'B', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 465 */ 'C', 'H', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 474 */ 'C', 'O', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 483 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '8', '0', 0,
  /* 493 */ 'T', 'S', 'T', '_', 'F', 'p', '8', '0', 0,
  /* 502 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 0,
  /* 511 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '8', '0', 0,
  /* 523 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '8', '0', 0,
  /* 534 */ 'L', 'D', '_', 'F', '0', 0,
  /* 540 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 547 */ 'A', 'V', 'X', '_', 'S', 'E', 'T', '0', 0,
  /* 556 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '0', 0,
  /* 567 */ 'S', 'U', 'B', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 577 */ 'A', 'D', 'D', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 587 */ 'M', 'U', 'L', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 597 */ 'S', 'U', 'B', 'R', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 608 */ 'D', 'I', 'V', 'R', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 619 */ 'D', 'I', 'V', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 629 */ 'S', 'U', 'B', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 640 */ 'A', 'D', 'D', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 651 */ 'M', 'U', 'L', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 662 */ 'S', 'U', 'B', 'R', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 674 */ 'D', 'I', 'V', 'R', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 686 */ 'D', 'I', 'V', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 697 */ 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'm', '0', 0,
  /* 709 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'm', '0', 0,
  /* 721 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'm', '0', 0,
  /* 733 */ 'M', 'O', 'V', '3', '2', 'r', '0', 0,
  /* 741 */ 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'r', '0', 0,
  /* 753 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'r', '0', 0,
  /* 765 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'r', '0', 0,
  /* 777 */ 'X', 'S', 'H', 'A', '1', 0,
  /* 783 */ 'L', 'D', '_', 'F', '1', 0,
  /* 789 */ 'F', 'P', 'R', 'E', 'M', '1', 0,
  /* 796 */ 'F', '2', 'X', 'M', '1', 0,
  /* 802 */ 'F', 'Y', 'L', '2', 'X', 'P', '1', 0,
  /* 810 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '1', 0,
  /* 821 */ 'J', 'A', '_', '1', 0,
  /* 826 */ 'J', 'B', '_', '1', 0,
  /* 831 */ 'J', 'A', 'E', '_', '1', 0,
  /* 837 */ 'J', 'B', 'E', '_', '1', 0,
  /* 843 */ 'J', 'G', 'E', '_', '1', 0,
  /* 849 */ 'J', 'E', '_', '1', 0,
  /* 854 */ 'J', 'L', 'E', '_', '1', 0,
  /* 860 */ 'J', 'N', 'E', '_', '1', 0,
  /* 866 */ 'J', 'G', '_', '1', 0,
  /* 871 */ 'J', 'L', '_', '1', 0,
  /* 876 */ 'J', 'O', '_', '1', 0,
  /* 881 */ 'J', 'N', 'O', '_', '1', 0,
  /* 887 */ 'J', 'P', '_', '1', 0,
  /* 892 */ 'J', 'M', 'P', '_', '1', 0,
  /* 898 */ 'J', 'N', 'P', '_', '1', 0,
  /* 904 */ 'J', 'S', '_', '1', 0,
  /* 909 */ 'J', 'N', 'S', '_', '1', 0,
  /* 915 */ 'R', 'C', 'L', '3', '2', 'm', '1', 0,
  /* 923 */ 'S', 'H', 'L', '3', '2', 'm', '1', 0,
  /* 931 */ 'R', 'O', 'L', '3', '2', 'm', '1', 0,
  /* 939 */ 'S', 'A', 'R', '3', '2', 'm', '1', 0,
  /* 947 */ 'R', 'C', 'R', '3', '2', 'm', '1', 0,
  /* 955 */ 'S', 'H', 'R', '3', '2', 'm', '1', 0,
  /* 963 */ 'R', 'O', 'R', '3', '2', 'm', '1', 0,
  /* 971 */ 'R', 'C', 'L', '6', '4', 'm', '1', 0,
  /* 979 */ 'S', 'H', 'L', '6', '4', 'm', '1', 0,
  /* 987 */ 'R', 'O', 'L', '6', '4', 'm', '1', 0,
  /* 995 */ 'S', 'A', 'R', '6', '4', 'm', '1', 0,
  /* 1003 */ 'R', 'C', 'R', '6', '4', 'm', '1', 0,
  /* 1011 */ 'S', 'H', 'R', '6', '4', 'm', '1', 0,
  /* 1019 */ 'R', 'O', 'R', '6', '4', 'm', '1', 0,
  /* 1027 */ 'R', 'C', 'L', '1', '6', 'm', '1', 0,
  /* 1035 */ 'S', 'H', 'L', '1', '6', 'm', '1', 0,
  /* 1043 */ 'R', 'O', 'L', '1', '6', 'm', '1', 0,
  /* 1051 */ 'S', 'A', 'R', '1', '6', 'm', '1', 0,
  /* 1059 */ 'R', 'C', 'R', '1', '6', 'm', '1', 0,
  /* 1067 */ 'S', 'H', 'R', '1', '6', 'm', '1', 0,
  /* 1075 */ 'R', 'O', 'R', '1', '6', 'm', '1', 0,
  /* 1083 */ 'R', 'C', 'L', '8', 'm', '1', 0,
  /* 1090 */ 'S', 'H', 'L', '8', 'm', '1', 0,
  /* 1097 */ 'R', 'O', 'L', '8', 'm', '1', 0,
  /* 1104 */ 'S', 'A', 'R', '8', 'm', '1', 0,
  /* 1111 */ 'R', 'C', 'R', '8', 'm', '1', 0,
  /* 1118 */ 'S', 'H', 'R', '8', 'm', '1', 0,
  /* 1125 */ 'R', 'O', 'R', '8', 'm', '1', 0,
  /* 1132 */ 'R', 'C', 'L', '3', '2', 'r', '1', 0,
  /* 1140 */ 'S', 'H', 'L', '3', '2', 'r', '1', 0,
  /* 1148 */ 'R', 'O', 'L', '3', '2', 'r', '1', 0,
  /* 1156 */ 'S', 'A', 'R', '3', '2', 'r', '1', 0,
  /* 1164 */ 'R', 'C', 'R', '3', '2', 'r', '1', 0,
  /* 1172 */ 'S', 'H', 'R', '3', '2', 'r', '1', 0,
  /* 1180 */ 'R', 'O', 'R', '3', '2', 'r', '1', 0,
  /* 1188 */ 'R', 'C', 'L', '6', '4', 'r', '1', 0,
  /* 1196 */ 'S', 'H', 'L', '6', '4', 'r', '1', 0,
  /* 1204 */ 'R', 'O', 'L', '6', '4', 'r', '1', 0,
  /* 1212 */ 'S', 'A', 'R', '6', '4', 'r', '1', 0,
  /* 1220 */ 'R', 'C', 'R', '6', '4', 'r', '1', 0,
  /* 1228 */ 'S', 'H', 'R', '6', '4', 'r', '1', 0,
  /* 1236 */ 'R', 'O', 'R', '6', '4', 'r', '1', 0,
  /* 1244 */ 'R', 'C', 'L', '1', '6', 'r', '1', 0,
  /* 1252 */ 'S', 'H', 'L', '1', '6', 'r', '1', 0,
  /* 1260 */ 'R', 'O', 'L', '1', '6', 'r', '1', 0,
  /* 1268 */ 'S', 'A', 'R', '1', '6', 'r', '1', 0,
  /* 1276 */ 'R', 'C', 'R', '1', '6', 'r', '1', 0,
  /* 1284 */ 'S', 'H', 'R', '1', '6', 'r', '1', 0,
  /* 1292 */ 'R', 'O', 'R', '1', '6', 'r', '1', 0,
  /* 1300 */ 'R', 'C', 'L', '8', 'r', '1', 0,
  /* 1307 */ 'S', 'H', 'L', '8', 'r', '1', 0,
  /* 1314 */ 'R', 'O', 'L', '8', 'r', '1', 0,
  /* 1321 */ 'S', 'A', 'R', '8', 'r', '1', 0,
  /* 1328 */ 'R', 'C', 'R', '8', 'r', '1', 0,
  /* 1335 */ 'S', 'H', 'R', '8', 'r', '1', 0,
  /* 1342 */ 'R', 'O', 'R', '8', 'r', '1', 0,
  /* 1349 */ 'L', 'D', '_', 'F', 'p', '0', '3', '2', 0,
  /* 1358 */ 'L', 'D', '_', 'F', 'p', '1', '3', '2', 0,
  /* 1367 */ 'A', 'T', 'O', 'M', 'S', 'U', 'B', '6', '4', '3', '2', 0,
  /* 1379 */ 'A', 'T', 'O', 'M', 'A', 'D', 'D', '6', '4', '3', '2', 0,
  /* 1391 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '6', '4', '3', '2', 0,
  /* 1403 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '6', '4', '3', '2', 0,
  /* 1416 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '6', '4', '3', '2', 0,
  /* 1428 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '6', '4', '3', '2', 0,
  /* 1441 */ 'A', 'T', 'O', 'M', 'S', 'W', 'A', 'P', '6', '4', '3', '2', 0,
  /* 1454 */ 'A', 'T', 'O', 'M', 'O', 'R', '6', '4', '3', '2', 0,
  /* 1465 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '6', '4', '3', '2', 0,
  /* 1477 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '6', '4', '3', '2', 0,
  /* 1489 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '6', '4', '3', '2', 0,
  /* 1502 */ 'I', 'N', 'V', 'L', 'P', 'G', 'A', '3', '2', 0,
  /* 1512 */ 'P', 'U', 'S', 'H', 'A', '3', '2', 0,
  /* 1520 */ 'P', 'O', 'P', 'A', '3', '2', 0,
  /* 1527 */ 'V', 'M', 'L', 'O', 'A', 'D', '3', '2', 0,
  /* 1536 */ 'L', 'X', 'A', 'D', 'D', '3', '2', 0,
  /* 1544 */ 'I', 'N', 'V', 'P', 'C', 'I', 'D', '3', '2', 0,
  /* 1554 */ 'I', 'N', 'V', 'V', 'P', 'I', 'D', '3', '2', 0,
  /* 1564 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '3', '2', 0,
  /* 1574 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '3', '2', 0,
  /* 1585 */ 'V', 'M', 'S', 'A', 'V', 'E', '3', '2', 0,
  /* 1594 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'F', '3', '2', 0,
  /* 1605 */ 'C', 'M', 'O', 'V', '_', 'V', '8', 'F', '3', '2', 0,
  /* 1616 */ 'P', 'U', 'S', 'H', 'F', '3', '2', 0,
  /* 1624 */ 'P', 'O', 'P', 'F', '3', '2', 0,
  /* 1631 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 0,
  /* 1642 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '3', '2', 0,
  /* 1652 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '3', '2', 0,
  /* 1663 */ 'V', 'M', 'R', 'U', 'N', '3', '2', 0,
  /* 1671 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', '3', '2', 0,
  /* 1690 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '3', '2', 0,
  /* 1701 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', '3', '2', 0,
  /* 1718 */ 'C', 'M', 'O', 'V', '_', 'F', 'R', '3', '2', 0,
  /* 1728 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '3', '2', 0,
  /* 1738 */ 'A', 'T', 'O', 'M', 'O', 'R', '3', '2', 0,
  /* 1747 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '3', '2', 0,
  /* 1757 */ 'S', 'C', 'A', 'S', '3', '2', 0,
  /* 1764 */ 'P', 'U', 'S', 'H', 'C', 'S', '3', '2', 0,
  /* 1773 */ 'P', 'U', 'S', 'H', 'D', 'S', '3', '2', 0,
  /* 1782 */ 'P', 'O', 'P', 'D', 'S', '3', '2', 0,
  /* 1790 */ 'P', 'U', 'S', 'H', 'E', 'S', '3', '2', 0,
  /* 1799 */ 'P', 'O', 'P', 'E', 'S', '3', '2', 0,
  /* 1807 */ 'P', 'U', 'S', 'H', 'F', 'S', '3', '2', 0,
  /* 1816 */ 'P', 'O', 'P', 'F', 'S', '3', '2', 0,
  /* 1824 */ 'P', 'U', 'S', 'H', 'G', 'S', '3', '2', 0,
  /* 1833 */ 'P', 'O', 'P', 'G', 'S', '3', '2', 0,
  /* 1841 */ 'C', 'M', 'P', 'S', '3', '2', 0,
  /* 1848 */ 'P', 'U', 'S', 'H', 'S', 'S', '3', '2', 0,
  /* 1857 */ 'P', 'O', 'P', 'S', 'S', '3', '2', 0,
  /* 1865 */ 'I', 'R', 'E', 'T', '3', '2', 0,
  /* 1872 */ 'I', 'N', 'V', 'E', 'P', 'T', '3', '2', 0,
  /* 1881 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '3', '2', 0,
  /* 1891 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '3', '2', 0,
  /* 1902 */ 'S', 'E', 'G', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '3', '2', 0,
  /* 1916 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'B', '_', '3', '2', 0,
  /* 1929 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'B', '_', '3', '2', 0,
  /* 1942 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'D', '_', '3', '2', 0,
  /* 1955 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'D', '_', '3', '2', 0,
  /* 1968 */ 'W', 'I', 'N', '_', 'F', 'T', 'O', 'L', '_', '3', '2', 0,
  /* 1980 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'W', '_', '3', '2', 0,
  /* 1993 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'W', '_', '3', '2', 0,
  /* 2006 */ 'J', 'E', 'C', 'X', 'Z', '_', '3', '2', 0,
  /* 2015 */ 'T', 'L', 'S', 'C', 'a', 'l', 'l', '_', '3', '2', 0,
  /* 2026 */ 'S', 'B', 'B', '3', '2', 'i', '3', '2', 0,
  /* 2035 */ 'S', 'U', 'B', '3', '2', 'i', '3', '2', 0,
  /* 2044 */ 'A', 'D', 'C', '3', '2', 'i', '3', '2', 0,
  /* 2053 */ 'A', 'D', 'D', '3', '2', 'i', '3', '2', 0,
  /* 2062 */ 'A', 'N', 'D', '3', '2', 'i', '3', '2', 0,
  /* 2071 */ 'C', 'M', 'P', '3', '2', 'i', '3', '2', 0,
  /* 2080 */ 'X', 'O', 'R', '3', '2', 'i', '3', '2', 0,
  /* 2089 */ 'T', 'E', 'S', 'T', '3', '2', 'i', '3', '2', 0,
  /* 2099 */ 'S', 'B', 'B', '6', '4', 'i', '3', '2', 0,
  /* 2108 */ 'S', 'U', 'B', '6', '4', 'i', '3', '2', 0,
  /* 2117 */ 'A', 'D', 'C', '6', '4', 'i', '3', '2', 0,
  /* 2126 */ 'A', 'D', 'D', '6', '4', 'i', '3', '2', 0,
  /* 2135 */ 'A', 'N', 'D', '6', '4', 'i', '3', '2', 0,
  /* 2144 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '3', '2', 0,
  /* 2154 */ 'C', 'M', 'P', '6', '4', 'i', '3', '2', 0,
  /* 2163 */ 'X', 'O', 'R', '6', '4', 'i', '3', '2', 0,
  /* 2172 */ 'T', 'E', 'S', 'T', '6', '4', 'i', '3', '2', 0,
  /* 2182 */ 'P', 'U', 'S', 'H', 'i', '3', '2', 0,
  /* 2190 */ 'S', 'B', 'B', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2200 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2215 */ 'A', 'D', 'C', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2225 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2240 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2255 */ 'C', 'M', 'P', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2265 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2280 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2294 */ 'T', 'E', 'S', 'T', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2305 */ 'M', 'O', 'V', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2315 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 'i', '3', '2', 0,
  /* 2327 */ 'S', 'B', 'B', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2337 */ 'S', 'U', 'B', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2347 */ 'A', 'D', 'C', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2357 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2367 */ 'A', 'N', 'D', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2377 */ 'C', 'M', 'P', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2387 */ 'X', 'O', 'R', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2397 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2408 */ 'M', 'O', 'V', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2418 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 'i', '3', '2', 0,
  /* 2430 */ 'C', 'A', 'L', 'L', '6', '4', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2444 */ 'J', 'M', 'P', '6', '4', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2457 */ 'C', 'A', 'L', 'L', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2469 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', '3', '2', 0,
  /* 2481 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2493 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2505 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2517 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2530 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2543 */ 'S', 'T', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2554 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2566 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2579 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2592 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2605 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2619 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2633 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2646 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2658 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2670 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2683 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '3', '2', 0,
  /* 2695 */ 'S', 'T', '_', 'F', 'p', 'P', '6', '4', 'm', '3', '2', 0,
  /* 2707 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2719 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2731 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2743 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2755 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2768 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2781 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2793 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2806 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2818 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2831 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2844 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2857 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2871 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2885 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2898 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 2910 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 2922 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 2935 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '3', '2', 0,
  /* 2947 */ 'M', 'O', 'V', '3', '2', 'a', 'o', '3', '2', 0,
  /* 2957 */ 'M', 'O', 'V', '6', '4', 'a', 'o', '3', '2', 0,
  /* 2967 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 2979 */ 'S', 'U', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 2988 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 2999 */ 'A', 'D', 'D', '_', 'F', 'p', '3', '2', 0,
  /* 3008 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3021 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3033 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3045 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3056 */ 'M', 'U', 'L', '_', 'F', 'p', '3', '2', 0,
  /* 3065 */ 'S', 'I', 'N', '_', 'F', 'p', '3', '2', 0,
  /* 3074 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '3', '2', 0,
  /* 3086 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '3', '2', 0,
  /* 3097 */ 'A', 'B', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3106 */ 'C', 'H', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3115 */ 'C', 'O', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3124 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '3', '2', 0,
  /* 3134 */ 'T', 'S', 'T', '_', 'F', 'p', '3', '2', 0,
  /* 3143 */ 'D', 'I', 'V', '_', 'F', 'p', '3', '2', 0,
  /* 3152 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '3', '2', 0,
  /* 3170 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '3', '2', 0,
  /* 3187 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '3', '2', 0,
  /* 3199 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '3', '2', 0,
  /* 3211 */ 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 3222 */ 'T', 'L', 'S', '_', 'b', 'a', 's', 'e', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 3238 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '3', '2', 0,
  /* 3249 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '3', '2', 0,
  /* 3261 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', 'r', '3', '2', 0,
  /* 3275 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', 'r', '3', '2', 0,
  /* 3289 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', 'r', '3', '2', 0,
  /* 3304 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', 'r', '3', '2', 0,
  /* 3319 */ 'F', 'L', 'D', 'L', 'G', '2', 0,
  /* 3326 */ 'F', 'L', 'D', 'L', 'N', '2', 0,
  /* 3333 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '2', 0,
  /* 3344 */ 'I', 'N', 'T', '3', 0,
  /* 3349 */ 'L', 'D', '_', 'F', 'p', '0', '6', '4', 0,
  /* 3358 */ 'L', 'D', '_', 'F', 'p', '1', '6', '4', 0,
  /* 3367 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'r', 'v', '1', '6', '4', 0,
  /* 3384 */ 'I', 'N', 'V', 'L', 'P', 'G', 'A', '6', '4', 0,
  /* 3394 */ 'V', 'M', 'L', 'O', 'A', 'D', '6', '4', 0,
  /* 3403 */ 'L', 'X', 'A', 'D', 'D', '6', '4', 0,
  /* 3411 */ 'I', 'N', 'V', 'P', 'C', 'I', 'D', '6', '4', 0,
  /* 3421 */ 'I', 'N', 'V', 'V', 'P', 'I', 'D', '6', '4', 0,
  /* 3431 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '6', '4', 0,
  /* 3441 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '6', '4', 0,
  /* 3452 */ 'R', 'D', 'F', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3463 */ 'W', 'R', 'F', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3474 */ 'R', 'D', 'G', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3485 */ 'W', 'R', 'G', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3496 */ 'L', 'E', 'A', 'V', 'E', '6', '4', 0,
  /* 3504 */ 'V', 'M', 'S', 'A', 'V', 'E', '6', '4', 0,
  /* 3513 */ 'F', 'X', 'S', 'A', 'V', 'E', '6', '4', 0,
  /* 3522 */ 'C', 'M', 'O', 'V', '_', 'V', '2', 'F', '6', '4', 0,
  /* 3533 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'F', '6', '4', 0,
  /* 3544 */ 'P', 'U', 'S', 'H', 'F', '6', '4', 0,
  /* 3552 */ 'P', 'O', 'P', 'F', '6', '4', 0,
  /* 3559 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 0,
  /* 3570 */ 'C', 'M', 'O', 'V', '_', 'V', '2', 'I', '6', '4', 0,
  /* 3581 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'I', '6', '4', 0,
  /* 3592 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '6', '4', 0,
  /* 3602 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '6', '4', 0,
  /* 3612 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '6', '4', 0,
  /* 3623 */ 'E', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '6', '4', 0,
  /* 3635 */ 'V', 'M', 'R', 'U', 'N', '6', '4', 0,
  /* 3643 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', '6', '4', 0,
  /* 3662 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '6', '4', 0,
  /* 3673 */ 'F', 'A', 'R', 'J', 'M', 'P', '6', '4', 0,
  /* 3682 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', '6', '4', 0,
  /* 3699 */ 'M', 'M', 'X', '_', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', '6', '4', 0,
  /* 3714 */ 'C', 'M', 'O', 'V', '_', 'F', 'R', '6', '4', 0,
  /* 3724 */ 'A', 'T', 'O', 'M', 'O', 'R', '6', '4', 0,
  /* 3733 */ 'F', 'X', 'R', 'S', 'T', 'O', 'R', '6', '4', 0,
  /* 3743 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '6', '4', 0,
  /* 3753 */ 'S', 'C', 'A', 'S', '6', '4', 0,
  /* 3760 */ 'P', 'U', 'S', 'H', 'F', 'S', '6', '4', 0,
  /* 3769 */ 'P', 'O', 'P', 'F', 'S', '6', '4', 0,
  /* 3777 */ 'P', 'U', 'S', 'H', 'G', 'S', '6', '4', 0,
  /* 3786 */ 'P', 'O', 'P', 'G', 'S', '6', '4', 0,
  /* 3794 */ 'C', 'M', 'P', 'S', '6', '4', 0,
  /* 3801 */ 'I', 'R', 'E', 'T', '6', '4', 0,
  /* 3808 */ 'S', 'Y', 'S', 'R', 'E', 'T', '6', '4', 0,
  /* 3817 */ 'S', 'Y', 'S', 'E', 'X', 'I', 'T', '6', '4', 0,
  /* 3827 */ 'I', 'N', 'V', 'E', 'P', 'T', '6', '4', 0,
  /* 3836 */ 'X', 'S', 'A', 'V', 'E', 'O', 'P', 'T', '6', '4', 0,
  /* 3847 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Q', 'U', '6', '4', 0,
  /* 3861 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '6', '4', 0,
  /* 3871 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '6', '4', 0,
  /* 3882 */ 'S', 'E', 'G', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '6', '4', 0,
  /* 3896 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'B', '_', '6', '4', 0,
  /* 3909 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'B', '_', '6', '4', 0,
  /* 3922 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'D', '_', '6', '4', 0,
  /* 3935 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'D', '_', '6', '4', 0,
  /* 3948 */ 'V', 'A', 'A', 'R', 'G', '_', '6', '4', 0,
  /* 3957 */ 'W', 'I', 'N', '_', 'F', 'T', 'O', 'L', '_', '6', '4', 0,
  /* 3969 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'Q', '_', '6', '4', 0,
  /* 3982 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'Q', '_', '6', '4', 0,
  /* 3995 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'W', '_', '6', '4', 0,
  /* 4008 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'W', '_', '6', '4', 0,
  /* 4021 */ 'J', 'E', 'C', 'X', 'Z', '_', '6', '4', 0,
  /* 4030 */ 'T', 'L', 'S', 'C', 'a', 'l', 'l', '_', '6', '4', 0,
  /* 4041 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'd', '6', '4', 0,
  /* 4052 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '6', '4', 0,
  /* 4065 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'm', 'i', '6', '4', 0,
  /* 4078 */ 'M', 'O', 'V', '3', '2', 'r', 'i', '6', '4', 0,
  /* 4088 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '6', '4', 0,
  /* 4101 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', '6', '4', 0,
  /* 4113 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4125 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4137 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4149 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4162 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4175 */ 'S', 'T', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4186 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4198 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4211 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4224 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4237 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4251 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4265 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4278 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4290 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4302 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4315 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4327 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4339 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4352 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'm', '6', '4', 0,
  /* 4364 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4377 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4390 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4403 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4417 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4431 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4444 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4456 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4468 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4481 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'm', '6', '4', 0,
  /* 4492 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'm', '6', '4', 0,
  /* 4507 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'm', '6', '4', 0,
  /* 4522 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '6', '4', 0,
  /* 4536 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'm', '6', '4', 0,
  /* 4551 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'r', 'm', '6', '4', 0,
  /* 4565 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'm', '6', '4', 0,
  /* 4580 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '6', '4', 0,
  /* 4594 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'm', '6', '4', 0,
  /* 4609 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'm', '6', '4', 0,
  /* 4624 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'm', '6', '4', 0,
  /* 4639 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4653 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4671 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4687 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4703 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4720 */ 'M', 'O', 'V', '6', '4', 'a', 'o', '6', '4', 0,
  /* 4730 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 4742 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 4751 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 4762 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 0,
  /* 4771 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 4784 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 4796 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 4808 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 4819 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 0,
  /* 4828 */ 'S', 'I', 'N', '_', 'F', 'p', '6', '4', 0,
  /* 4837 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '6', '4', 0,
  /* 4849 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '6', '4', 0,
  /* 4860 */ 'A', 'B', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 4869 */ 'C', 'H', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 4878 */ 'C', 'O', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 4887 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '6', '4', 0,
  /* 4897 */ 'T', 'S', 'T', '_', 'F', 'p', '6', '4', 0,
  /* 4906 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 0,
  /* 4915 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '6', '4', 0,
  /* 4933 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '6', '4', 0,
  /* 4950 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'r', '6', '4', 0,
  /* 4962 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '6', '4', 0,
  /* 4974 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'r', '6', '4', 0,
  /* 4985 */ 'X', 'C', 'H', 'G', '3', '2', 'a', 'r', '6', '4', 0,
  /* 4996 */ 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 5007 */ 'T', 'L', 'S', '_', 'b', 'a', 's', 'e', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 5023 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '6', '4', 0,
  /* 5034 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'r', '6', '4', 0,
  /* 5049 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'r', '6', '4', 0,
  /* 5064 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'r', 'r', '6', '4', 0,
  /* 5076 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '6', '4', 0,
  /* 5090 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'r', '6', '4', 0,
  /* 5105 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'r', 'r', '6', '4', 0,
  /* 5119 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'r', '6', '4', 0,
  /* 5134 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', 'r', '6', '4', 0,
  /* 5148 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '6', '4', 0,
  /* 5162 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', 'r', '6', '4', 0,
  /* 5176 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'r', 'r', '6', '4', 0,
  /* 5191 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'r', '6', '4', 0,
  /* 5206 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'r', '6', '4', 0,
  /* 5221 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'r', '6', '4', 0,
  /* 5236 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5250 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5268 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5284 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5300 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5317 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', 'r', '6', '4', 0,
  /* 5332 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', 'r', '6', '4', 0,
  /* 5347 */ 'J', 'A', '_', '4', 0,
  /* 5352 */ 'J', 'B', '_', '4', 0,
  /* 5357 */ 'J', 'A', 'E', '_', '4', 0,
  /* 5363 */ 'J', 'B', 'E', '_', '4', 0,
  /* 5369 */ 'J', 'G', 'E', '_', '4', 0,
  /* 5375 */ 'J', 'E', '_', '4', 0,
  /* 5380 */ 'J', 'L', 'E', '_', '4', 0,
  /* 5386 */ 'J', 'N', 'E', '_', '4', 0,
  /* 5392 */ 'J', 'G', '_', '4', 0,
  /* 5397 */ 'J', 'L', '_', '4', 0,
  /* 5402 */ 'X', 'B', 'E', 'G', 'I', 'N', '_', '4', 0,
  /* 5411 */ 'J', 'O', '_', '4', 0,
  /* 5416 */ 'J', 'N', 'O', '_', '4', 0,
  /* 5422 */ 'J', 'P', '_', '4', 0,
  /* 5427 */ 'J', 'M', 'P', '_', '4', 0,
  /* 5433 */ 'J', 'N', 'P', '_', '4', 0,
  /* 5439 */ 'J', 'S', '_', '4', 0,
  /* 5444 */ 'J', 'N', 'S', '_', '4', 0,
  /* 5450 */ 'L', 'X', 'A', 'D', 'D', '1', '6', 0,
  /* 5458 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '1', '6', 0,
  /* 5468 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '1', '6', 0,
  /* 5479 */ 'P', 'U', 'S', 'H', 'F', '1', '6', 0,
  /* 5487 */ 'P', 'O', 'P', 'F', '1', '6', 0,
  /* 5494 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 0,
  /* 5505 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '1', '6', 0,
  /* 5515 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '1', '6', 0,
  /* 5526 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '1', '6', 0,
  /* 5536 */ 'A', 'T', 'O', 'M', 'O', 'R', '1', '6', 0,
  /* 5545 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '1', '6', 0,
  /* 5555 */ 'S', 'C', 'A', 'S', '1', '6', 0,
  /* 5562 */ 'P', 'U', 'S', 'H', 'C', 'S', '1', '6', 0,
  /* 5571 */ 'P', 'U', 'S', 'H', 'D', 'S', '1', '6', 0,
  /* 5580 */ 'P', 'O', 'P', 'D', 'S', '1', '6', 0,
  /* 5588 */ 'P', 'U', 'S', 'H', 'E', 'S', '1', '6', 0,
  /* 5597 */ 'P', 'O', 'P', 'E', 'S', '1', '6', 0,
  /* 5605 */ 'P', 'U', 'S', 'H', 'F', 'S', '1', '6', 0,
  /* 5614 */ 'P', 'O', 'P', 'F', 'S', '1', '6', 0,
  /* 5622 */ 'P', 'U', 'S', 'H', 'G', 'S', '1', '6', 0,
  /* 5631 */ 'P', 'O', 'P', 'G', 'S', '1', '6', 0,
  /* 5639 */ 'C', 'M', 'P', 'S', '1', '6', 0,
  /* 5646 */ 'P', 'U', 'S', 'H', 'S', 'S', '1', '6', 0,
  /* 5655 */ 'P', 'O', 'P', 'S', 'S', '1', '6', 0,
  /* 5663 */ 'I', 'R', 'E', 'T', '1', '6', 0,
  /* 5670 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '1', '6', 0,
  /* 5680 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '1', '6', 0,
  /* 5691 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '1', '6', 0,
  /* 5701 */ 'S', 'B', 'B', '1', '6', 'i', '1', '6', 0,
  /* 5710 */ 'S', 'U', 'B', '1', '6', 'i', '1', '6', 0,
  /* 5719 */ 'A', 'D', 'C', '1', '6', 'i', '1', '6', 0,
  /* 5728 */ 'A', 'D', 'D', '1', '6', 'i', '1', '6', 0,
  /* 5737 */ 'A', 'N', 'D', '1', '6', 'i', '1', '6', 0,
  /* 5746 */ 'C', 'M', 'P', '1', '6', 'i', '1', '6', 0,
  /* 5755 */ 'X', 'O', 'R', '1', '6', 'i', '1', '6', 0,
  /* 5764 */ 'T', 'E', 'S', 'T', '1', '6', 'i', '1', '6', 0,
  /* 5774 */ 'P', 'U', 'S', 'H', 'i', '1', '6', 0,
  /* 5782 */ 'C', 'A', 'L', 'L', 'p', 'c', 'r', 'e', 'l', '1', '6', 0,
  /* 5794 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '1', '6', 0,
  /* 5806 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'm', '1', '6', 0,
  /* 5818 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'm', '1', '6', 0,
  /* 5830 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '1', '6', 0,
  /* 5842 */ 'M', 'O', 'V', '6', '4', 'a', 'o', '1', '6', 0,
  /* 5852 */ 'M', 'O', 'V', '1', '6', 'a', 'o', '1', '6', 0,
  /* 5862 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '1', '6', 0,
  /* 5874 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'r', '1', '6', 0,
  /* 5886 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'r', '1', '6', 0,
  /* 5898 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '1', '6', 0,
  /* 5910 */ 'X', 'S', 'H', 'A', '2', '5', '6', 0,
  /* 5918 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '2', '5', '6', 0,
  /* 5930 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '2', '5', '6', 0,
  /* 5942 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5954 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5970 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5984 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5998 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 6013 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '2', '5', '6', 0,
  /* 6025 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '2', '5', '6', 0,
  /* 6037 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6049 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6065 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6079 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6093 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6108 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'F', '1', '2', '8', 0,
  /* 6123 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'I', '1', '2', '8', 0,
  /* 6138 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '1', '2', '8', 0,
  /* 6150 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '1', '2', '8', 0,
  /* 6162 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6174 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6190 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6204 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6218 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6233 */ 'V', 'P', 'H', 'M', 'I', 'N', 'P', 'O', 'S', 'U', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6250 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '1', '2', '8', 0,
  /* 6262 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '1', '2', '8', 0,
  /* 6274 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6286 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6302 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6316 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6330 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6345 */ 'V', 'P', 'H', 'M', 'I', 'N', 'P', 'O', 'S', 'U', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6362 */ 'L', 'X', 'A', 'D', 'D', '8', 0,
  /* 6369 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '8', 0,
  /* 6378 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '8', 0,
  /* 6388 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 0,
  /* 6398 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '8', 0,
  /* 6407 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '8', 0,
  /* 6417 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '8', 0,
  /* 6426 */ 'A', 'T', 'O', 'M', 'O', 'R', '8', 0,
  /* 6434 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '8', 0,
  /* 6443 */ 'S', 'C', 'A', 'S', '8', 0,
  /* 6449 */ 'C', 'M', 'P', 'S', '8', 0,
  /* 6455 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '8', 0,
  /* 6464 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '8', 0,
  /* 6474 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '8', 0,
  /* 6483 */ 'S', 'B', 'B', '8', 'i', '8', 0,
  /* 6490 */ 'S', 'U', 'B', '8', 'i', '8', 0,
  /* 6497 */ 'A', 'D', 'C', '8', 'i', '8', 0,
  /* 6504 */ 'A', 'A', 'D', '8', 'i', '8', 0,
  /* 6511 */ 'A', 'D', 'D', '8', 'i', '8', 0,
  /* 6518 */ 'A', 'N', 'D', '8', 'i', '8', 0,
  /* 6525 */ 'A', 'A', 'M', '8', 'i', '8', 0,
  /* 6532 */ 'C', 'M', 'P', '8', 'i', '8', 0,
  /* 6539 */ 'X', 'O', 'R', '8', 'i', '8', 0,
  /* 6546 */ 'T', 'E', 'S', 'T', '8', 'i', '8', 0,
  /* 6554 */ 'P', 'U', 'S', 'H', 'i', '8', 0,
  /* 6561 */ 'S', 'B', 'B', '3', '2', 'm', 'i', '8', 0,
  /* 6570 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'i', '8', 0,
  /* 6584 */ 'A', 'D', 'C', '3', '2', 'm', 'i', '8', 0,
  /* 6593 */ 'B', 'T', 'C', '3', '2', 'm', 'i', '8', 0,
  /* 6602 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'i', '8', 0,
  /* 6616 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'i', '8', 0,
  /* 6630 */ 'C', 'M', 'P', '3', '2', 'm', 'i', '8', 0,
  /* 6639 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 6653 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 6666 */ 'B', 'T', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 6675 */ 'B', 'T', 'S', '3', '2', 'm', 'i', '8', 0,
  /* 6684 */ 'B', 'T', '3', '2', 'm', 'i', '8', 0,
  /* 6692 */ 'S', 'B', 'B', '6', '4', 'm', 'i', '8', 0,
  /* 6701 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'i', '8', 0,
  /* 6715 */ 'A', 'D', 'C', '6', '4', 'm', 'i', '8', 0,
  /* 6724 */ 'B', 'T', 'C', '6', '4', 'm', 'i', '8', 0,
  /* 6733 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'i', '8', 0,
  /* 6747 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'i', '8', 0,
  /* 6761 */ 'C', 'M', 'P', '6', '4', 'm', 'i', '8', 0,
  /* 6770 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 6784 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 6797 */ 'B', 'T', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 6806 */ 'B', 'T', 'S', '6', '4', 'm', 'i', '8', 0,
  /* 6815 */ 'B', 'T', '6', '4', 'm', 'i', '8', 0,
  /* 6823 */ 'S', 'B', 'B', '1', '6', 'm', 'i', '8', 0,
  /* 6832 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'i', '8', 0,
  /* 6846 */ 'A', 'D', 'C', '1', '6', 'm', 'i', '8', 0,
  /* 6855 */ 'B', 'T', 'C', '1', '6', 'm', 'i', '8', 0,
  /* 6864 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'i', '8', 0,
  /* 6878 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'i', '8', 0,
  /* 6892 */ 'C', 'M', 'P', '1', '6', 'm', 'i', '8', 0,
  /* 6901 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 6915 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 6928 */ 'B', 'T', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 6937 */ 'B', 'T', 'S', '1', '6', 'm', 'i', '8', 0,
  /* 6946 */ 'B', 'T', '1', '6', 'm', 'i', '8', 0,
  /* 6954 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 'i', '8', 0,
  /* 6965 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 'i', '8', 0,
  /* 6976 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 'i', '8', 0,
  /* 6987 */ 'S', 'B', 'B', '3', '2', 'r', 'i', '8', 0,
  /* 6996 */ 'S', 'U', 'B', '3', '2', 'r', 'i', '8', 0,
  /* 7005 */ 'A', 'D', 'C', '3', '2', 'r', 'i', '8', 0,
  /* 7014 */ 'B', 'T', 'C', '3', '2', 'r', 'i', '8', 0,
  /* 7023 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '8', 0,
  /* 7032 */ 'A', 'N', 'D', '3', '2', 'r', 'i', '8', 0,
  /* 7041 */ 'C', 'M', 'P', '3', '2', 'r', 'i', '8', 0,
  /* 7050 */ 'X', 'O', 'R', '3', '2', 'r', 'i', '8', 0,
  /* 7059 */ 'B', 'T', 'R', '3', '2', 'r', 'i', '8', 0,
  /* 7068 */ 'B', 'T', 'S', '3', '2', 'r', 'i', '8', 0,
  /* 7077 */ 'B', 'T', '3', '2', 'r', 'i', '8', 0,
  /* 7085 */ 'S', 'B', 'B', '6', '4', 'r', 'i', '8', 0,
  /* 7094 */ 'S', 'U', 'B', '6', '4', 'r', 'i', '8', 0,
  /* 7103 */ 'A', 'D', 'C', '6', '4', 'r', 'i', '8', 0,
  /* 7112 */ 'B', 'T', 'C', '6', '4', 'r', 'i', '8', 0,
  /* 7121 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '8', 0,
  /* 7130 */ 'A', 'N', 'D', '6', '4', 'r', 'i', '8', 0,
  /* 7139 */ 'C', 'M', 'P', '6', '4', 'r', 'i', '8', 0,
  /* 7148 */ 'X', 'O', 'R', '6', '4', 'r', 'i', '8', 0,
  /* 7157 */ 'B', 'T', 'R', '6', '4', 'r', 'i', '8', 0,
  /* 7166 */ 'B', 'T', 'S', '6', '4', 'r', 'i', '8', 0,
  /* 7175 */ 'B', 'T', '6', '4', 'r', 'i', '8', 0,
  /* 7183 */ 'S', 'B', 'B', '1', '6', 'r', 'i', '8', 0,
  /* 7192 */ 'S', 'U', 'B', '1', '6', 'r', 'i', '8', 0,
  /* 7201 */ 'A', 'D', 'C', '1', '6', 'r', 'i', '8', 0,
  /* 7210 */ 'B', 'T', 'C', '1', '6', 'r', 'i', '8', 0,
  /* 7219 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '8', 0,
  /* 7228 */ 'A', 'N', 'D', '1', '6', 'r', 'i', '8', 0,
  /* 7237 */ 'C', 'M', 'P', '1', '6', 'r', 'i', '8', 0,
  /* 7246 */ 'X', 'O', 'R', '1', '6', 'r', 'i', '8', 0,
  /* 7255 */ 'B', 'T', 'R', '1', '6', 'r', 'i', '8', 0,
  /* 7264 */ 'B', 'T', 'S', '1', '6', 'r', 'i', '8', 0,
  /* 7273 */ 'B', 'T', '1', '6', 'r', 'i', '8', 0,
  /* 7281 */ 'S', 'H', 'L', 'D', '3', '2', 'm', 'r', 'i', '8', 0,
  /* 7292 */ 'S', 'H', 'R', 'D', '3', '2', 'm', 'r', 'i', '8', 0,
  /* 7303 */ 'S', 'H', 'L', 'D', '6', '4', 'm', 'r', 'i', '8', 0,
  /* 7314 */ 'S', 'H', 'R', 'D', '6', '4', 'm', 'r', 'i', '8', 0,
  /* 7325 */ 'S', 'H', 'L', 'D', '1', '6', 'm', 'r', 'i', '8', 0,
  /* 7336 */ 'S', 'H', 'R', 'D', '1', '6', 'm', 'r', 'i', '8', 0,
  /* 7347 */ 'S', 'H', 'L', 'D', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7358 */ 'S', 'H', 'R', 'D', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7369 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7380 */ 'S', 'H', 'L', 'D', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7391 */ 'S', 'H', 'R', 'D', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7402 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7413 */ 'S', 'H', 'L', 'D', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7424 */ 'S', 'H', 'R', 'D', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7435 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7446 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '8', 0,
  /* 7457 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'm', '8', 0,
  /* 7468 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'm', '8', 0,
  /* 7479 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'm', '8', 0,
  /* 7490 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '8', 0,
  /* 7501 */ 'M', 'O', 'V', 'S', 'X', '1', '6', 'r', 'm', '8', 0,
  /* 7512 */ 'M', 'O', 'V', 'Z', 'X', '1', '6', 'r', 'm', '8', 0,
  /* 7523 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', '_', 'N', 'O', 'R', 'E', 'X', 'r', 'm', '8', 0,
  /* 7540 */ 'M', 'O', 'V', '6', '4', 'a', 'o', '8', 0,
  /* 7549 */ 'M', 'O', 'V', '8', 'a', 'o', '8', 0,
  /* 7557 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '8', 0,
  /* 7568 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'r', '8', 0,
  /* 7579 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'r', '8', 0,
  /* 7590 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'r', '8', 0,
  /* 7601 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '8', 0,
  /* 7612 */ 'M', 'O', 'V', 'S', 'X', '1', '6', 'r', 'r', '8', 0,
  /* 7623 */ 'M', 'O', 'V', 'Z', 'X', '1', '6', 'r', 'r', '8', 0,
  /* 7634 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', '_', 'N', 'O', 'R', 'E', 'X', 'r', 'r', '8', 0,
  /* 7651 */ 'A', 'A', 'A', 0,
  /* 7655 */ 'D', 'A', 'A', 0,
  /* 7659 */ 'W', '6', '4', 'A', 'L', 'L', 'O', 'C', 'A', 0,
  /* 7669 */ 'W', 'I', 'N', '_', 'A', 'L', 'L', 'O', 'C', 'A', 0,
  /* 7680 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'N', 'T', 'A', 0,
  /* 7692 */ 'K', 'S', 'E', 'T', '0', 'B', 0,
  /* 7699 */ 'K', 'S', 'E', 'T', '1', 'B', 0,
  /* 7706 */ 'U', 'D', '2', 'B', 0,
  /* 7711 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'B', 0,
  /* 7723 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'B', 0,
  /* 7734 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'E', 'C', 'B', 0,
  /* 7744 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '3', '2', '_', 'D', 'B', 0,
  /* 7757 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 7769 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 7781 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 7793 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '_', 'D', 'B', 0,
  /* 7804 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '_', 'D', 'B', 0,
  /* 7815 */ 'A', 'D', 'D', '3', '2', 'r', 'r', '_', 'D', 'B', 0,
  /* 7826 */ 'A', 'D', 'D', '6', '4', 'r', 'r', '_', 'D', 'B', 0,
  /* 7837 */ 'A', 'D', 'D', '1', '6', 'r', 'r', '_', 'D', 'B', 0,
  /* 7848 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'F', 'B', 0,
  /* 7858 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'O', 'F', 'B', 0,
  /* 7868 */ 'L', 'O', 'D', 'S', 'B', 0,
  /* 7874 */ 'S', 'T', 'O', 'S', 'B', 0,
  /* 7880 */ 'O', 'U', 'T', 'S', 'B', 0,
  /* 7886 */ 'M', 'O', 'V', 'S', 'B', 0,
  /* 7892 */ 'C', 'L', 'A', 'C', 0,
  /* 7897 */ 'S', 'T', 'A', 'C', 0,
  /* 7902 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'B', 'C', 0,
  /* 7912 */ 'C', 'L', 'C', 0,
  /* 7916 */ 'C', 'M', 'C', 0,
  /* 7920 */ 'R', 'D', 'P', 'M', 'C', 0,
  /* 7926 */ 'V', 'M', 'F', 'U', 'N', 'C', 0,
  /* 7933 */ 'R', 'D', 'T', 'S', 'C', 0,
  /* 7939 */ 'S', 'T', 'C', 0,
  /* 7943 */ 'C', 'P', 'U', 'I', 'D', 0,
  /* 7949 */ 'C', 'L', 'D', 0,
  /* 7953 */ 'X', 'E', 'N', 'D', 0,
  /* 7958 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 7971 */ 'F', 's', 'F', 'L', 'D', '0', 'S', 'D', 0,
  /* 7980 */ 'L', 'O', 'D', 'S', 'D', 0,
  /* 7986 */ 'S', 'T', 'O', 'S', 'D', 0,
  /* 7992 */ 'M', 'O', 'V', 'N', 'T', 'S', 'D', 0,
  /* 8000 */ 'O', 'U', 'T', 'S', 'D', 0,
  /* 8006 */ 'M', 'O', 'V', 'S', 'D', 0,
  /* 8012 */ 'S', 'T', 'D', 0,
  /* 8016 */ 'W', 'B', 'I', 'N', 'V', 'D', 0,
  /* 8023 */ 'C', 'W', 'D', 0,
  /* 8027 */ 'F', 'L', 'D', 'L', '2', 'E', 0,
  /* 8034 */ 'L', 'F', 'E', 'N', 'C', 'E', 0,
  /* 8041 */ 'M', 'F', 'E', 'N', 'C', 'E', 0,
  /* 8048 */ 'S', 'F', 'E', 'N', 'C', 'E', 0,
  /* 8055 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 8068 */ 'C', 'W', 'D', 'E', 0,
  /* 8073 */ 'F', 'F', 'R', 'E', 'E', 0,
  /* 8079 */ 'F', 'S', 'C', 'A', 'L', 'E', 0,
  /* 8086 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 8093 */ 'V', 'M', 'R', 'E', 'S', 'U', 'M', 'E', 0,
  /* 8102 */ 'L', 'O', 'O', 'P', 'N', 'E', 0,
  /* 8109 */ 'L', 'O', 'O', 'P', 'E', 0,
  /* 8115 */ 'C', 'D', 'Q', 'E', 0,
  /* 8120 */ 'X', 'S', 'T', 'O', 'R', 'E', 0,
  /* 8127 */ 'R', 'D', 'F', 'S', 'B', 'A', 'S', 'E', 0,
  /* 8136 */ 'W', 'R', 'F', 'S', 'B', 'A', 'S', 'E', 0,
  /* 8145 */ 'R', 'D', 'G', 'S', 'B', 'A', 'S', 'E', 0,
  /* 8154 */ 'W', 'R', 'G', 'S', 'B', 'A', 'S', 'E', 0,
  /* 8163 */ 'P', 'A', 'U', 'S', 'E', 0,
  /* 8169 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 8179 */ 'L', 'E', 'A', 'V', 'E', 0,
  /* 8185 */ 'F', 'X', 'S', 'A', 'V', 'E', 0,
  /* 8192 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 8205 */ 'V', 'M', 'X', 'O', 'F', 'F', 0,
  /* 8212 */ 'L', 'A', 'H', 'F', 0,
  /* 8217 */ 'S', 'A', 'H', 'F', 0,
  /* 8222 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 0,
  /* 8231 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 0,
  /* 8239 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 0,
  /* 8249 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 0,
  /* 8258 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 0,
  /* 8267 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 0,
  /* 8275 */ 'X', 'C', 'H', '_', 'F', 0,
  /* 8281 */ 'S', 'I', 'N', '_', 'F', 0,
  /* 8287 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 0,
  /* 8296 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 0,
  /* 8304 */ 'A', 'B', 'S', '_', 'F', 0,
  /* 8310 */ 'C', 'H', 'S', '_', 'F', 0,
  /* 8316 */ 'C', 'O', 'S', '_', 'F', 0,
  /* 8322 */ 'S', 'Q', 'R', 'T', '_', 'F', 0,
  /* 8329 */ 'T', 'S', 'T', '_', 'F', 0,
  /* 8335 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'R', 'E', 'G', 0,
  /* 8352 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'R', 'E', 'G', 0,
  /* 8369 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 8384 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 8398 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'R', 'E', 'G', 0,
  /* 8412 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'R', 'E', 'G', 0,
  /* 8426 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 8440 */ 'I', 'N', 'V', 'L', 'P', 'G', 0,
  /* 8447 */ 'V', 'M', 'L', 'A', 'U', 'N', 'C', 'H', 0,
  /* 8456 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 0,
  /* 8465 */ 'C', 'L', 'F', 'L', 'U', 'S', 'H', 0,
  /* 8473 */ 'C', 'L', 'G', 'I', 0,
  /* 8478 */ 'S', 'T', 'G', 'I', 0,
  /* 8483 */ 'P', 'H', 'I', 0,
  /* 8487 */ 'C', 'L', 'I', 0,
  /* 8491 */ 'F', 'L', 'D', 'P', 'I', 0,
  /* 8497 */ 'E', 'X', 'T', 'R', 'Q', 'I', 0,
  /* 8504 */ 'I', 'N', 'S', 'E', 'R', 'T', 'Q', 'I', 0,
  /* 8513 */ 'L', 'R', 'E', 'T', 'I', 0,
  /* 8519 */ 'S', 'T', 'I', 0,
  /* 8523 */ 'F', 'p', 'P', 'O', 'P', '_', 'R', 'E', 'T', 'V', 'A', 'L', 0,
  /* 8536 */ 'R', 'C', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8545 */ 'S', 'H', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8554 */ 'R', 'O', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8563 */ 'S', 'A', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8572 */ 'R', 'C', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8581 */ 'S', 'H', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8590 */ 'R', 'O', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8599 */ 'R', 'C', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 8608 */ 'S', 'H', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 8617 */ 'R', 'O', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 8626 */ 'S', 'A', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 8635 */ 'R', 'C', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 8644 */ 'S', 'H', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 8653 */ 'R', 'O', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 8662 */ 'R', 'C', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 8671 */ 'S', 'H', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 8680 */ 'R', 'O', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 8689 */ 'S', 'A', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 8698 */ 'R', 'C', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 8707 */ 'S', 'H', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 8716 */ 'R', 'O', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 8725 */ 'R', 'C', 'L', '8', 'm', 'C', 'L', 0,
  /* 8733 */ 'S', 'H', 'L', '8', 'm', 'C', 'L', 0,
  /* 8741 */ 'R', 'O', 'L', '8', 'm', 'C', 'L', 0,
  /* 8749 */ 'S', 'A', 'R', '8', 'm', 'C', 'L', 0,
  /* 8757 */ 'R', 'C', 'R', '8', 'm', 'C', 'L', 0,
  /* 8765 */ 'S', 'H', 'R', '8', 'm', 'C', 'L', 0,
  /* 8773 */ 'R', 'O', 'R', '8', 'm', 'C', 'L', 0,
  /* 8781 */ 'R', 'C', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 8790 */ 'S', 'H', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 8799 */ 'R', 'O', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 8808 */ 'S', 'A', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 8817 */ 'R', 'C', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 8826 */ 'S', 'H', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 8835 */ 'R', 'O', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 8844 */ 'R', 'C', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 8853 */ 'S', 'H', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 8862 */ 'R', 'O', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 8871 */ 'S', 'A', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 8880 */ 'R', 'C', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 8889 */ 'S', 'H', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 8898 */ 'R', 'O', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 8907 */ 'R', 'C', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 8916 */ 'S', 'H', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 8925 */ 'R', 'O', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 8934 */ 'S', 'A', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 8943 */ 'R', 'C', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 8952 */ 'S', 'H', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 8961 */ 'R', 'O', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 8970 */ 'R', 'C', 'L', '8', 'r', 'C', 'L', 0,
  /* 8978 */ 'S', 'H', 'L', '8', 'r', 'C', 'L', 0,
  /* 8986 */ 'R', 'O', 'L', '8', 'r', 'C', 'L', 0,
  /* 8994 */ 'S', 'A', 'R', '8', 'r', 'C', 'L', 0,
  /* 9002 */ 'R', 'C', 'R', '8', 'r', 'C', 'L', 0,
  /* 9010 */ 'S', 'H', 'R', '8', 'r', 'C', 'L', 0,
  /* 9018 */ 'R', 'O', 'R', '8', 'r', 'C', 'L', 0,
  /* 9026 */ 'S', 'H', 'L', 'D', '3', '2', 'm', 'r', 'C', 'L', 0,
  /* 9037 */ 'S', 'H', 'R', 'D', '3', '2', 'm', 'r', 'C', 'L', 0,
  /* 9048 */ 'S', 'H', 'L', 'D', '6', '4', 'm', 'r', 'C', 'L', 0,
  /* 9059 */ 'S', 'H', 'R', 'D', '6', '4', 'm', 'r', 'C', 'L', 0,
  /* 9070 */ 'S', 'H', 'L', 'D', '1', '6', 'm', 'r', 'C', 'L', 0,
  /* 9081 */ 'S', 'H', 'R', 'D', '1', '6', 'm', 'r', 'C', 'L', 0,
  /* 9092 */ 'S', 'H', 'L', 'D', '3', '2', 'r', 'r', 'C', 'L', 0,
  /* 9103 */ 'S', 'H', 'R', 'D', '3', '2', 'r', 'r', 'C', 'L', 0,
  /* 9114 */ 'S', 'H', 'L', 'D', '6', '4', 'r', 'r', 'C', 'L', 0,
  /* 9125 */ 'S', 'H', 'R', 'D', '6', '4', 'r', 'r', 'C', 'L', 0,
  /* 9136 */ 'S', 'H', 'L', 'D', '1', '6', 'r', 'r', 'C', 'L', 0,
  /* 9147 */ 'S', 'H', 'R', 'D', '1', '6', 'r', 'r', 'C', 'L', 0,
  /* 9158 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 9167 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 9180 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 9189 */ 'V', 'M', 'M', 'C', 'A', 'L', 'L', 0,
  /* 9197 */ 'V', 'M', 'C', 'A', 'L', 'L', 0,
  /* 9204 */ 'S', 'Y', 'S', 'C', 'A', 'L', 'L', 0,
  /* 9212 */ 'V', 'Z', 'E', 'R', 'O', 'A', 'L', 'L', 0,
  /* 9221 */ 'K', 'I', 'L', 'L', 0,
  /* 9226 */ 'N', 'O', 'O', 'P', 'L', 0,
  /* 9232 */ 'L', 'R', 'E', 'T', 'L', 0,
  /* 9238 */ 'M', 'O', 'N', 'T', 'M', 'U', 'L', 0,
  /* 9246 */ 'F', 'X', 'A', 'M', 0,
  /* 9251 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'M', 'E', 'M', 0,
  /* 9268 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'M', 'E', 'M', 0,
  /* 9285 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'M', 'E', 'M', 0,
  /* 9299 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'M', 'E', 'M', 0,
  /* 9313 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9334 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9355 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9376 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9397 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9418 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9439 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9460 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9481 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9502 */ 'F', 'P', 'R', 'E', 'M', 0,
  /* 9508 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 9518 */ 'R', 'S', 'M', 0,
  /* 9522 */ 'F', 'P', 'A', 'T', 'A', 'N', 0,
  /* 9529 */ 'F', 'P', 'T', 'A', 'N', 0,
  /* 9535 */ 'X', 'B', 'E', 'G', 'I', 'N', 0,
  /* 9542 */ 'V', 'M', 'X', 'O', 'N', 0,
  /* 9548 */ 'E', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', 0,
  /* 9558 */ 'C', 'Q', 'O', 0,
  /* 9562 */ 'I', 'N', 'T', 'O', 0,
  /* 9567 */ 'T', 'R', 'A', 'P', 0,
  /* 9572 */ 'R', 'D', 'T', 'S', 'C', 'P', 0,
  /* 9579 */ 'F', 'N', 'O', 'P', 0,
  /* 9584 */ 'L', 'O', 'O', 'P', 0,
  /* 9589 */ 'N', 'O', 'O', 'P', 0,
  /* 9594 */ 'F', 'C', 'O', 'M', 'P', 'P', 0,
  /* 9601 */ 'F', 'D', 'E', 'C', 'S', 'T', 'P', 0,
  /* 9609 */ 'F', 'I', 'N', 'C', 'S', 'T', 'P', 0,
  /* 9617 */ 'C', 'D', 'Q', 0,
  /* 9621 */ 'E', 'X', 'T', 'R', 'Q', 0,
  /* 9627 */ 'L', 'O', 'D', 'S', 'Q', 0,
  /* 9633 */ 'S', 'T', 'O', 'S', 'Q', 0,
  /* 9639 */ 'M', 'O', 'V', 'S', 'Q', 0,
  /* 9645 */ 'L', 'R', 'E', 'T', 'Q', 0,
  /* 9651 */ 'I', 'N', 'S', 'E', 'R', 'T', 'Q', 0,
  /* 9659 */ 'M', 'M', 'X', '_', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 0,
  /* 9672 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '1', '6', '_', 'Q', 0,
  /* 9686 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '1', '6', '_', 'Q', 0,
  /* 9700 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '8', '_', 'Q', 0,
  /* 9713 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '8', '_', 'Q', 0,
  /* 9726 */ 'V', 'Z', 'E', 'R', 'O', 'U', 'P', 'P', 'E', 'R', 0,
  /* 9737 */ 'S', 'Y', 'S', 'E', 'N', 'T', 'E', 'R', 0,
  /* 9746 */ 'M', 'O', 'N', 'I', 'T', 'O', 'R', 0,
  /* 9754 */ 'F', 'X', 'R', 'S', 'T', 'O', 'R', 0,
  /* 9762 */ 'V', 'L', 'D', 'M', 'X', 'C', 'S', 'R', 0,
  /* 9771 */ 'V', 'S', 'T', 'M', 'X', 'C', 'S', 'R', 0,
  /* 9780 */ 'R', 'D', 'M', 'S', 'R', 0,
  /* 9786 */ 'W', 'R', 'M', 'S', 'R', 0,
  /* 9792 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'T', 'R', 0,
  /* 9802 */ 'A', 'A', 'S', 0,
  /* 9806 */ 'D', 'A', 'S', 0,
  /* 9810 */ 'A', 'V', 'X', '2', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9826 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9839 */ 'V', 'A', 'S', 'T', 'A', 'R', 'T', '_', 'S', 'A', 'V', 'E', '_', 'X', 'M', 'M', '_', 'R', 'E', 'G', 'S', 0,
  /* 9861 */ 'S', 'W', 'A', 'P', 'G', 'S', 0,
  /* 9868 */ 'F', 'E', 'M', 'M', 'S', 0,
  /* 9874 */ 'M', 'M', 'X', '_', 'E', 'M', 'M', 'S', 0,
  /* 9883 */ 'F', 'S', 'I', 'N', 'C', 'O', 'S', 0,
  /* 9891 */ 'F', 's', 'F', 'L', 'D', '0', 'S', 'S', 0,
  /* 9900 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 9917 */ 'M', 'O', 'V', 'N', 'T', 'S', 'S', 0,
  /* 9925 */ 'C', 'L', 'T', 'S', 0,
  /* 9930 */ 'F', 'L', 'D', 'L', '2', 'T', 0,
  /* 9937 */ 'X', 'L', 'A', 'T', 0,
  /* 9942 */ 'F', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 9950 */ 'S', 'Y', 'S', 'R', 'E', 'T', 0,
  /* 9957 */ 'M', 'O', 'R', 'E', 'S', 'T', 'A', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 9971 */ 'W', 'A', 'I', 'T', 0,
  /* 9976 */ 'S', 'K', 'I', 'N', 'I', 'T', 0,
  /* 9983 */ 'F', 'N', 'I', 'N', 'I', 'T', 0,
  /* 9990 */ 'S', 'Y', 'S', 'E', 'X', 'I', 'T', 0,
  /* 9998 */ 'H', 'L', 'T', 0,
  /* 10002 */ 'F', 'R', 'N', 'D', 'I', 'N', 'T', 0,
  /* 10010 */ 'X', 'S', 'A', 'V', 'E', 'O', 'P', 'T', 0,
  /* 10019 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10034 */ 'X', 'A', 'B', 'O', 'R', 'T', 0,
  /* 10041 */ 'X', 'T', 'E', 'S', 'T', 0,
  /* 10047 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Q', 'U', 0,
  /* 10059 */ 'X', 'G', 'E', 'T', 'B', 'V', 0,
  /* 10066 */ 'X', 'S', 'E', 'T', 'B', 'V', 0,
  /* 10073 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10093 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10110 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10128 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10148 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10165 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10183 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10203 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10220 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10238 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10258 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10275 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10293 */ 'S', 'B', 'B', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10305 */ 'S', 'U', 'B', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10317 */ 'A', 'D', 'C', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10329 */ 'A', 'D', 'D', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10341 */ 'A', 'N', 'D', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10353 */ 'C', 'M', 'P', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10365 */ 'X', 'O', 'R', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10377 */ 'M', 'O', 'V', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10389 */ 'S', 'B', 'B', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10401 */ 'S', 'U', 'B', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10413 */ 'A', 'D', 'C', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10425 */ 'A', 'D', 'D', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10437 */ 'A', 'N', 'D', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10449 */ 'C', 'M', 'P', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10461 */ 'X', 'O', 'R', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10473 */ 'M', 'O', 'V', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10485 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10504 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10520 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10537 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10556 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10572 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10589 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10605 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10622 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10638 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10655 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10674 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10690 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10707 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10726 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10742 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10759 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10775 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10792 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10808 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10825 */ 'S', 'B', 'B', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10837 */ 'S', 'U', 'B', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10849 */ 'A', 'D', 'C', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10861 */ 'A', 'D', 'D', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10873 */ 'A', 'N', 'D', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10885 */ 'C', 'M', 'P', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10897 */ 'X', 'O', 'R', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10909 */ 'M', 'O', 'V', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10921 */ 'S', 'B', 'B', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10932 */ 'S', 'U', 'B', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10943 */ 'A', 'D', 'C', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10954 */ 'A', 'D', 'D', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10965 */ 'A', 'N', 'D', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10976 */ 'C', 'M', 'P', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10987 */ 'X', 'O', 'R', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10998 */ 'M', 'O', 'V', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11009 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11023 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11037 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11051 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11064 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11078 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11092 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11105 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11119 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11134 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11149 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11164 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11179 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11194 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11209 */ 'K', 'S', 'E', 'T', '0', 'W', 0,
  /* 11216 */ 'K', 'S', 'E', 'T', '1', 'W', 0,
  /* 11223 */ 'C', 'B', 'W', 0,
  /* 11227 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'W', 0,
  /* 11237 */ 'L', 'R', 'E', 'T', 'I', 'W', 0,
  /* 11244 */ 'N', 'O', 'O', 'P', 'W', 0,
  /* 11250 */ 'L', 'O', 'D', 'S', 'W', 0,
  /* 11256 */ 'S', 'T', 'O', 'S', 'W', 0,
  /* 11262 */ 'O', 'U', 'T', 'S', 'W', 0,
  /* 11268 */ 'M', 'O', 'V', 'S', 'W', 0,
  /* 11274 */ 'L', 'R', 'E', 'T', 'W', 0,
  /* 11280 */ 'F', 'Y', 'L', '2', 'X', 0,
  /* 11286 */ 'F', 'N', 'C', 'L', 'E', 'X', 0,
  /* 11293 */ 'T', 'E', 'S', 'T', '8', 'r', 'i', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11307 */ 'M', 'O', 'V', '8', 'r', 'm', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11320 */ 'M', 'O', 'V', '8', 'm', 'r', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11333 */ 'M', 'O', 'V', '8', 'r', 'r', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11346 */ 'R', 'E', 'X', '6', '4', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11359 */ 'D', 'A', 'T', 'A', '1', '6', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11373 */ 'R', 'E', 'P', 'N', 'E', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11386 */ 'X', 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11402 */ 'X', 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11418 */ 'L', 'O', 'C', 'K', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11430 */ 'R', 'E', 'P', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11441 */ 'C', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11451 */ 'D', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11461 */ 'E', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11471 */ 'F', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11481 */ 'G', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11491 */ 'S', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11501 */ 'C', 'O', 'P', 'Y', 0,
  /* 11506 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11524 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11539 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11555 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11573 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11588 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11604 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11622 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11637 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11653 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11671 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11686 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11702 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11720 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11735 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11751 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11769 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11784 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11800 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11818 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11833 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11849 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11867 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11882 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11898 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11916 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11931 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11947 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11965 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11980 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11996 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12014 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12029 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12045 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12063 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12078 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12094 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12110 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12123 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12137 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12153 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12166 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12180 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12196 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12209 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12223 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12239 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12252 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12266 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'm', 'Y', 0,
  /* 12280 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'm', 'Y', 0,
  /* 12291 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'm', 'Y', 0,
  /* 12305 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'm', 'Y', 0,
  /* 12316 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'm', 'Y', 0,
  /* 12326 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12344 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12359 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12375 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12393 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12408 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12424 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12442 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12457 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12473 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12491 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12506 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12522 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12540 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12555 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12571 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12589 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12604 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12620 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12638 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12653 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12669 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12687 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12702 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12718 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12736 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12751 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12767 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12785 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12800 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12816 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12834 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12849 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12865 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12883 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12898 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12914 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12930 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12943 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12957 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12973 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12986 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 13000 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13016 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13029 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13043 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13059 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13072 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13086 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'm', 'r', 'Y', 0,
  /* 13100 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'm', 'r', 'Y', 0,
  /* 13114 */ 'V', 'P', 'C', 'M', 'O', 'V', 'm', 'r', 'Y', 0,
  /* 13124 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13140 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13153 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13167 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13183 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13196 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13210 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13226 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13239 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13253 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13269 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13282 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13296 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'r', 'Y', 0,
  /* 13310 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'r', 'Y', 0,
  /* 13321 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'r', 'Y', 0,
  /* 13335 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'r', 'Y', 0,
  /* 13346 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'r', 'Y', 0,
  /* 13356 */ 'J', 'C', 'X', 'Z', 0,
  /* 13361 */ 'J', 'R', 'C', 'X', 'Z', 0,
  /* 13367 */ 'M', 'O', 'V', '3', '2', 'o', '3', '2', 'a', 0,
  /* 13377 */ 'M', 'O', 'V', '6', '4', 'o', '3', '2', 'a', 0,
  /* 13387 */ 'M', 'O', 'V', '6', '4', 'o', '6', '4', 'a', 0,
  /* 13397 */ 'M', 'O', 'V', '6', '4', 'o', '1', '6', 'a', 0,
  /* 13407 */ 'M', 'O', 'V', '1', '6', 'o', '1', '6', 'a', 0,
  /* 13417 */ 'M', 'O', 'V', '6', '4', 'o', '8', 'a', 0,
  /* 13426 */ 'M', 'O', 'V', '8', 'o', '8', 'a', 0,
  /* 13434 */ 'M', 'O', 'V', '3', '2', 'r', 'c', 0,
  /* 13442 */ 'M', 'O', 'V', '6', '4', 'r', 'c', 0,
  /* 13450 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'd', 0,
  /* 13459 */ 'O', 'R', '3', '2', 'm', 'r', 'L', 'o', 'c', 'k', 'e', 'd', 0,
  /* 13472 */ 'M', 'O', 'V', '3', '2', 'r', 'd', 0,
  /* 13480 */ 'M', 'O', 'V', '6', '4', 'r', 'd', 0,
  /* 13488 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '3', '2', 'i', 0,
  /* 13499 */ 'F', 'A', 'R', 'J', 'M', 'P', '3', '2', 'i', 0,
  /* 13509 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'r', '6', '4', 'i', 0,
  /* 13522 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '1', '6', 'i', 0,
  /* 13533 */ 'F', 'A', 'R', 'J', 'M', 'P', '1', '6', 'i', 0,
  /* 13543 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 13554 */ 'S', 'B', 'B', '3', '2', 'm', 'i', 0,
  /* 13562 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'i', 0,
  /* 13575 */ 'A', 'D', 'C', '3', '2', 'm', 'i', 0,
  /* 13583 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'i', 0,
  /* 13596 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'i', 0,
  /* 13609 */ 'R', 'C', 'L', '3', '2', 'm', 'i', 0,
  /* 13617 */ 'S', 'H', 'L', '3', '2', 'm', 'i', 0,
  /* 13625 */ 'R', 'O', 'L', '3', '2', 'm', 'i', 0,
  /* 13633 */ 'C', 'M', 'P', '3', '2', 'm', 'i', 0,
  /* 13641 */ 'S', 'A', 'R', '3', '2', 'm', 'i', 0,
  /* 13649 */ 'R', 'C', 'R', '3', '2', 'm', 'i', 0,
  /* 13657 */ 'S', 'H', 'R', '3', '2', 'm', 'i', 0,
  /* 13665 */ 'R', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 13673 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 13686 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 13698 */ 'T', 'E', 'S', 'T', '3', '2', 'm', 'i', 0,
  /* 13707 */ 'M', 'O', 'V', '3', '2', 'm', 'i', 0,
  /* 13715 */ 'R', 'O', 'R', 'X', '3', '2', 'm', 'i', 0,
  /* 13724 */ 'R', 'C', 'L', '6', '4', 'm', 'i', 0,
  /* 13732 */ 'S', 'H', 'L', '6', '4', 'm', 'i', 0,
  /* 13740 */ 'R', 'O', 'L', '6', '4', 'm', 'i', 0,
  /* 13748 */ 'S', 'A', 'R', '6', '4', 'm', 'i', 0,
  /* 13756 */ 'R', 'C', 'R', '6', '4', 'm', 'i', 0,
  /* 13764 */ 'S', 'H', 'R', '6', '4', 'm', 'i', 0,
  /* 13772 */ 'R', 'O', 'R', '6', '4', 'm', 'i', 0,
  /* 13780 */ 'R', 'O', 'R', 'X', '6', '4', 'm', 'i', 0,
  /* 13789 */ 'S', 'B', 'B', '1', '6', 'm', 'i', 0,
  /* 13797 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'i', 0,
  /* 13810 */ 'A', 'D', 'C', '1', '6', 'm', 'i', 0,
  /* 13818 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'i', 0,
  /* 13831 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'i', 0,
  /* 13844 */ 'R', 'C', 'L', '1', '6', 'm', 'i', 0,
  /* 13852 */ 'S', 'H', 'L', '1', '6', 'm', 'i', 0,
  /* 13860 */ 'R', 'O', 'L', '1', '6', 'm', 'i', 0,
  /* 13868 */ 'C', 'M', 'P', '1', '6', 'm', 'i', 0,
  /* 13876 */ 'S', 'A', 'R', '1', '6', 'm', 'i', 0,
  /* 13884 */ 'R', 'C', 'R', '1', '6', 'm', 'i', 0,
  /* 13892 */ 'S', 'H', 'R', '1', '6', 'm', 'i', 0,
  /* 13900 */ 'R', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 13908 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 13921 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 13933 */ 'T', 'E', 'S', 'T', '1', '6', 'm', 'i', 0,
  /* 13942 */ 'M', 'O', 'V', '1', '6', 'm', 'i', 0,
  /* 13950 */ 'S', 'B', 'B', '8', 'm', 'i', 0,
  /* 13957 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '8', 'm', 'i', 0,
  /* 13969 */ 'A', 'D', 'C', '8', 'm', 'i', 0,
  /* 13976 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '8', 'm', 'i', 0,
  /* 13988 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '8', 'm', 'i', 0,
  /* 14000 */ 'R', 'C', 'L', '8', 'm', 'i', 0,
  /* 14007 */ 'S', 'H', 'L', '8', 'm', 'i', 0,
  /* 14014 */ 'R', 'O', 'L', '8', 'm', 'i', 0,
  /* 14021 */ 'C', 'M', 'P', '8', 'm', 'i', 0,
  /* 14028 */ 'S', 'A', 'R', '8', 'm', 'i', 0,
  /* 14035 */ 'R', 'C', 'R', '8', 'm', 'i', 0,
  /* 14042 */ 'S', 'H', 'R', '8', 'm', 'i', 0,
  /* 14049 */ 'R', 'O', 'R', '8', 'm', 'i', 0,
  /* 14056 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '8', 'm', 'i', 0,
  /* 14068 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '8', 'm', 'i', 0,
  /* 14079 */ 'T', 'E', 'S', 'T', '8', 'm', 'i', 0,
  /* 14087 */ 'M', 'O', 'V', '8', 'm', 'i', 0,
  /* 14094 */ 'V', 'P', 'C', 'O', 'M', 'B', 'm', 'i', 0,
  /* 14103 */ 'V', 'P', 'R', 'O', 'T', 'B', 'm', 'i', 0,
  /* 14112 */ 'V', 'P', 'C', 'O', 'M', 'U', 'B', 'm', 'i', 0,
  /* 14122 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'm', 'i', 0,
  /* 14132 */ 'V', 'P', 'C', 'O', 'M', 'D', 'm', 'i', 0,
  /* 14141 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'm', 'i', 0,
  /* 14153 */ 'V', 'P', 'R', 'O', 'T', 'D', 'm', 'i', 0,
  /* 14162 */ 'V', 'P', 'C', 'O', 'M', 'U', 'D', 'm', 'i', 0,
  /* 14172 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'm', 'i', 0,
  /* 14183 */ 'V', 'P', 'C', 'O', 'M', 'Q', 'm', 'i', 0,
  /* 14192 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'm', 'i', 0,
  /* 14201 */ 'V', 'P', 'C', 'O', 'M', 'U', 'Q', 'm', 'i', 0,
  /* 14211 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'm', 'i', 0,
  /* 14223 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'W', 'm', 'i', 0,
  /* 14236 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'm', 'i', 0,
  /* 14247 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'm', 'i', 0,
  /* 14258 */ 'V', 'P', 'C', 'O', 'M', 'W', 'm', 'i', 0,
  /* 14267 */ 'V', 'P', 'R', 'O', 'T', 'W', 'm', 'i', 0,
  /* 14276 */ 'V', 'P', 'C', 'O', 'M', 'U', 'W', 'm', 'i', 0,
  /* 14286 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'Y', 'm', 'i', 0,
  /* 14297 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'm', 'i', 0,
  /* 14310 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Y', 'm', 'i', 0,
  /* 14321 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Y', 'm', 'i', 0,
  /* 14331 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'm', 'i', 0,
  /* 14344 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'Y', 'm', 'i', 0,
  /* 14356 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'Y', 'm', 'i', 0,
  /* 14368 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Z', 'm', 'i', 0,
  /* 14379 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Z', 'm', 'i', 0,
  /* 14389 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 'i', 0,
  /* 14399 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 'i', 0,
  /* 14409 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'r', 'm', 'i', 0,
  /* 14421 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14433 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14444 */ 'V', 'D', 'P', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14453 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14463 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14475 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14486 */ 'V', 'D', 'P', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14495 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14505 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'm', 'i', 0,
  /* 14517 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'r', 'm', 'i', 0,
  /* 14529 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'm', 'i', 0,
  /* 14540 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14553 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14566 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14578 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14589 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14602 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14614 */ 'V', 'D', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14624 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14635 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'm', 'i', 0,
  /* 14648 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'Y', 'r', 'm', 'i', 0,
  /* 14661 */ 'V', 'P', 'C', 'M', 'P', 'D', 'Z', 'r', 'm', 'i', 0,
  /* 14672 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Z', 'r', 'm', 'i', 0,
  /* 14683 */ 'V', 'P', 'C', 'M', 'P', 'U', 'D', 'Z', 'r', 'm', 'i', 0,
  /* 14695 */ 'V', 'P', 'C', 'M', 'P', 'Q', 'Z', 'r', 'm', 'i', 0,
  /* 14706 */ 'V', 'P', 'C', 'M', 'P', 'U', 'Q', 'Z', 'r', 'm', 'i', 0,
  /* 14718 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Z', 'r', 'm', 'i', 0,
  /* 14729 */ 'M', 'M', 'X', '_', 'P', 'I', 'N', 'S', 'R', 'W', 'i', 'r', 'm', 'i', 0,
  /* 14744 */ 'S', 'B', 'B', '3', '2', 'r', 'i', 0,
  /* 14752 */ 'S', 'U', 'B', '3', '2', 'r', 'i', 0,
  /* 14760 */ 'A', 'D', 'C', '3', '2', 'r', 'i', 0,
  /* 14768 */ 'A', 'D', 'D', '3', '2', 'r', 'i', 0,
  /* 14776 */ 'A', 'N', 'D', '3', '2', 'r', 'i', 0,
  /* 14784 */ 'R', 'C', 'L', '3', '2', 'r', 'i', 0,
  /* 14792 */ 'S', 'H', 'L', '3', '2', 'r', 'i', 0,
  /* 14800 */ 'R', 'O', 'L', '3', '2', 'r', 'i', 0,
  /* 14808 */ 'I', 'N', '3', '2', 'r', 'i', 0,
  /* 14815 */ 'C', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 14823 */ 'S', 'A', 'R', '3', '2', 'r', 'i', 0,
  /* 14831 */ 'R', 'C', 'R', '3', '2', 'r', 'i', 0,
  /* 14839 */ 'S', 'H', 'R', '3', '2', 'r', 'i', 0,
  /* 14847 */ 'R', 'O', 'R', '3', '2', 'r', 'i', 0,
  /* 14855 */ 'X', 'O', 'R', '3', '2', 'r', 'i', 0,
  /* 14863 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'i', 0,
  /* 14872 */ 'M', 'O', 'V', '3', '2', 'r', 'i', 0,
  /* 14880 */ 'R', 'O', 'R', 'X', '3', '2', 'r', 'i', 0,
  /* 14889 */ 'R', 'C', 'L', '6', '4', 'r', 'i', 0,
  /* 14897 */ 'S', 'H', 'L', '6', '4', 'r', 'i', 0,
  /* 14905 */ 'R', 'O', 'L', '6', '4', 'r', 'i', 0,
  /* 14913 */ 'S', 'A', 'R', '6', '4', 'r', 'i', 0,
  /* 14921 */ 'R', 'C', 'R', '6', '4', 'r', 'i', 0,
  /* 14929 */ 'S', 'H', 'R', '6', '4', 'r', 'i', 0,
  /* 14937 */ 'R', 'O', 'R', '6', '4', 'r', 'i', 0,
  /* 14945 */ 'M', 'O', 'V', '6', '4', 'r', 'i', 0,
  /* 14953 */ 'R', 'O', 'R', 'X', '6', '4', 'r', 'i', 0,
  /* 14962 */ 'S', 'B', 'B', '1', '6', 'r', 'i', 0,
  /* 14970 */ 'S', 'U', 'B', '1', '6', 'r', 'i', 0,
  /* 14978 */ 'A', 'D', 'C', '1', '6', 'r', 'i', 0,
  /* 14986 */ 'A', 'D', 'D', '1', '6', 'r', 'i', 0,
  /* 14994 */ 'A', 'N', 'D', '1', '6', 'r', 'i', 0,
  /* 15002 */ 'R', 'C', 'L', '1', '6', 'r', 'i', 0,
  /* 15010 */ 'S', 'H', 'L', '1', '6', 'r', 'i', 0,
  /* 15018 */ 'R', 'O', 'L', '1', '6', 'r', 'i', 0,
  /* 15026 */ 'I', 'N', '1', '6', 'r', 'i', 0,
  /* 15033 */ 'C', 'M', 'P', '1', '6', 'r', 'i', 0,
  /* 15041 */ 'S', 'A', 'R', '1', '6', 'r', 'i', 0,
  /* 15049 */ 'R', 'C', 'R', '1', '6', 'r', 'i', 0,
  /* 15057 */ 'S', 'H', 'R', '1', '6', 'r', 'i', 0,
  /* 15065 */ 'R', 'O', 'R', '1', '6', 'r', 'i', 0,
  /* 15073 */ 'X', 'O', 'R', '1', '6', 'r', 'i', 0,
  /* 15081 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'i', 0,
  /* 15090 */ 'M', 'O', 'V', '1', '6', 'r', 'i', 0,
  /* 15098 */ 'S', 'B', 'B', '8', 'r', 'i', 0,
  /* 15105 */ 'S', 'U', 'B', '8', 'r', 'i', 0,
  /* 15112 */ 'A', 'D', 'C', '8', 'r', 'i', 0,
  /* 15119 */ 'A', 'D', 'D', '8', 'r', 'i', 0,
  /* 15126 */ 'A', 'N', 'D', '8', 'r', 'i', 0,
  /* 15133 */ 'R', 'C', 'L', '8', 'r', 'i', 0,
  /* 15140 */ 'S', 'H', 'L', '8', 'r', 'i', 0,
  /* 15147 */ 'R', 'O', 'L', '8', 'r', 'i', 0,
  /* 15154 */ 'I', 'N', '8', 'r', 'i', 0,
  /* 15160 */ 'C', 'M', 'P', '8', 'r', 'i', 0,
  /* 15167 */ 'S', 'A', 'R', '8', 'r', 'i', 0,
  /* 15174 */ 'R', 'C', 'R', '8', 'r', 'i', 0,
  /* 15181 */ 'S', 'H', 'R', '8', 'r', 'i', 0,
  /* 15188 */ 'R', 'O', 'R', '8', 'r', 'i', 0,
  /* 15195 */ 'X', 'O', 'R', '8', 'r', 'i', 0,
  /* 15202 */ 'T', 'E', 'S', 'T', '8', 'r', 'i', 0,
  /* 15210 */ 'M', 'O', 'V', '8', 'r', 'i', 0,
  /* 15217 */ 'V', 'P', 'C', 'O', 'M', 'B', 'r', 'i', 0,
  /* 15226 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'i', 0,
  /* 15235 */ 'V', 'P', 'C', 'O', 'M', 'U', 'B', 'r', 'i', 0,
  /* 15245 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'i', 0,
  /* 15254 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'i', 0,
  /* 15266 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'r', 'i', 0,
  /* 15276 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'i', 0,
  /* 15285 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'i', 0,
  /* 15297 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'i', 0,
  /* 15306 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'i', 0,
  /* 15318 */ 'V', 'P', 'C', 'O', 'M', 'D', 'r', 'i', 0,
  /* 15327 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'i', 0,
  /* 15339 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'i', 0,
  /* 15348 */ 'V', 'P', 'C', 'O', 'M', 'U', 'D', 'r', 'i', 0,
  /* 15358 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 15369 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Q', 'r', 'i', 0,
  /* 15379 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Q', 'r', 'i', 0,
  /* 15389 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'i', 0,
  /* 15398 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'i', 0,
  /* 15410 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'i', 0,
  /* 15419 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'i', 0,
  /* 15431 */ 'V', 'P', 'C', 'O', 'M', 'Q', 'r', 'i', 0,
  /* 15440 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'i', 0,
  /* 15449 */ 'V', 'P', 'C', 'O', 'M', 'U', 'Q', 'r', 'i', 0,
  /* 15459 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'i', 0,
  /* 15471 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'i', 0,
  /* 15480 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'i', 0,
  /* 15492 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'W', 'r', 'i', 0,
  /* 15505 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'r', 'i', 0,
  /* 15516 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'r', 'i', 0,
  /* 15527 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'i', 0,
  /* 15536 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'i', 0,
  /* 15548 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'i', 0,
  /* 15557 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'i', 0,
  /* 15569 */ 'K', 'S', 'H', 'I', 'F', 'T', 'L', 'W', 'r', 'i', 0,
  /* 15580 */ 'V', 'P', 'C', 'O', 'M', 'W', 'r', 'i', 0,
  /* 15589 */ 'K', 'S', 'H', 'I', 'F', 'T', 'R', 'W', 'r', 'i', 0,
  /* 15600 */ 'V', 'P', 'E', 'X', 'T', 'R', 'W', 'r', 'i', 0,
  /* 15610 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'i', 0,
  /* 15619 */ 'V', 'P', 'C', 'O', 'M', 'U', 'W', 'r', 'i', 0,
  /* 15629 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'i', 0,
  /* 15639 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'Y', 'r', 'i', 0,
  /* 15650 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'i', 0,
  /* 15660 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'i', 0,
  /* 15670 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'i', 0,
  /* 15683 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Y', 'r', 'i', 0,
  /* 15694 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Q', 'Y', 'r', 'i', 0,
  /* 15705 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Q', 'Y', 'r', 'i', 0,
  /* 15716 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'i', 0,
  /* 15726 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'i', 0,
  /* 15736 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Y', 'r', 'i', 0,
  /* 15746 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'i', 0,
  /* 15759 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'i', 0,
  /* 15769 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'Y', 'r', 'i', 0,
  /* 15781 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 15793 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 15803 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 15813 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Z', 'r', 'i', 0,
  /* 15824 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Z', 'r', 'i', 0,
  /* 15834 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 'i', 0,
  /* 15844 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 'i', 0,
  /* 15854 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'r', 'r', 'i', 0,
  /* 15866 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'r', 'r', 'i', 0,
  /* 15878 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'r', 'r', 'i', 0,
  /* 15889 */ 'V', 'D', 'P', 'P', 'D', 'r', 'r', 'i', 0,
  /* 15898 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'r', 'i', 0,
  /* 15908 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'r', 'r', 'i', 0,
  /* 15920 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'r', 'r', 'i', 0,
  /* 15931 */ 'V', 'D', 'P', 'P', 'S', 'r', 'r', 'i', 0,
  /* 15940 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'r', 'i', 0,
  /* 15950 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'r', 'i', 0,
  /* 15962 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'r', 'r', 'i', 0,
  /* 15974 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'r', 'i', 0,
  /* 15985 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 15998 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 16011 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 16023 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 16034 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 16047 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 16059 */ 'V', 'D', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 16069 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 16080 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'r', 'i', 0,
  /* 16093 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'Y', 'r', 'r', 'i', 0,
  /* 16106 */ 'V', 'P', 'C', 'M', 'P', 'D', 'Z', 'r', 'r', 'i', 0,
  /* 16117 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Z', 'r', 'r', 'i', 0,
  /* 16128 */ 'V', 'P', 'C', 'M', 'P', 'U', 'D', 'Z', 'r', 'r', 'i', 0,
  /* 16140 */ 'V', 'P', 'C', 'M', 'P', 'Q', 'Z', 'r', 'r', 'i', 0,
  /* 16151 */ 'V', 'P', 'C', 'M', 'P', 'U', 'Q', 'Z', 'r', 'r', 'i', 0,
  /* 16163 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Z', 'r', 'r', 'i', 0,
  /* 16174 */ 'M', 'M', 'X', '_', 'P', 'I', 'N', 'S', 'R', 'W', 'i', 'r', 'r', 'i', 0,
  /* 16189 */ 'M', 'M', 'X', '_', 'P', 'E', 'X', 'T', 'R', 'W', 'i', 'r', 'r', 'i', 0,
  /* 16204 */ 'K', 'M', 'O', 'V', 'W', 'k', 'k', 0,
  /* 16212 */ 'K', 'M', 'O', 'V', 'W', 'm', 'k', 0,
  /* 16220 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', '3', '2', 'r', 'm', 'k', 0,
  /* 16233 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', '6', '4', 'r', 'm', 'k', 0,
  /* 16246 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Z', 'r', 'm', 'k', 0,
  /* 16258 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Z', 'r', 'm', 'k', 0,
  /* 16270 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Z', 'r', 'm', 'k', 0,
  /* 16282 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Z', 'r', 'm', 'k', 0,
  /* 16294 */ 'K', 'M', 'O', 'V', 'W', 'r', 'k', 0,
  /* 16302 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', '3', '2', 'r', 'r', 'k', 0,
  /* 16315 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', '6', '4', 'r', 'r', 'k', 0,
  /* 16328 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Z', 'r', 'r', 'k', 0,
  /* 16340 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Z', 'r', 'r', 'k', 0,
  /* 16352 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Z', 'r', 'r', 'k', 0,
  /* 16364 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Z', 'r', 'r', 'k', 0,
  /* 16376 */ 'L', 'D', '_', 'F', '8', '0', 'm', 0,
  /* 16384 */ 'S', 'T', '_', 'F', 'P', '8', '0', 'm', 0,
  /* 16393 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', 0,
  /* 16403 */ 'L', 'D', '_', 'F', 'p', '8', '0', 'm', 0,
  /* 16412 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16429 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16443 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16458 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16475 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16489 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16504 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16518 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16533 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16547 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16562 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16579 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16593 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16608 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16625 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16639 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16654 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16668 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16683 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16697 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16712 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16729 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16743 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16758 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16775 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16789 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16804 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16818 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16833 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16847 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16862 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16879 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16893 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16908 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16925 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16939 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16954 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16968 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16983 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16997 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 17012 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '3', '2', 'm', 0,
  /* 17024 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '3', '2', 'm', 0,
  /* 17036 */ 'S', 'U', 'B', '_', 'F', '3', '2', 'm', 0,
  /* 17045 */ 'A', 'D', 'D', '_', 'F', '3', '2', 'm', 0,
  /* 17054 */ 'I', 'L', 'D', '_', 'F', '3', '2', 'm', 0,
  /* 17063 */ 'M', 'U', 'L', '_', 'F', '3', '2', 'm', 0,
  /* 17072 */ 'S', 'U', 'B', 'R', '_', 'F', '3', '2', 'm', 0,
  /* 17082 */ 'D', 'I', 'V', 'R', '_', 'F', '3', '2', 'm', 0,
  /* 17092 */ 'I', 'S', 'T', '_', 'F', '3', '2', 'm', 0,
  /* 17101 */ 'D', 'I', 'V', '_', 'F', '3', '2', 'm', 0,
  /* 17110 */ 'N', 'E', 'G', '3', '2', 'm', 0,
  /* 17117 */ 'S', 'U', 'B', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17127 */ 'A', 'D', 'D', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17137 */ 'M', 'U', 'L', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17147 */ 'S', 'U', 'B', 'R', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17158 */ 'D', 'I', 'V', 'R', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17169 */ 'D', 'I', 'V', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17179 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '3', '2', 'm', 0,
  /* 17190 */ 'I', 'M', 'U', 'L', '3', '2', 'm', 0,
  /* 17198 */ 'F', 'C', 'O', 'M', '3', '2', 'm', 0,
  /* 17206 */ 'F', 'I', 'C', 'O', 'M', '3', '2', 'm', 0,
  /* 17215 */ 'I', 'S', 'T', '_', 'F', 'P', '3', '2', 'm', 0,
  /* 17225 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '3', '2', 'm', 0,
  /* 17236 */ 'F', 'A', 'R', 'J', 'M', 'P', '3', '2', 'm', 0,
  /* 17246 */ 'F', 'C', 'O', 'M', 'P', '3', '2', 'm', 0,
  /* 17255 */ 'F', 'I', 'C', 'O', 'M', 'P', '3', '2', 'm', 0,
  /* 17265 */ 'S', 'T', '_', 'F', 'p', 'P', '3', '2', 'm', 0,
  /* 17275 */ 'N', 'O', 'T', '3', '2', 'm', 0,
  /* 17282 */ 'I', 'D', 'I', 'V', '3', '2', 'm', 0,
  /* 17290 */ 'D', 'E', 'C', '6', '4', '_', '3', '2', 'm', 0,
  /* 17300 */ 'I', 'N', 'C', '6', '4', '_', '3', '2', 'm', 0,
  /* 17310 */ 'S', 'U', 'B', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17320 */ 'A', 'D', 'D', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17330 */ 'L', 'D', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17339 */ 'M', 'U', 'L', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17349 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17360 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17371 */ 'S', 'T', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17380 */ 'D', 'I', 'V', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17390 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17407 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17421 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17436 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17453 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17467 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17482 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17496 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17511 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17525 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17540 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17557 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17571 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17586 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17603 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17617 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17632 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17646 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17661 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17675 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17690 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '6', '4', 'm', 0,
  /* 17702 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '6', '4', 'm', 0,
  /* 17714 */ 'S', 'U', 'B', '_', 'F', '6', '4', 'm', 0,
  /* 17723 */ 'A', 'D', 'D', '_', 'F', '6', '4', 'm', 0,
  /* 17732 */ 'I', 'L', 'D', '_', 'F', '6', '4', 'm', 0,
  /* 17741 */ 'M', 'U', 'L', '_', 'F', '6', '4', 'm', 0,
  /* 17750 */ 'S', 'U', 'B', 'R', '_', 'F', '6', '4', 'm', 0,
  /* 17760 */ 'D', 'I', 'V', 'R', '_', 'F', '6', '4', 'm', 0,
  /* 17770 */ 'S', 'T', '_', 'F', '6', '4', 'm', 0,
  /* 17778 */ 'D', 'I', 'V', '_', 'F', '6', '4', 'm', 0,
  /* 17787 */ 'N', 'E', 'G', '6', '4', 'm', 0,
  /* 17794 */ 'C', 'A', 'L', 'L', '6', '4', 'm', 0,
  /* 17802 */ 'I', 'M', 'U', 'L', '6', '4', 'm', 0,
  /* 17810 */ 'F', 'C', 'O', 'M', '6', '4', 'm', 0,
  /* 17818 */ 'I', 'S', 'T', '_', 'F', 'P', '6', '4', 'm', 0,
  /* 17828 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '6', '4', 'm', 0,
  /* 17839 */ 'J', 'M', 'P', '6', '4', 'm', 0,
  /* 17846 */ 'F', 'C', 'O', 'M', 'P', '6', '4', 'm', 0,
  /* 17855 */ 'S', 'T', '_', 'F', 'p', 'P', '6', '4', 'm', 0,
  /* 17865 */ 'S', 'L', 'D', 'T', '6', '4', 'm', 0,
  /* 17873 */ 'N', 'O', 'T', '6', '4', 'm', 0,
  /* 17880 */ 'I', 'D', 'I', 'V', '6', '4', 'm', 0,
  /* 17888 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17898 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17908 */ 'L', 'D', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17917 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17927 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17938 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17949 */ 'S', 'T', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17958 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17968 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '1', '6', 'm', 0,
  /* 17980 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '1', '6', 'm', 0,
  /* 17992 */ 'I', 'L', 'D', '_', 'F', '1', '6', 'm', 0,
  /* 18001 */ 'I', 'S', 'T', '_', 'F', '1', '6', 'm', 0,
  /* 18010 */ 'N', 'E', 'G', '1', '6', 'm', 0,
  /* 18017 */ 'S', 'U', 'B', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18027 */ 'A', 'D', 'D', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18037 */ 'M', 'U', 'L', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18047 */ 'S', 'U', 'B', 'R', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18058 */ 'D', 'I', 'V', 'R', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18069 */ 'D', 'I', 'V', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18079 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '1', '6', 'm', 0,
  /* 18090 */ 'I', 'M', 'U', 'L', '1', '6', 'm', 0,
  /* 18098 */ 'F', 'I', 'C', 'O', 'M', '1', '6', 'm', 0,
  /* 18107 */ 'I', 'S', 'T', '_', 'F', 'P', '1', '6', 'm', 0,
  /* 18117 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '1', '6', 'm', 0,
  /* 18128 */ 'F', 'A', 'R', 'J', 'M', 'P', '1', '6', 'm', 0,
  /* 18138 */ 'F', 'I', 'C', 'O', 'M', 'P', '1', '6', 'm', 0,
  /* 18148 */ 'L', 'G', 'D', 'T', '1', '6', 'm', 0,
  /* 18156 */ 'S', 'G', 'D', 'T', '1', '6', 'm', 0,
  /* 18164 */ 'L', 'I', 'D', 'T', '1', '6', 'm', 0,
  /* 18172 */ 'S', 'I', 'D', 'T', '1', '6', 'm', 0,
  /* 18180 */ 'L', 'L', 'D', 'T', '1', '6', 'm', 0,
  /* 18188 */ 'S', 'L', 'D', 'T', '1', '6', 'm', 0,
  /* 18196 */ 'N', 'O', 'T', '1', '6', 'm', 0,
  /* 18203 */ 'I', 'D', 'I', 'V', '1', '6', 'm', 0,
  /* 18211 */ 'F', 'L', 'D', 'C', 'W', '1', '6', 'm', 0,
  /* 18220 */ 'F', 'N', 'S', 'T', 'C', 'W', '1', '6', 'm', 0,
  /* 18230 */ 'L', 'M', 'S', 'W', '1', '6', 'm', 0,
  /* 18238 */ 'S', 'M', 'S', 'W', '1', '6', 'm', 0,
  /* 18246 */ 'D', 'E', 'C', '6', '4', '_', '1', '6', 'm', 0,
  /* 18256 */ 'I', 'N', 'C', '6', '4', '_', '1', '6', 'm', 0,
  /* 18266 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '8', 'm', 0,
  /* 18277 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '8', 'm', 0,
  /* 18288 */ 'N', 'E', 'G', '8', 'm', 0,
  /* 18294 */ 'I', 'M', 'U', 'L', '8', 'm', 0,
  /* 18301 */ 'N', 'O', 'T', '8', 'm', 0,
  /* 18307 */ 'I', 'D', 'I', 'V', '8', 'm', 0,
  /* 18314 */ 'S', 'E', 'T', 'A', 'm', 0,
  /* 18320 */ 'S', 'E', 'T', 'B', 'm', 0,
  /* 18326 */ 'F', 'B', 'L', 'D', 'm', 0,
  /* 18332 */ 'V', 'M', 'P', 'T', 'R', 'L', 'D', 'm', 0,
  /* 18341 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'D', 'm', 0,
  /* 18351 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'm', 0,
  /* 18360 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'D', 'm', 0,
  /* 18371 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'm', 0,
  /* 18381 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'm', 0,
  /* 18390 */ 'S', 'E', 'T', 'A', 'E', 'm', 0,
  /* 18397 */ 'S', 'E', 'T', 'B', 'E', 'm', 0,
  /* 18404 */ 'S', 'E', 'T', 'G', 'E', 'm', 0,
  /* 18411 */ 'S', 'E', 'T', 'L', 'E', 'm', 0,
  /* 18418 */ 'S', 'E', 'T', 'N', 'E', 'm', 0,
  /* 18425 */ 'S', 'E', 'T', 'E', 'm', 0,
  /* 18431 */ 'F', 'S', 'A', 'V', 'E', 'm', 0,
  /* 18438 */ 'S', 'E', 'T', 'G', 'm', 0,
  /* 18444 */ 'S', 'E', 'T', 'L', 'm', 0,
  /* 18450 */ 'S', 'E', 'T', 'N', 'O', 'm', 0,
  /* 18457 */ 'S', 'E', 'T', 'O', 'm', 0,
  /* 18463 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'm', 0,
  /* 18472 */ 'S', 'E', 'T', 'N', 'P', 'm', 0,
  /* 18479 */ 'S', 'E', 'T', 'P', 'm', 0,
  /* 18485 */ 'F', 'B', 'S', 'T', 'P', 'm', 0,
  /* 18492 */ 'V', 'M', 'C', 'L', 'E', 'A', 'R', 'm', 0,
  /* 18501 */ 'F', 'R', 'S', 'T', 'O', 'R', 'm', 0,
  /* 18509 */ 'V', 'E', 'R', 'R', 'm', 0,
  /* 18515 */ 'L', 'T', 'R', 'm', 0,
  /* 18520 */ 'S', 'T', 'R', 'm', 0,
  /* 18525 */ 'S', 'E', 'T', 'N', 'S', 'm', 0,
  /* 18532 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'S', 'm', 0,
  /* 18542 */ 'V', 'R', 'C', 'P', 'P', 'S', 'm', 0,
  /* 18550 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', 0,
  /* 18560 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', 0,
  /* 18569 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'S', 'm', 0,
  /* 18580 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'm', 0,
  /* 18590 */ 'V', 'R', 'C', 'P', 'S', 'S', 'm', 0,
  /* 18598 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', 0,
  /* 18608 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', 0,
  /* 18617 */ 'S', 'E', 'T', 'S', 'm', 0,
  /* 18623 */ 'L', 'G', 'D', 'T', 'm', 0,
  /* 18629 */ 'S', 'G', 'D', 'T', 'm', 0,
  /* 18635 */ 'L', 'I', 'D', 'T', 'm', 0,
  /* 18641 */ 'S', 'I', 'D', 'T', 'm', 0,
  /* 18647 */ 'V', 'M', 'P', 'T', 'R', 'S', 'T', 'm', 0,
  /* 18656 */ 'F', 'L', 'D', 'E', 'N', 'V', 'm', 0,
  /* 18664 */ 'F', 'S', 'T', 'E', 'N', 'V', 'm', 0,
  /* 18672 */ 'V', 'E', 'R', 'W', 'm', 0,
  /* 18678 */ 'F', 'N', 'S', 'T', 'S', 'W', 'm', 0,
  /* 18686 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'Y', 'm', 0,
  /* 18696 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'm', 0,
  /* 18705 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', 0,
  /* 18716 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', 0,
  /* 18726 */ 'K', 'M', 'O', 'V', 'W', 'k', 'm', 0,
  /* 18734 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 'm', 'm', 0,
  /* 18744 */ 'P', 'O', 'P', '3', '2', 'r', 'm', 'm', 0,
  /* 18753 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 'm', 'm', 0,
  /* 18763 */ 'P', 'O', 'P', '6', '4', 'r', 'm', 'm', 0,
  /* 18772 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 'm', 'm', 0,
  /* 18782 */ 'P', 'O', 'P', '1', '6', 'r', 'm', 'm', 0,
  /* 18791 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '1', 'r', 'm', 0,
  /* 18802 */ 'P', 'F', 'R', 'S', 'Q', 'I', 'T', '1', 'r', 'm', 0,
  /* 18813 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', '3', '2', 'r', 'm', 0,
  /* 18825 */ 'C', 'M', 'O', 'V', 'A', '3', '2', 'r', 'm', 0,
  /* 18835 */ 'S', 'B', 'B', '3', '2', 'r', 'm', 0,
  /* 18843 */ 'S', 'U', 'B', '3', '2', 'r', 'm', 0,
  /* 18851 */ 'C', 'M', 'O', 'V', 'B', '3', '2', 'r', 'm', 0,
  /* 18861 */ 'A', 'D', 'C', '3', '2', 'r', 'm', 0,
  /* 18869 */ 'V', 'M', 'R', 'E', 'A', 'D', '3', '2', 'r', 'm', 0,
  /* 18880 */ 'X', 'A', 'D', 'D', '3', '2', 'r', 'm', 0,
  /* 18889 */ 'A', 'N', 'D', '3', '2', 'r', 'm', 0,
  /* 18897 */ 'C', 'M', 'O', 'V', 'A', 'E', '3', '2', 'r', 'm', 0,
  /* 18908 */ 'C', 'M', 'O', 'V', 'B', 'E', '3', '2', 'r', 'm', 0,
  /* 18919 */ 'C', 'M', 'O', 'V', 'G', 'E', '3', '2', 'r', 'm', 0,
  /* 18930 */ 'C', 'M', 'O', 'V', 'L', 'E', '3', '2', 'r', 'm', 0,
  /* 18941 */ 'C', 'M', 'O', 'V', 'N', 'E', '3', '2', 'r', 'm', 0,
  /* 18952 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '3', '2', 'r', 'm', 0,
  /* 18964 */ 'C', 'M', 'O', 'V', 'E', '3', '2', 'r', 'm', 0,
  /* 18974 */ 'B', 'S', 'F', '3', '2', 'r', 'm', 0,
  /* 18982 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 'r', 'm', 0,
  /* 18994 */ 'C', 'M', 'O', 'V', 'G', '3', '2', 'r', 'm', 0,
  /* 19004 */ 'B', 'Z', 'H', 'I', '3', '2', 'r', 'm', 0,
  /* 19013 */ 'B', 'L', 'S', 'I', '3', '2', 'r', 'm', 0,
  /* 19022 */ 'B', 'L', 'S', 'M', 'S', 'K', '3', '2', 'r', 'm', 0,
  /* 19033 */ 'L', 'S', 'L', '3', '2', 'r', 'm', 0,
  /* 19041 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 0,
  /* 19050 */ 'C', 'M', 'O', 'V', 'L', '3', '2', 'r', 'm', 0,
  /* 19060 */ 'A', 'N', 'D', 'N', '3', '2', 'r', 'm', 0,
  /* 19069 */ 'C', 'M', 'O', 'V', 'N', 'O', '3', '2', 'r', 'm', 0,
  /* 19080 */ 'C', 'M', 'O', 'V', 'O', '3', '2', 'r', 'm', 0,
  /* 19090 */ 'P', 'D', 'E', 'P', '3', '2', 'r', 'm', 0,
  /* 19099 */ 'C', 'M', 'P', '3', '2', 'r', 'm', 0,
  /* 19107 */ 'C', 'M', 'O', 'V', 'N', 'P', '3', '2', 'r', 'm', 0,
  /* 19118 */ 'C', 'M', 'O', 'V', 'P', '3', '2', 'r', 'm', 0,
  /* 19128 */ 'L', 'A', 'R', '3', '2', 'r', 'm', 0,
  /* 19136 */ 'X', 'O', 'R', '3', '2', 'r', 'm', 0,
  /* 19144 */ 'B', 'S', 'R', '3', '2', 'r', 'm', 0,
  /* 19152 */ 'B', 'L', 'S', 'R', '3', '2', 'r', 'm', 0,
  /* 19161 */ 'B', 'E', 'X', 'T', 'R', '3', '2', 'r', 'm', 0,
  /* 19171 */ 'L', 'D', 'S', '3', '2', 'r', 'm', 0,
  /* 19179 */ 'B', 'O', 'U', 'N', 'D', 'S', '3', '2', 'r', 'm', 0,
  /* 19190 */ 'L', 'E', 'S', '3', '2', 'r', 'm', 0,
  /* 19198 */ 'L', 'F', 'S', '3', '2', 'r', 'm', 0,
  /* 19206 */ 'L', 'G', 'S', '3', '2', 'r', 'm', 0,
  /* 19214 */ 'C', 'M', 'O', 'V', 'N', 'S', '3', '2', 'r', 'm', 0,
  /* 19225 */ 'L', 'S', 'S', '3', '2', 'r', 'm', 0,
  /* 19233 */ 'C', 'M', 'O', 'V', 'S', '3', '2', 'r', 'm', 0,
  /* 19243 */ 'P', 'O', 'P', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 19254 */ 'L', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 19264 */ 'T', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 19274 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'm', 0,
  /* 19283 */ 'P', 'E', 'X', 'T', '3', '2', 'r', 'm', 0,
  /* 19292 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', '3', '2', 'r', 'm', 0,
  /* 19304 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '3', '2', 'r', 'm', 0,
  /* 19320 */ 'A', 'D', 'C', 'X', '3', '2', 'r', 'm', 0,
  /* 19329 */ 'S', 'H', 'L', 'X', '3', '2', 'r', 'm', 0,
  /* 19338 */ 'M', 'U', 'L', 'X', '3', '2', 'r', 'm', 0,
  /* 19347 */ 'A', 'D', 'O', 'X', '3', '2', 'r', 'm', 0,
  /* 19356 */ 'S', 'A', 'R', 'X', '3', '2', 'r', 'm', 0,
  /* 19365 */ 'S', 'H', 'R', 'X', '3', '2', 'r', 'm', 0,
  /* 19374 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '2', 'r', 'm', 0,
  /* 19385 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', '6', '4', 'r', 'm', 0,
  /* 19397 */ 'C', 'M', 'O', 'V', 'A', '6', '4', 'r', 'm', 0,
  /* 19407 */ 'S', 'B', 'B', '6', '4', 'r', 'm', 0,
  /* 19415 */ 'S', 'U', 'B', '6', '4', 'r', 'm', 0,
  /* 19423 */ 'C', 'M', 'O', 'V', 'B', '6', '4', 'r', 'm', 0,
  /* 19433 */ 'A', 'D', 'C', '6', '4', 'r', 'm', 0,
  /* 19441 */ 'V', 'M', 'R', 'E', 'A', 'D', '6', '4', 'r', 'm', 0,
  /* 19452 */ 'X', 'A', 'D', 'D', '6', '4', 'r', 'm', 0,
  /* 19461 */ 'A', 'N', 'D', '6', '4', 'r', 'm', 0,
  /* 19469 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'm', 0,
  /* 19487 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'm', 0,
  /* 19504 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'm', 0,
  /* 19517 */ 'C', 'M', 'O', 'V', 'A', 'E', '6', '4', 'r', 'm', 0,
  /* 19528 */ 'C', 'M', 'O', 'V', 'B', 'E', '6', '4', 'r', 'm', 0,
  /* 19539 */ 'C', 'M', 'O', 'V', 'G', 'E', '6', '4', 'r', 'm', 0,
  /* 19550 */ 'C', 'M', 'O', 'V', 'L', 'E', '6', '4', 'r', 'm', 0,
  /* 19561 */ 'C', 'M', 'O', 'V', 'N', 'E', '6', '4', 'r', 'm', 0,
  /* 19572 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '6', '4', 'r', 'm', 0,
  /* 19584 */ 'C', 'M', 'O', 'V', 'E', '6', '4', 'r', 'm', 0,
  /* 19594 */ 'B', 'S', 'F', '6', '4', 'r', 'm', 0,
  /* 19602 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 'r', 'm', 0,
  /* 19614 */ 'C', 'M', 'O', 'V', 'G', '6', '4', 'r', 'm', 0,
  /* 19624 */ 'B', 'Z', 'H', 'I', '6', '4', 'r', 'm', 0,
  /* 19633 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19652 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19670 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19684 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19703 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19721 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19735 */ 'B', 'L', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19744 */ 'B', 'L', 'S', 'M', 'S', 'K', '6', '4', 'r', 'm', 0,
  /* 19755 */ 'L', 'S', 'L', '6', '4', 'r', 'm', 0,
  /* 19763 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 0,
  /* 19772 */ 'C', 'M', 'O', 'V', 'L', '6', '4', 'r', 'm', 0,
  /* 19782 */ 'A', 'N', 'D', 'N', '6', '4', 'r', 'm', 0,
  /* 19791 */ 'C', 'M', 'O', 'V', 'N', 'O', '6', '4', 'r', 'm', 0,
  /* 19802 */ 'C', 'M', 'O', 'V', 'O', '6', '4', 'r', 'm', 0,
  /* 19812 */ 'P', 'D', 'E', 'P', '6', '4', 'r', 'm', 0,
  /* 19821 */ 'C', 'M', 'P', '6', '4', 'r', 'm', 0,
  /* 19829 */ 'C', 'M', 'O', 'V', 'N', 'P', '6', '4', 'r', 'm', 0,
  /* 19840 */ 'C', 'M', 'O', 'V', 'P', '6', '4', 'r', 'm', 0,
  /* 19850 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'r', 'm', 0,
  /* 19863 */ 'L', 'A', 'R', '6', '4', 'r', 'm', 0,
  /* 19871 */ 'X', 'O', 'R', '6', '4', 'r', 'm', 0,
  /* 19879 */ 'B', 'S', 'R', '6', '4', 'r', 'm', 0,
  /* 19887 */ 'B', 'L', 'S', 'R', '6', '4', 'r', 'm', 0,
  /* 19896 */ 'B', 'E', 'X', 'T', 'R', '6', '4', 'r', 'm', 0,
  /* 19906 */ 'L', 'F', 'S', '6', '4', 'r', 'm', 0,
  /* 19914 */ 'L', 'G', 'S', '6', '4', 'r', 'm', 0,
  /* 19922 */ 'C', 'M', 'O', 'V', 'N', 'S', '6', '4', 'r', 'm', 0,
  /* 19933 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19951 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19968 */ 'L', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19976 */ 'C', 'M', 'O', 'V', 'S', '6', '4', 'r', 'm', 0,
  /* 19986 */ 'P', 'O', 'P', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 19997 */ 'L', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 20007 */ 'T', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 20017 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'm', 0,
  /* 20026 */ 'P', 'E', 'X', 'T', '6', '4', 'r', 'm', 0,
  /* 20035 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', '6', '4', 'r', 'm', 0,
  /* 20047 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '6', '4', 'r', 'm', 0,
  /* 20063 */ 'A', 'D', 'C', 'X', '6', '4', 'r', 'm', 0,
  /* 20072 */ 'S', 'H', 'L', 'X', '6', '4', 'r', 'm', 0,
  /* 20081 */ 'M', 'U', 'L', 'X', '6', '4', 'r', 'm', 0,
  /* 20090 */ 'A', 'D', 'O', 'X', '6', '4', 'r', 'm', 0,
  /* 20099 */ 'S', 'A', 'R', 'X', '6', '4', 'r', 'm', 0,
  /* 20108 */ 'S', 'H', 'R', 'X', '6', '4', 'r', 'm', 0,
  /* 20117 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 20132 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 20144 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 20157 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 20172 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 20184 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 20197 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', 0,
  /* 20209 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', 0,
  /* 20222 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', 0,
  /* 20234 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', 0,
  /* 20247 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 20262 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 20274 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 20287 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 20302 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 20314 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 20327 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', 0,
  /* 20339 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', 0,
  /* 20352 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', 0,
  /* 20364 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', 0,
  /* 20377 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '3', '2', 'x', '4', 'r', 'm', 0,
  /* 20392 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '3', '2', 'x', '4', 'r', 'm', 0,
  /* 20407 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '6', '4', 'x', '4', 'r', 'm', 0,
  /* 20422 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '6', '4', 'x', '4', 'r', 'm', 0,
  /* 20437 */ 'C', 'M', 'O', 'V', 'A', '1', '6', 'r', 'm', 0,
  /* 20447 */ 'S', 'B', 'B', '1', '6', 'r', 'm', 0,
  /* 20455 */ 'S', 'U', 'B', '1', '6', 'r', 'm', 0,
  /* 20463 */ 'C', 'M', 'O', 'V', 'B', '1', '6', 'r', 'm', 0,
  /* 20473 */ 'A', 'D', 'C', '1', '6', 'r', 'm', 0,
  /* 20481 */ 'X', 'A', 'D', 'D', '1', '6', 'r', 'm', 0,
  /* 20490 */ 'A', 'N', 'D', '1', '6', 'r', 'm', 0,
  /* 20498 */ 'C', 'M', 'O', 'V', 'A', 'E', '1', '6', 'r', 'm', 0,
  /* 20509 */ 'C', 'M', 'O', 'V', 'B', 'E', '1', '6', 'r', 'm', 0,
  /* 20520 */ 'C', 'M', 'O', 'V', 'G', 'E', '1', '6', 'r', 'm', 0,
  /* 20531 */ 'C', 'M', 'O', 'V', 'L', 'E', '1', '6', 'r', 'm', 0,
  /* 20542 */ 'C', 'M', 'O', 'V', 'N', 'E', '1', '6', 'r', 'm', 0,
  /* 20553 */ 'C', 'M', 'O', 'V', 'E', '1', '6', 'r', 'm', 0,
  /* 20563 */ 'B', 'S', 'F', '1', '6', 'r', 'm', 0,
  /* 20571 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'r', 'm', 0,
  /* 20583 */ 'C', 'M', 'O', 'V', 'G', '1', '6', 'r', 'm', 0,
  /* 20593 */ 'L', 'S', 'L', '1', '6', 'r', 'm', 0,
  /* 20601 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 0,
  /* 20610 */ 'C', 'M', 'O', 'V', 'L', '1', '6', 'r', 'm', 0,
  /* 20620 */ 'C', 'M', 'O', 'V', 'N', 'O', '1', '6', 'r', 'm', 0,
  /* 20631 */ 'C', 'M', 'O', 'V', 'O', '1', '6', 'r', 'm', 0,
  /* 20641 */ 'C', 'M', 'P', '1', '6', 'r', 'm', 0,
  /* 20649 */ 'C', 'M', 'O', 'V', 'N', 'P', '1', '6', 'r', 'm', 0,
  /* 20660 */ 'C', 'M', 'O', 'V', 'P', '1', '6', 'r', 'm', 0,
  /* 20670 */ 'L', 'A', 'R', '1', '6', 'r', 'm', 0,
  /* 20678 */ 'X', 'O', 'R', '1', '6', 'r', 'm', 0,
  /* 20686 */ 'B', 'S', 'R', '1', '6', 'r', 'm', 0,
  /* 20694 */ 'L', 'D', 'S', '1', '6', 'r', 'm', 0,
  /* 20702 */ 'B', 'O', 'U', 'N', 'D', 'S', '1', '6', 'r', 'm', 0,
  /* 20713 */ 'L', 'E', 'S', '1', '6', 'r', 'm', 0,
  /* 20721 */ 'L', 'F', 'S', '1', '6', 'r', 'm', 0,
  /* 20729 */ 'L', 'G', 'S', '1', '6', 'r', 'm', 0,
  /* 20737 */ 'C', 'M', 'O', 'V', 'N', 'S', '1', '6', 'r', 'm', 0,
  /* 20748 */ 'L', 'S', 'S', '1', '6', 'r', 'm', 0,
  /* 20756 */ 'C', 'M', 'O', 'V', 'S', '1', '6', 'r', 'm', 0,
  /* 20766 */ 'P', 'O', 'P', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 20777 */ 'L', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 20787 */ 'T', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 20797 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'm', 0,
  /* 20806 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '1', '6', 'r', 'm', 0,
  /* 20822 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '2', '5', '6', 'r', 'm', 0,
  /* 20836 */ 'V', 'P', 'E', 'R', 'M', '2', 'F', '1', '2', '8', 'r', 'm', 0,
  /* 20849 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '1', '2', '8', 'r', 'm', 0,
  /* 20863 */ 'V', 'P', 'E', 'R', 'M', '2', 'I', '1', '2', '8', 'r', 'm', 0,
  /* 20876 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '1', '2', '8', 'r', 'm', 0,
  /* 20890 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'm', 0,
  /* 20906 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'm', 0,
  /* 20922 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '1', '2', '8', 'r', 'm', 0,
  /* 20936 */ 'V', 'A', 'E', 'S', 'K', 'E', 'Y', 'G', 'E', 'N', 'A', 'S', 'S', 'I', 'S', 'T', '1', '2', '8', 'r', 'm', 0,
  /* 20958 */ 'S', 'B', 'B', '8', 'r', 'm', 0,
  /* 20965 */ 'S', 'U', 'B', '8', 'r', 'm', 0,
  /* 20972 */ 'A', 'D', 'C', '8', 'r', 'm', 0,
  /* 20979 */ 'X', 'A', 'D', 'D', '8', 'r', 'm', 0,
  /* 20987 */ 'A', 'N', 'D', '8', 'r', 'm', 0,
  /* 20994 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'r', 'm', 0,
  /* 21005 */ 'C', 'M', 'P', '8', 'r', 'm', 0,
  /* 21012 */ 'X', 'O', 'R', '8', 'r', 'm', 0,
  /* 21019 */ 'T', 'E', 'S', 'T', '8', 'r', 'm', 0,
  /* 21027 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '8', 'r', 'm', 0,
  /* 21042 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'A', 'r', 'm', 0,
  /* 21054 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'm', 0,
  /* 21064 */ 'V', 'P', 'S', 'H', 'A', 'B', 'r', 'm', 0,
  /* 21073 */ 'V', 'P', 'S', 'U', 'B', 'B', 'r', 'm', 0,
  /* 21082 */ 'V', 'P', 'A', 'D', 'D', 'B', 'r', 'm', 0,
  /* 21091 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'm', 0,
  /* 21101 */ 'V', 'P', 'A', 'V', 'G', 'B', 'r', 'm', 0,
  /* 21110 */ 'V', 'P', 'S', 'H', 'L', 'B', 'r', 'm', 0,
  /* 21119 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'm', 0,
  /* 21129 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'r', 'm', 0,
  /* 21140 */ 'V', 'P', 'I', 'N', 'S', 'R', 'B', 'r', 'm', 0,
  /* 21150 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'r', 'm', 0,
  /* 21160 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'r', 'm', 0,
  /* 21170 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'r', 'm', 0,
  /* 21180 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'r', 'm', 0,
  /* 21191 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'r', 'm', 0,
  /* 21202 */ 'P', 'A', 'V', 'G', 'U', 'S', 'B', 'r', 'm', 0,
  /* 21212 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'r', 'm', 0,
  /* 21222 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'r', 'm', 0,
  /* 21233 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'm', 0,
  /* 21242 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'r', 'm', 0,
  /* 21257 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'r', 'm', 0,
  /* 21267 */ 'P', 'F', 'S', 'U', 'B', 'r', 'm', 0,
  /* 21275 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'r', 'm', 0,
  /* 21285 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'm', 0,
  /* 21297 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'r', 'm', 0,
  /* 21309 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'r', 'm', 0,
  /* 21321 */ 'P', 'F', 'A', 'C', 'C', 'r', 'm', 0,
  /* 21329 */ 'P', 'F', 'N', 'A', 'C', 'C', 'r', 'm', 0,
  /* 21338 */ 'P', 'F', 'P', 'N', 'A', 'C', 'C', 'r', 'm', 0,
  /* 21348 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'r', 'm', 0,
  /* 21358 */ 'V', 'A', 'E', 'S', 'I', 'M', 'C', 'r', 'm', 0,
  /* 21368 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'r', 'm', 0,
  /* 21378 */ 'V', 'P', 'E', 'R', 'M', 'I', '2', 'D', 'r', 'm', 0,
  /* 21389 */ 'V', 'P', 'S', 'H', 'A', 'D', 'r', 'm', 0,
  /* 21398 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'm', 0,
  /* 21407 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'm', 0,
  /* 21419 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'D', 'r', 'm', 0,
  /* 21430 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'D', 'r', 'm', 0,
  /* 21442 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'm', 0,
  /* 21452 */ 'V', 'P', 'S', 'U', 'B', 'D', 'r', 'm', 0,
  /* 21461 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'r', 'm', 0,
  /* 21473 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'r', 'm', 0,
  /* 21485 */ 'P', 'F', 'A', 'D', 'D', 'r', 'm', 0,
  /* 21493 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'r', 'm', 0,
  /* 21503 */ 'V', 'P', 'A', 'D', 'D', 'D', 'r', 'm', 0,
  /* 21512 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'D', 'r', 'm', 0,
  /* 21525 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'D', 'r', 'm', 0,
  /* 21536 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'D', 'r', 'm', 0,
  /* 21548 */ 'P', 'I', '2', 'F', 'D', 'r', 'm', 0,
  /* 21556 */ 'P', 'F', '2', 'I', 'D', 'r', 'm', 0,
  /* 21564 */ 'V', 'P', 'S', 'H', 'L', 'D', 'r', 'm', 0,
  /* 21573 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'm', 0,
  /* 21582 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'm', 0,
  /* 21594 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'r', 'm', 0,
  /* 21604 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'm', 0,
  /* 21613 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'm', 0,
  /* 21625 */ 'V', 'P', 'A', 'N', 'D', 'r', 'm', 0,
  /* 21633 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'm', 0,
  /* 21643 */ 'V', 'P', 'E', 'R', 'M', 'I', '2', 'P', 'D', 'r', 'm', 0,
  /* 21655 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'm', 0,
  /* 21668 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'r', 'm', 0,
  /* 21680 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'r', 'm', 0,
  /* 21692 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'm', 0,
  /* 21704 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'm', 0,
  /* 21715 */ 'P', 'S', 'W', 'A', 'P', 'D', 'r', 'm', 0,
  /* 21724 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 21736 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 21746 */ 'V', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 21755 */ 'V', 'M', 'I', 'N', 'C', 'P', 'D', 'r', 'm', 0,
  /* 21765 */ 'V', 'M', 'A', 'X', 'C', 'P', 'D', 'r', 'm', 0,
  /* 21775 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21785 */ 'V', 'A', 'D', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21794 */ 'V', 'A', 'N', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21803 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21814 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21827 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'r', 'm', 0,
  /* 21839 */ 'V', 'M', 'O', 'V', 'H', 'P', 'D', 'r', 'm', 0,
  /* 21849 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21861 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21873 */ 'V', 'M', 'U', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21882 */ 'V', 'M', 'O', 'V', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21892 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21902 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21914 */ 'V', 'M', 'I', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21923 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'P', 'D', 'r', 'm', 0,
  /* 21936 */ 'V', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21944 */ 'V', 'X', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21953 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21964 */ 'V', 'F', 's', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21974 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'r', 'm', 0,
  /* 21984 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'm', 0,
  /* 21994 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'm', 0,
  /* 22006 */ 'V', 'D', 'I', 'V', 'P', 'D', 'r', 'm', 0,
  /* 22015 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'r', 'm', 0,
  /* 22028 */ 'V', 'M', 'A', 'X', 'P', 'D', 'r', 'm', 0,
  /* 22037 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'm', 0,
  /* 22047 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'r', 'm', 0,
  /* 22058 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'D', 'r', 'm', 0,
  /* 22071 */ 'V', 'P', 'I', 'N', 'S', 'R', 'D', 'r', 'm', 0,
  /* 22081 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'm', 0,
  /* 22097 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'm', 0,
  /* 22112 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'm', 0,
  /* 22128 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'm', 0,
  /* 22143 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'm', 0,
  /* 22152 */ 'V', 'M', 'I', 'N', 'C', 'S', 'D', 'r', 'm', 0,
  /* 22162 */ 'V', 'M', 'A', 'X', 'C', 'S', 'D', 'r', 'm', 0,
  /* 22172 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'm', 0,
  /* 22181 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 22196 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 22210 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 22224 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 22237 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'm', 0,
  /* 22246 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'r', 'm', 0,
  /* 22256 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'm', 0,
  /* 22265 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'm', 0,
  /* 22278 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'D', 'r', 'm', 0,
  /* 22290 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'm', 0,
  /* 22299 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'm', 0,
  /* 22308 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'r', 'm', 0,
  /* 22318 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'm', 0,
  /* 22327 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'D', 'r', 'm', 0,
  /* 22337 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'S', 'D', 'r', 'm', 0,
  /* 22350 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'r', 'm', 0,
  /* 22361 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'm', 0,
  /* 22370 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'r', 'm', 0,
  /* 22385 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'r', 'm', 0,
  /* 22395 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'r', 'm', 0,
  /* 22405 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'r', 'm', 0,
  /* 22415 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'r', 'm', 0,
  /* 22425 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'r', 'm', 0,
  /* 22435 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'r', 'm', 0,
  /* 22448 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'D', 'r', 'm', 0,
  /* 22459 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'D', 'r', 'm', 0,
  /* 22470 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'r', 'm', 0,
  /* 22481 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'r', 'm', 0,
  /* 22494 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'r', 'm', 0,
  /* 22507 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'D', 'r', 'm', 0,
  /* 22518 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'W', 'D', 'r', 'm', 0,
  /* 22530 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'D', 'r', 'm', 0,
  /* 22542 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'S', 'W', 'D', 'r', 'm', 0,
  /* 22555 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'D', 'r', 'm', 0,
  /* 22567 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'r', 'm', 0,
  /* 22579 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'r', 'm', 0,
  /* 22591 */ 'P', 'F', 'C', 'M', 'P', 'G', 'E', 'r', 'm', 0,
  /* 22601 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'H', 'r', 'm', 0,
  /* 22613 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'H', 'r', 'm', 0,
  /* 22626 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 22639 */ 'V', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 22653 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 22670 */ 'V', 'M', 'O', 'V', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 22683 */ 'V', 'M', 'O', 'V', 'Z', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 22697 */ 'V', 'M', 'O', 'V', 'Z', 'P', 'Q', 'I', 'L', 'o', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 22714 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'r', 'm', 0,
  /* 22727 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'r', 'm', 0,
  /* 22740 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 22757 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 22773 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 22785 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 22802 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 22818 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 22830 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'L', 'r', 'm', 0,
  /* 22842 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'L', 'r', 'm', 0,
  /* 22855 */ 'P', 'F', 'M', 'U', 'L', 'r', 'm', 0,
  /* 22863 */ 'V', 'P', 'P', 'E', 'R', 'M', 'r', 'm', 0,
  /* 22872 */ 'V', 'P', 'A', 'N', 'D', 'N', 'r', 'm', 0,
  /* 22881 */ 'P', 'F', 'M', 'I', 'N', 'r', 'm', 0,
  /* 22889 */ 'P', 'F', 'R', 'C', 'P', 'r', 'm', 0,
  /* 22897 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22908 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22920 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22932 */ 'V', 'P', 'E', 'R', 'M', 'I', '2', 'Q', 'r', 'm', 0,
  /* 22943 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'r', 'm', 0,
  /* 22952 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'Q', 'r', 'm', 0,
  /* 22963 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'Q', 'r', 'm', 0,
  /* 22975 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'r', 'm', 0,
  /* 22984 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'r', 'm', 0,
  /* 22996 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'r', 'm', 0,
  /* 23008 */ 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'm', 0,
  /* 23020 */ 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'm', 0,
  /* 23031 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'm', 0,
  /* 23044 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'm', 0,
  /* 23056 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Q', 'r', 'm', 0,
  /* 23067 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'r', 'm', 0,
  /* 23076 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Q', 'r', 'm', 0,
  /* 23087 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'r', 'm', 0,
  /* 23100 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'r', 'm', 0,
  /* 23113 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'r', 'm', 0,
  /* 23123 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 23137 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 23151 */ 'V', 'P', 'C', 'L', 'M', 'U', 'L', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 23164 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'Q', 'r', 'm', 0,
  /* 23177 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'D', 'Q', 'r', 'm', 0,
  /* 23189 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'r', 'm', 0,
  /* 23200 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'r', 'm', 0,
  /* 23212 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'r', 'm', 0,
  /* 23224 */ 'P', 'F', 'C', 'M', 'P', 'E', 'Q', 'r', 'm', 0,
  /* 23234 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'r', 'm', 0,
  /* 23243 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'm', 0,
  /* 23252 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'm', 0,
  /* 23264 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'm', 0,
  /* 23273 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'm', 0,
  /* 23285 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'r', 'm', 0,
  /* 23296 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'Q', 'r', 'm', 0,
  /* 23309 */ 'V', 'P', 'I', 'N', 'S', 'R', 'Q', 'r', 'm', 0,
  /* 23319 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'r', 'm', 0,
  /* 23330 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'm', 0,
  /* 23339 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'r', 'm', 0,
  /* 23354 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'r', 'm', 0,
  /* 23364 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'r', 'm', 0,
  /* 23374 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'r', 'm', 0,
  /* 23387 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Q', 'r', 'm', 0,
  /* 23398 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'Q', 'r', 'm', 0,
  /* 23410 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'r', 'm', 0,
  /* 23422 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'r', 'm', 0,
  /* 23434 */ 'P', 'F', 'S', 'U', 'B', 'R', 'r', 'm', 0,
  /* 23443 */ 'V', 'P', 'O', 'R', 'r', 'm', 0,
  /* 23450 */ 'V', 'P', 'X', 'O', 'R', 'r', 'm', 0,
  /* 23458 */ 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'r', 'm', 0,
  /* 23469 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'r', 'm', 0,
  /* 23481 */ 'V', 'P', 'E', 'R', 'M', 'I', '2', 'P', 'S', 'r', 'm', 0,
  /* 23493 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'm', 0,
  /* 23506 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'r', 'm', 0,
  /* 23518 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'm', 0,
  /* 23530 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'm', 0,
  /* 23541 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 23553 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 23563 */ 'V', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 23572 */ 'V', 'M', 'I', 'N', 'C', 'P', 'S', 'r', 'm', 0,
  /* 23582 */ 'V', 'M', 'A', 'X', 'C', 'P', 'S', 'r', 'm', 0,
  /* 23592 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23602 */ 'V', 'A', 'D', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23611 */ 'V', 'A', 'N', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23620 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23631 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23644 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'r', 'm', 0,
  /* 23656 */ 'V', 'M', 'O', 'V', 'H', 'P', 'S', 'r', 'm', 0,
  /* 23666 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'm', 0,
  /* 23678 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'r', 'm', 0,
  /* 23690 */ 'V', 'M', 'U', 'L', 'P', 'S', 'r', 'm', 0,
  /* 23699 */ 'V', 'M', 'O', 'V', 'L', 'P', 'S', 'r', 'm', 0,
  /* 23709 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'm', 0,
  /* 23719 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'm', 0,
  /* 23731 */ 'V', 'M', 'I', 'N', 'P', 'S', 'r', 'm', 0,
  /* 23740 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'P', 'S', 'r', 'm', 0,
  /* 23753 */ 'V', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 23761 */ 'V', 'X', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 23770 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 23781 */ 'V', 'F', 's', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 23791 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'P', 'S', 'r', 'm', 0,
  /* 23803 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'r', 'm', 0,
  /* 23813 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'm', 0,
  /* 23823 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'm', 0,
  /* 23835 */ 'V', 'D', 'I', 'V', 'P', 'S', 'r', 'm', 0,
  /* 23844 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'r', 'm', 0,
  /* 23857 */ 'V', 'M', 'A', 'X', 'P', 'S', 'r', 'm', 0,
  /* 23866 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'm', 0,
  /* 23876 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'm', 0,
  /* 23892 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'm', 0,
  /* 23907 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23919 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23935 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23950 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'm', 0,
  /* 23959 */ 'V', 'M', 'I', 'N', 'C', 'S', 'S', 'r', 'm', 0,
  /* 23969 */ 'V', 'M', 'A', 'X', 'C', 'S', 'S', 'r', 'm', 0,
  /* 23979 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'm', 0,
  /* 23988 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 24003 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 24017 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 24031 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 24044 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'm', 0,
  /* 24053 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'm', 0,
  /* 24062 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'm', 0,
  /* 24075 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'S', 'r', 'm', 0,
  /* 24087 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'r', 'm', 0,
  /* 24102 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'm', 0,
  /* 24111 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'm', 0,
  /* 24120 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'm', 0,
  /* 24129 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'S', 'r', 'm', 0,
  /* 24139 */ 'P', 'F', 'C', 'M', 'P', 'G', 'T', 'r', 'm', 0,
  /* 24149 */ 'P', 'F', 'R', 'S', 'Q', 'R', 'T', 'r', 'm', 0,
  /* 24159 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'L', 'A', 'S', 'T', 'r', 'm', 0,
  /* 24173 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'L', 'A', 'S', 'T', 'r', 'm', 0,
  /* 24187 */ 'V', 'P', 'T', 'E', 'S', 'T', 'r', 'm', 0,
  /* 24196 */ 'V', 'L', 'D', 'D', 'Q', 'U', 'r', 'm', 0,
  /* 24205 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'm', 0,
  /* 24215 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'm', 0,
  /* 24224 */ 'V', 'P', 'S', 'H', 'A', 'W', 'r', 'm', 0,
  /* 24233 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'm', 0,
  /* 24242 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'm', 0,
  /* 24254 */ 'V', 'P', 'H', 'S', 'U', 'B', 'B', 'W', 'r', 'm', 0,
  /* 24265 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'm', 0,
  /* 24275 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'W', 'r', 'm', 0,
  /* 24286 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'r', 'm', 0,
  /* 24299 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'r', 'm', 0,
  /* 24312 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'W', 'r', 'm', 0,
  /* 24324 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'm', 0,
  /* 24334 */ 'V', 'P', 'S', 'U', 'B', 'W', 'r', 'm', 0,
  /* 24343 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'r', 'm', 0,
  /* 24355 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'r', 'm', 0,
  /* 24367 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'm', 0,
  /* 24377 */ 'V', 'P', 'A', 'D', 'D', 'W', 'r', 'm', 0,
  /* 24386 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'r', 'm', 0,
  /* 24398 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'r', 'm', 0,
  /* 24410 */ 'P', 'I', '2', 'F', 'W', 'r', 'm', 0,
  /* 24418 */ 'V', 'P', 'A', 'V', 'G', 'W', 'r', 'm', 0,
  /* 24427 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'r', 'm', 0,
  /* 24437 */ 'P', 'F', '2', 'I', 'W', 'r', 'm', 0,
  /* 24445 */ 'V', 'P', 'S', 'H', 'L', 'W', 'r', 'm', 0,
  /* 24454 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'm', 0,
  /* 24463 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'm', 0,
  /* 24475 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'r', 'm', 0,
  /* 24485 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'm', 0,
  /* 24494 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'm', 0,
  /* 24506 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'm', 0,
  /* 24516 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'r', 'm', 0,
  /* 24527 */ 'P', 'M', 'U', 'L', 'H', 'R', 'W', 'r', 'm', 0,
  /* 24537 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'r', 'm', 0,
  /* 24547 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'r', 'm', 0,
  /* 24557 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'r', 'm', 0,
  /* 24567 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'r', 'm', 0,
  /* 24578 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'r', 'm', 0,
  /* 24589 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'r', 'm', 0,
  /* 24599 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'r', 'm', 0,
  /* 24610 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'm', 0,
  /* 24619 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'r', 'm', 0,
  /* 24634 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'r', 'm', 0,
  /* 24645 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'r', 'm', 0,
  /* 24655 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'r', 'm', 0,
  /* 24665 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'W', 'r', 'm', 0,
  /* 24676 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'W', 'r', 'm', 0,
  /* 24688 */ 'P', 'F', 'M', 'A', 'X', 'r', 'm', 0,
  /* 24696 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'm', 0,
  /* 24710 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'm', 0,
  /* 24723 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'X', 'r', 'm', 0,
  /* 24736 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'A', 'Y', 'r', 'm', 0,
  /* 24749 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'm', 0,
  /* 24760 */ 'V', 'P', 'S', 'U', 'B', 'B', 'Y', 'r', 'm', 0,
  /* 24770 */ 'V', 'P', 'A', 'D', 'D', 'B', 'Y', 'r', 'm', 0,
  /* 24780 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'Y', 'r', 'm', 0,
  /* 24791 */ 'V', 'P', 'A', 'V', 'G', 'B', 'Y', 'r', 'm', 0,
  /* 24801 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'Y', 'r', 'm', 0,
  /* 24812 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'Y', 'r', 'm', 0,
  /* 24824 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24835 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24846 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24857 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24869 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24881 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24892 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'Y', 'r', 'm', 0,
  /* 24904 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'Y', 'r', 'm', 0,
  /* 24920 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'Y', 'r', 'm', 0,
  /* 24931 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'Y', 'r', 'm', 0,
  /* 24942 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'Y', 'r', 'm', 0,
  /* 24955 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'Y', 'r', 'm', 0,
  /* 24968 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'Y', 'r', 'm', 0,
  /* 24981 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'm', 0,
  /* 24991 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 25002 */ 'V', 'P', 'S', 'U', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 25012 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 25025 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 25038 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Y', 'r', 'm', 0,
  /* 25049 */ 'V', 'P', 'A', 'D', 'D', 'D', 'Y', 'r', 'm', 0,
  /* 25059 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'D', 'Y', 'r', 'm', 0,
  /* 25073 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 25083 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 25094 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 25104 */ 'V', 'P', 'E', 'R', 'M', 'D', 'Y', 'r', 'm', 0,
  /* 25114 */ 'V', 'P', 'A', 'N', 'D', 'Y', 'r', 'm', 0,
  /* 25123 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'Y', 'r', 'm', 0,
  /* 25134 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25147 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25160 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25171 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25184 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25195 */ 'V', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25205 */ 'V', 'M', 'I', 'N', 'C', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25216 */ 'V', 'M', 'A', 'X', 'C', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25227 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25238 */ 'V', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25248 */ 'V', 'A', 'N', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25258 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25272 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25285 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25298 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25311 */ 'V', 'M', 'U', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25321 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25332 */ 'V', 'M', 'I', 'N', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25342 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25356 */ 'V', 'O', 'R', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25365 */ 'V', 'X', 'O', 'R', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25375 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25386 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25397 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25410 */ 'V', 'D', 'I', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25420 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25434 */ 'V', 'M', 'A', 'X', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25444 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'Y', 'r', 'm', 0,
  /* 25456 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'D', 'Y', 'r', 'm', 0,
  /* 25470 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'Y', 'r', 'm', 0,
  /* 25481 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'D', 'Y', 'r', 'm', 0,
  /* 25497 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'Y', 'r', 'm', 0,
  /* 25508 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'Y', 'r', 'm', 0,
  /* 25520 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Y', 'r', 'm', 0,
  /* 25536 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'Y', 'r', 'm', 0,
  /* 25547 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'Y', 'r', 'm', 0,
  /* 25558 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 25569 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 25580 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 25591 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 25605 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25617 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25631 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25645 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25658 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25671 */ 'V', 'P', 'A', 'N', 'D', 'N', 'Y', 'r', 'm', 0,
  /* 25681 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 25693 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 25706 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 25719 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 25729 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 25742 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 25755 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25769 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25782 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25796 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25809 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25819 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25833 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25847 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25858 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25873 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25888 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25902 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25914 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25927 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25940 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'm', 0,
  /* 25950 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'm', 0,
  /* 25960 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'Y', 'r', 'm', 0,
  /* 25972 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'Q', 'Y', 'r', 'm', 0,
  /* 25986 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'Y', 'r', 'm', 0,
  /* 25998 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Y', 'r', 'm', 0,
  /* 26014 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 26025 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 26036 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 26050 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'Y', 'r', 'm', 0,
  /* 26063 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'Y', 'r', 'm', 0,
  /* 26076 */ 'V', 'P', 'O', 'R', 'Y', 'r', 'm', 0,
  /* 26084 */ 'V', 'P', 'X', 'O', 'R', 'Y', 'r', 'm', 0,
  /* 26093 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26106 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26119 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26132 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26143 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26156 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26167 */ 'V', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26177 */ 'V', 'M', 'I', 'N', 'C', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26188 */ 'V', 'M', 'A', 'X', 'C', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26199 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26210 */ 'V', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26220 */ 'V', 'A', 'N', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26230 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26244 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26257 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26270 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26283 */ 'V', 'M', 'U', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26293 */ 'V', 'P', 'E', 'R', 'M', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26304 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26315 */ 'V', 'M', 'I', 'N', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26325 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26339 */ 'V', 'O', 'R', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26348 */ 'V', 'X', 'O', 'R', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26358 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26369 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26380 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26393 */ 'V', 'D', 'I', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26403 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26417 */ 'V', 'M', 'A', 'X', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26427 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'Y', 'r', 'm', 0,
  /* 26443 */ 'V', 'P', 'T', 'E', 'S', 'T', 'Y', 'r', 'm', 0,
  /* 26453 */ 'V', 'L', 'D', 'D', 'Q', 'U', 'Y', 'r', 'm', 0,
  /* 26463 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'm', 0,
  /* 26474 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'm', 0,
  /* 26484 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26495 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26509 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26523 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26534 */ 'V', 'P', 'S', 'U', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26544 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26557 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26570 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 26581 */ 'V', 'P', 'A', 'D', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 26591 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 26604 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 26617 */ 'V', 'P', 'A', 'V', 'G', 'W', 'Y', 'r', 'm', 0,
  /* 26627 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'Y', 'r', 'm', 0,
  /* 26638 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 26648 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 26659 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 26669 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'Y', 'r', 'm', 0,
  /* 26680 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'Y', 'r', 'm', 0,
  /* 26692 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26703 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26714 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26725 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26737 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26749 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26760 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'Y', 'r', 'm', 0,
  /* 26772 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'Y', 'r', 'm', 0,
  /* 26788 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 26800 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 26811 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 26822 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'M', 'D', 'Z', 'r', 'm', 0,
  /* 26835 */ 'V', 'P', 'E', 'R', 'M', 'D', 'Z', 'r', 'm', 0,
  /* 26845 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Z', 'r', 'm', 0,
  /* 26856 */ 'V', 'B', 'L', 'E', 'N', 'D', 'M', 'P', 'D', 'Z', 'r', 'm', 0,
  /* 26869 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Z', 'r', 'm', 0,
  /* 26880 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Z', 'r', 'm', 0,
  /* 26891 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'Z', 'r', 'm', 0,
  /* 26903 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'D', 'Z', 'r', 'm', 0,
  /* 26919 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'Z', 'r', 'm', 0,
  /* 26931 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Z', 'r', 'm', 0,
  /* 26947 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'M', 'Q', 'Z', 'r', 'm', 0,
  /* 26960 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Z', 'r', 'm', 0,
  /* 26970 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'Z', 'r', 'm', 0,
  /* 26982 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'Z', 'r', 'm', 0,
  /* 26994 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Z', 'r', 'm', 0,
  /* 27010 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Z', 'r', 'm', 0,
  /* 27021 */ 'V', 'B', 'L', 'E', 'N', 'D', 'M', 'P', 'S', 'Z', 'r', 'm', 0,
  /* 27034 */ 'V', 'P', 'E', 'R', 'M', 'P', 'S', 'Z', 'r', 'm', 0,
  /* 27045 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Z', 'r', 'm', 0,
  /* 27056 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'Z', 'r', 'm', 0,
  /* 27072 */ 'M', 'M', 'X', '_', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '6', '4', 'i', 'r', 'm', 0,
  /* 27089 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'B', 'i', 'r', 'm', 0,
  /* 27102 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'B', 'i', 'r', 'm', 0,
  /* 27115 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'B', 'i', 'r', 'm', 0,
  /* 27128 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'i', 'r', 'm', 0,
  /* 27143 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'B', 'i', 'r', 'm', 0,
  /* 27157 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'B', 'i', 'r', 'm', 0,
  /* 27171 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'i', 'r', 'm', 0,
  /* 27186 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'i', 'r', 'm', 0,
  /* 27201 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'i', 'r', 'm', 0,
  /* 27216 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'U', 'B', 'i', 'r', 'm', 0,
  /* 27230 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'U', 'B', 'i', 'r', 'm', 0,
  /* 27244 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'i', 'r', 'm', 0,
  /* 27260 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'i', 'r', 'm', 0,
  /* 27276 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'D', 'i', 'r', 'm', 0,
  /* 27289 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'D', 'i', 'r', 'm', 0,
  /* 27302 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'i', 'r', 'm', 0,
  /* 27314 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'D', 'i', 'r', 'm', 0,
  /* 27330 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'i', 'r', 'm', 0,
  /* 27345 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'i', 'r', 'm', 0,
  /* 27360 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'i', 'r', 'm', 0,
  /* 27375 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'i', 'r', 'm', 0,
  /* 27392 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'i', 'r', 'm', 0,
  /* 27409 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 27426 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 27442 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 27459 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 27475 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'N', 'i', 'r', 'm', 0,
  /* 27488 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'Q', 'i', 'r', 'm', 0,
  /* 27501 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 27514 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 27531 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 27548 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 27563 */ 'M', 'M', 'X', '_', 'P', 'O', 'R', 'i', 'r', 'm', 0,
  /* 27574 */ 'M', 'M', 'X', '_', 'P', 'X', 'O', 'R', 'i', 'r', 'm', 0,
  /* 27586 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'S', 'i', 'r', 'm', 0,
  /* 27602 */ 'M', 'M', 'X', '_', 'P', 'S', 'A', 'D', 'B', 'W', 'i', 'r', 'm', 0,
  /* 27616 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'i', 'r', 'm', 0,
  /* 27633 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'i', 'r', 'm', 0,
  /* 27650 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'W', 'i', 'r', 'm', 0,
  /* 27663 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'W', 'i', 'r', 'm', 0,
  /* 27676 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'i', 'r', 'm', 0,
  /* 27692 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'W', 'i', 'r', 'm', 0,
  /* 27705 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'W', 'i', 'r', 'm', 0,
  /* 27719 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'L', 'W', 'i', 'r', 'm', 0,
  /* 27733 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'i', 'r', 'm', 0,
  /* 27748 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27762 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27776 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27790 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27805 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27820 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27834 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'i', 'r', 'm', 0,
  /* 27849 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'i', 'r', 'm', 0,
  /* 27864 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Z', 'k', 'r', 'm', 0,
  /* 27881 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Z', 'k', 'r', 'm', 0,
  /* 27898 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'P', 'S', 'z', 'r', 'm', 0,
  /* 27911 */ 'M', 'O', 'V', '3', '2', 's', 'm', 0,
  /* 27919 */ 'M', 'O', 'V', '6', '4', 's', 'm', 0,
  /* 27927 */ 'M', 'O', 'V', '1', '6', 's', 'm', 0,
  /* 27935 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 0,
  /* 27949 */ 'S', 'U', 'B', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27959 */ 'A', 'D', 'D', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27969 */ 'M', 'U', 'L', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27979 */ 'C', 'O', 'M', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27989 */ 'C', 'O', 'M', 'P', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 28000 */ 'S', 'U', 'B', 'R', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 28011 */ 'D', 'I', 'V', 'R', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 28022 */ 'D', 'I', 'V', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 28032 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28049 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28063 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28078 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28095 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28109 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28124 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28138 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28153 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28167 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 28182 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28199 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28213 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28228 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28245 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28259 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28274 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28288 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28303 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28317 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 28332 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28349 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28363 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28378 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28395 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28409 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28424 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28438 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28453 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28467 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28482 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28499 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28513 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28528 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28545 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28559 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28574 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28588 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28603 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28617 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28632 */ 'L', 'E', 'A', '3', '2', 'r', 0,
  /* 28639 */ 'D', 'E', 'C', '3', '2', 'r', 0,
  /* 28646 */ 'I', 'N', 'C', '3', '2', 'r', 0,
  /* 28653 */ 'M', 'O', 'V', 'P', 'C', '3', '2', 'r', 0,
  /* 28662 */ 'S', 'E', 'T', 'B', '_', 'C', '3', '2', 'r', 0,
  /* 28672 */ 'R', 'D', 'S', 'E', 'E', 'D', '3', '2', 'r', 0,
  /* 28682 */ 'R', 'D', 'R', 'A', 'N', 'D', '3', '2', 'r', 0,
  /* 28692 */ 'N', 'E', 'G', '3', '2', 'r', 0,
  /* 28699 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 0,
  /* 28707 */ 'C', 'A', 'L', 'L', '3', '2', 'r', 0,
  /* 28715 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 0,
  /* 28723 */ 'B', 'S', 'W', 'A', 'P', '3', '2', 'r', 0,
  /* 28732 */ 'J', 'M', 'P', '3', '2', 'r', 0,
  /* 28739 */ 'P', 'O', 'P', '3', '2', 'r', 0,
  /* 28746 */ 'S', 'T', 'R', '3', '2', 'r', 0,
  /* 28753 */ 'S', 'L', 'D', 'T', '3', '2', 'r', 0,
  /* 28761 */ 'N', 'O', 'T', '3', '2', 'r', 0,
  /* 28768 */ 'I', 'D', 'I', 'V', '3', '2', 'r', 0,
  /* 28776 */ 'S', 'M', 'S', 'W', '3', '2', 'r', 0,
  /* 28784 */ 'L', 'E', 'A', '6', '4', '_', '3', '2', 'r', 0,
  /* 28794 */ 'D', 'E', 'C', '6', '4', '_', '3', '2', 'r', 0,
  /* 28804 */ 'I', 'N', 'C', '6', '4', '_', '3', '2', 'r', 0,
  /* 28814 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28831 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28845 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28860 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28877 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28891 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28906 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28920 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28935 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28949 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28964 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28981 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28995 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 29010 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 29027 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 29041 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 29056 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 29070 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 29085 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 29099 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 29114 */ 'L', 'E', 'A', '6', '4', 'r', 0,
  /* 29121 */ 'D', 'E', 'C', '6', '4', 'r', 0,
  /* 29128 */ 'I', 'N', 'C', '6', '4', 'r', 0,
  /* 29135 */ 'S', 'E', 'T', 'B', '_', 'C', '6', '4', 'r', 0,
  /* 29145 */ 'R', 'D', 'S', 'E', 'E', 'D', '6', '4', 'r', 0,
  /* 29155 */ 'R', 'D', 'R', 'A', 'N', 'D', '6', '4', 'r', 0,
  /* 29165 */ 'N', 'E', 'G', '6', '4', 'r', 0,
  /* 29172 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 0,
  /* 29180 */ 'C', 'A', 'L', 'L', '6', '4', 'r', 0,
  /* 29188 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 0,
  /* 29196 */ 'B', 'S', 'W', 'A', 'P', '6', '4', 'r', 0,
  /* 29205 */ 'J', 'M', 'P', '6', '4', 'r', 0,
  /* 29212 */ 'P', 'O', 'P', '6', '4', 'r', 0,
  /* 29219 */ 'S', 'T', 'R', '6', '4', 'r', 0,
  /* 29226 */ 'S', 'L', 'D', 'T', '6', '4', 'r', 0,
  /* 29234 */ 'N', 'O', 'T', '6', '4', 'r', 0,
  /* 29241 */ 'I', 'D', 'I', 'V', '6', '4', 'r', 0,
  /* 29249 */ 'S', 'M', 'S', 'W', '6', '4', 'r', 0,
  /* 29257 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', '6', '4', 'r', 0,
  /* 29271 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', '6', '4', 'r', 0,
  /* 29285 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', '6', '4', 'r', 0,
  /* 29299 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'Y', 'r', '6', '4', 'r', 0,
  /* 29314 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', '6', '4', 'r', 0,
  /* 29329 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', '6', '4', 'r', 0,
  /* 29344 */ 'L', 'E', 'A', '1', '6', 'r', 0,
  /* 29351 */ 'D', 'E', 'C', '1', '6', 'r', 0,
  /* 29358 */ 'I', 'N', 'C', '1', '6', 'r', 0,
  /* 29365 */ 'S', 'E', 'T', 'B', '_', 'C', '1', '6', 'r', 0,
  /* 29375 */ 'R', 'D', 'S', 'E', 'E', 'D', '1', '6', 'r', 0,
  /* 29385 */ 'R', 'D', 'R', 'A', 'N', 'D', '1', '6', 'r', 0,
  /* 29395 */ 'N', 'E', 'G', '1', '6', 'r', 0,
  /* 29402 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 0,
  /* 29410 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 0,
  /* 29418 */ 'P', 'O', 'P', '1', '6', 'r', 0,
  /* 29425 */ 'S', 'T', 'R', '1', '6', 'r', 0,
  /* 29432 */ 'L', 'L', 'D', 'T', '1', '6', 'r', 0,
  /* 29440 */ 'S', 'L', 'D', 'T', '1', '6', 'r', 0,
  /* 29448 */ 'N', 'O', 'T', '1', '6', 'r', 0,
  /* 29455 */ 'I', 'D', 'I', 'V', '1', '6', 'r', 0,
  /* 29463 */ 'L', 'M', 'S', 'W', '1', '6', 'r', 0,
  /* 29471 */ 'S', 'M', 'S', 'W', '1', '6', 'r', 0,
  /* 29479 */ 'F', 'N', 'S', 'T', 'S', 'W', '1', '6', 'r', 0,
  /* 29489 */ 'D', 'E', 'C', '6', '4', '_', '1', '6', 'r', 0,
  /* 29499 */ 'I', 'N', 'C', '6', '4', '_', '1', '6', 'r', 0,
  /* 29509 */ 'D', 'E', 'C', '8', 'r', 0,
  /* 29515 */ 'I', 'N', 'C', '8', 'r', 0,
  /* 29521 */ 'S', 'E', 'T', 'B', '_', 'C', '8', 'r', 0,
  /* 29530 */ 'N', 'E', 'G', '8', 'r', 0,
  /* 29536 */ 'I', 'M', 'U', 'L', '8', 'r', 0,
  /* 29543 */ 'N', 'O', 'T', '8', 'r', 0,
  /* 29549 */ 'I', 'D', 'I', 'V', '8', 'r', 0,
  /* 29556 */ 'S', 'E', 'T', 'A', 'r', 0,
  /* 29562 */ 'S', 'E', 'T', 'B', 'r', 0,
  /* 29568 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'D', 'r', 0,
  /* 29578 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'r', 0,
  /* 29587 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'D', 'r', 0,
  /* 29598 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'r', 0,
  /* 29608 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'r', 0,
  /* 29617 */ 'S', 'E', 'T', 'A', 'E', 'r', 0,
  /* 29624 */ 'S', 'E', 'T', 'B', 'E', 'r', 0,
  /* 29631 */ 'S', 'E', 'T', 'G', 'E', 'r', 0,
  /* 29638 */ 'S', 'E', 'T', 'L', 'E', 'r', 0,
  /* 29645 */ 'S', 'E', 'T', 'N', 'E', 'r', 0,
  /* 29652 */ 'S', 'E', 'T', 'E', 'r', 0,
  /* 29658 */ 'U', 'C', 'O', 'M', '_', 'F', 'r', 0,
  /* 29666 */ 'S', 'E', 'T', 'G', 'r', 0,
  /* 29672 */ 'U', 'C', 'O', 'M', '_', 'F', 'I', 'r', 0,
  /* 29681 */ 'S', 'E', 'T', 'L', 'r', 0,
  /* 29687 */ 'S', 'E', 'T', 'N', 'O', 'r', 0,
  /* 29694 */ 'S', 'E', 'T', 'O', 'r', 0,
  /* 29700 */ 'U', 'C', 'O', 'M', '_', 'F', 'P', 'r', 0,
  /* 29709 */ 'U', 'C', 'O', 'M', '_', 'F', 'I', 'P', 'r', 0,
  /* 29719 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'r', 0,
  /* 29728 */ 'S', 'E', 'T', 'N', 'P', 'r', 0,
  /* 29735 */ 'U', 'C', 'O', 'M', '_', 'F', 'P', 'P', 'r', 0,
  /* 29745 */ 'S', 'E', 'T', 'P', 'r', 0,
  /* 29751 */ 'V', 'E', 'R', 'R', 'r', 0,
  /* 29757 */ 'L', 'T', 'R', 'r', 0,
  /* 29762 */ 'S', 'E', 'T', 'N', 'S', 'r', 0,
  /* 29769 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'S', 'r', 0,
  /* 29779 */ 'V', 'R', 'C', 'P', 'P', 'S', 'r', 0,
  /* 29787 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', 0,
  /* 29797 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', 0,
  /* 29806 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'S', 'r', 0,
  /* 29817 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'r', 0,
  /* 29827 */ 'V', 'R', 'C', 'P', 'S', 'S', 'r', 0,
  /* 29835 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', 0,
  /* 29845 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', 0,
  /* 29854 */ 'S', 'E', 'T', 'S', 'r', 0,
  /* 29860 */ 'V', 'E', 'R', 'W', 'r', 0,
  /* 29866 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'Y', 'r', 0,
  /* 29876 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'r', 0,
  /* 29885 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', 0,
  /* 29896 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', 0,
  /* 29906 */ 'X', 'C', 'H', 'G', '3', '2', 'a', 'r', 0,
  /* 29915 */ 'X', 'C', 'H', 'G', '6', '4', 'a', 'r', 0,
  /* 29924 */ 'X', 'C', 'H', 'G', '1', '6', 'a', 'r', 0,
  /* 29933 */ 'M', 'O', 'V', '3', '2', 'c', 'r', 0,
  /* 29941 */ 'M', 'O', 'V', '6', '4', 'c', 'r', 0,
  /* 29949 */ 'M', 'O', 'V', '3', '2', 'd', 'r', 0,
  /* 29957 */ 'M', 'O', 'V', '6', '4', 'd', 'r', 0,
  /* 29965 */ 'I', 'n', 't', '_', 'M', 'e', 'm', 'B', 'a', 'r', 'r', 'i', 'e', 'r', 0,
  /* 29980 */ 'O', 'U', 'T', '3', '2', 'i', 'r', 0,
  /* 29988 */ 'O', 'U', 'T', '1', '6', 'i', 'r', 0,
  /* 29996 */ 'O', 'U', 'T', '8', 'i', 'r', 0,
  /* 30003 */ 'K', 'M', 'O', 'V', 'W', 'k', 'r', 0,
  /* 30011 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', '3', '2', 'm', 'r', 0,
  /* 30023 */ 'S', 'B', 'B', '3', '2', 'm', 'r', 0,
  /* 30031 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'r', 0,
  /* 30044 */ 'A', 'D', 'C', '3', '2', 'm', 'r', 0,
  /* 30052 */ 'B', 'T', 'C', '3', '2', 'm', 'r', 0,
  /* 30060 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'r', 0,
  /* 30073 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'r', 0,
  /* 30086 */ 'M', 'O', 'V', 'B', 'E', '3', '2', 'm', 'r', 0,
  /* 30096 */ 'C', 'M', 'P', '3', '2', 'm', 'r', 0,
  /* 30104 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'r', 0,
  /* 30117 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'r', 0,
  /* 30129 */ 'B', 'T', 'R', '3', '2', 'm', 'r', 0,
  /* 30137 */ 'B', 'T', 'S', '3', '2', 'm', 'r', 0,
  /* 30145 */ 'B', 'T', '3', '2', 'm', 'r', 0,
  /* 30152 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '3', '2', 'm', 'r', 0,
  /* 30168 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', '6', '4', 'm', 'r', 0,
  /* 30180 */ 'S', 'B', 'B', '6', '4', 'm', 'r', 0,
  /* 30188 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'r', 0,
  /* 30201 */ 'A', 'D', 'C', '6', '4', 'm', 'r', 0,
  /* 30209 */ 'B', 'T', 'C', '6', '4', 'm', 'r', 0,
  /* 30217 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'r', 0,
  /* 30230 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'r', 0,
  /* 30243 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'm', 'r', 0,
  /* 30256 */ 'M', 'O', 'V', 'B', 'E', '6', '4', 'm', 'r', 0,
  /* 30266 */ 'C', 'M', 'P', '6', '4', 'm', 'r', 0,
  /* 30274 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'm', 'r', 0,
  /* 30287 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'r', 0,
  /* 30300 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'r', 0,
  /* 30312 */ 'B', 'T', 'R', '6', '4', 'm', 'r', 0,
  /* 30320 */ 'B', 'T', 'S', '6', '4', 'm', 'r', 0,
  /* 30328 */ 'B', 'T', '6', '4', 'm', 'r', 0,
  /* 30335 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '6', '4', 'm', 'r', 0,
  /* 30351 */ 'M', 'O', 'V', 'N', 'T', 'I', '_', '6', '4', 'm', 'r', 0,
  /* 30363 */ 'V', 'M', 'O', 'V', 'S', 'D', 't', 'o', '6', '4', 'm', 'r', 0,
  /* 30376 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 30391 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 30403 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 30416 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 30431 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 30443 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 30456 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', 0,
  /* 30468 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', 0,
  /* 30481 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', 0,
  /* 30493 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', 0,
  /* 30506 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 30521 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 30533 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 30546 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 30561 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 30573 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 30586 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', 0,
  /* 30598 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', 0,
  /* 30611 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', 0,
  /* 30623 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', 0,
  /* 30636 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '3', '2', 'x', '4', 'm', 'r', 0,
  /* 30652 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '3', '2', 'x', '4', 'm', 'r', 0,
  /* 30668 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '6', '4', 'x', '4', 'm', 'r', 0,
  /* 30684 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '6', '4', 'x', '4', 'm', 'r', 0,
  /* 30700 */ 'S', 'B', 'B', '1', '6', 'm', 'r', 0,
  /* 30708 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'r', 0,
  /* 30721 */ 'A', 'D', 'C', '1', '6', 'm', 'r', 0,
  /* 30729 */ 'B', 'T', 'C', '1', '6', 'm', 'r', 0,
  /* 30737 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'r', 0,
  /* 30750 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'r', 0,
  /* 30763 */ 'M', 'O', 'V', 'B', 'E', '1', '6', 'm', 'r', 0,
  /* 30773 */ 'A', 'R', 'P', 'L', '1', '6', 'm', 'r', 0,
  /* 30782 */ 'C', 'M', 'P', '1', '6', 'm', 'r', 0,
  /* 30790 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'r', 0,
  /* 30803 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'r', 0,
  /* 30815 */ 'B', 'T', 'R', '1', '6', 'm', 'r', 0,
  /* 30823 */ 'B', 'T', 'S', '1', '6', 'm', 'r', 0,
  /* 30831 */ 'B', 'T', '1', '6', 'm', 'r', 0,
  /* 30838 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '1', '6', 'm', 'r', 0,
  /* 30854 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '1', '2', '8', 'm', 'r', 0,
  /* 30869 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '1', '2', '8', 'm', 'r', 0,
  /* 30884 */ 'V', 'M', 'O', 'V', 'L', 'Q', '1', '2', '8', 'm', 'r', 0,
  /* 30896 */ 'S', 'B', 'B', '8', 'm', 'r', 0,
  /* 30903 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '8', 'm', 'r', 0,
  /* 30915 */ 'A', 'D', 'C', '8', 'm', 'r', 0,
  /* 30922 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '8', 'm', 'r', 0,
  /* 30934 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '8', 'm', 'r', 0,
  /* 30946 */ 'C', 'M', 'P', '8', 'm', 'r', 0,
  /* 30953 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '8', 'm', 'r', 0,
  /* 30965 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '8', 'm', 'r', 0,
  /* 30976 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '8', 'm', 'r', 0,
  /* 30991 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'm', 'r', 0,
  /* 31001 */ 'V', 'P', 'S', 'H', 'A', 'B', 'm', 'r', 0,
  /* 31010 */ 'V', 'P', 'S', 'H', 'L', 'B', 'm', 'r', 0,
  /* 31019 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'm', 'r', 0,
  /* 31029 */ 'V', 'P', 'R', 'O', 'T', 'B', 'm', 'r', 0,
  /* 31038 */ 'V', 'P', 'S', 'H', 'A', 'D', 'm', 'r', 0,
  /* 31047 */ 'V', 'P', 'S', 'H', 'L', 'D', 'm', 'r', 0,
  /* 31056 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'm', 'r', 0,
  /* 31069 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'm', 'r', 0,
  /* 31079 */ 'V', 'M', 'O', 'V', 'H', 'P', 'D', 'm', 'r', 0,
  /* 31089 */ 'V', 'M', 'O', 'V', 'L', 'P', 'D', 'm', 'r', 0,
  /* 31099 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'D', 'm', 'r', 0,
  /* 31110 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'm', 'r', 0,
  /* 31120 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'm', 'r', 0,
  /* 31133 */ 'V', 'P', 'E', 'X', 'T', 'R', 'D', 'm', 'r', 0,
  /* 31143 */ 'V', 'M', 'O', 'V', 'S', 'D', 'm', 'r', 0,
  /* 31152 */ 'V', 'P', 'R', 'O', 'T', 'D', 'm', 'r', 0,
  /* 31161 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'm', 'r', 0,
  /* 31174 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'm', 'r', 0,
  /* 31186 */ 'V', 'M', 'O', 'V', 'P', 'D', 'I', '2', 'D', 'I', 'm', 'r', 0,
  /* 31199 */ 'V', 'M', 'O', 'V', 'S', 'S', '2', 'D', 'I', 'm', 'r', 0,
  /* 31211 */ 'V', 'M', 'O', 'V', 'P', 'Q', 'I', '2', 'Q', 'I', 'm', 'r', 0,
  /* 31224 */ 'M', 'O', 'V', 'N', 'T', 'I', 'm', 'r', 0,
  /* 31233 */ 'V', 'P', 'P', 'E', 'R', 'M', 'm', 'r', 0,
  /* 31242 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'm', 'r', 0,
  /* 31251 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'm', 'r', 0,
  /* 31262 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'm', 'r', 0,
  /* 31271 */ 'V', 'P', 'E', 'X', 'T', 'R', 'Q', 'm', 'r', 0,
  /* 31281 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'N', 'T', 'Q', 'm', 'r', 0,
  /* 31294 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'm', 'r', 0,
  /* 31303 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'm', 'r', 0,
  /* 31316 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'm', 'r', 0,
  /* 31329 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'm', 'r', 0,
  /* 31339 */ 'V', 'M', 'O', 'V', 'H', 'P', 'S', 'm', 'r', 0,
  /* 31349 */ 'V', 'M', 'O', 'V', 'L', 'P', 'S', 'm', 'r', 0,
  /* 31359 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'm', 'r', 0,
  /* 31372 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'S', 'm', 'r', 0,
  /* 31383 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'm', 'r', 0,
  /* 31393 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'm', 'r', 0,
  /* 31406 */ 'V', 'M', 'O', 'V', 'S', 'S', 'm', 'r', 0,
  /* 31415 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'm', 'r', 0,
  /* 31425 */ 'V', 'P', 'C', 'M', 'O', 'V', 'm', 'r', 0,
  /* 31434 */ 'V', 'P', 'S', 'H', 'A', 'W', 'm', 'r', 0,
  /* 31443 */ 'V', 'P', 'S', 'H', 'L', 'W', 'm', 'r', 0,
  /* 31452 */ 'V', 'P', 'E', 'X', 'T', 'R', 'W', 'm', 'r', 0,
  /* 31462 */ 'V', 'P', 'R', 'O', 'T', 'W', 'm', 'r', 0,
  /* 31471 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'm', 'r', 0,
  /* 31482 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 31493 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 31505 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 31516 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 31530 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Y', 'm', 'r', 0,
  /* 31544 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'Y', 'm', 'r', 0,
  /* 31557 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'Y', 'm', 'r', 0,
  /* 31569 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'Y', 'm', 'r', 0,
  /* 31583 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 31594 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 31606 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 31617 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 31631 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'm', 'r', 0,
  /* 31642 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Z', 'm', 'r', 0,
  /* 31653 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Z', 'm', 'r', 0,
  /* 31664 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Z', 'm', 'r', 0,
  /* 31675 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Z', 'm', 'r', 0,
  /* 31686 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 'm', 'r', 0,
  /* 31696 */ 'P', 'O', 'P', '3', '2', 'r', 'm', 'r', 0,
  /* 31705 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 'm', 'r', 0,
  /* 31715 */ 'P', 'O', 'P', '6', '4', 'r', 'm', 'r', 0,
  /* 31724 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 'm', 'r', 0,
  /* 31734 */ 'P', 'O', 'P', '1', '6', 'r', 'm', 'r', 0,
  /* 31743 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'z', 'm', 'r', 0,
  /* 31757 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '1', 'r', 'r', 0,
  /* 31768 */ 'P', 'F', 'R', 'S', 'Q', 'I', 'T', '1', 'r', 'r', 0,
  /* 31779 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', '3', '2', 'r', 'r', 0,
  /* 31791 */ 'C', 'M', 'O', 'V', 'A', '3', '2', 'r', 'r', 0,
  /* 31801 */ 'S', 'B', 'B', '3', '2', 'r', 'r', 0,
  /* 31809 */ 'S', 'U', 'B', '3', '2', 'r', 'r', 0,
  /* 31817 */ 'C', 'M', 'O', 'V', 'B', '3', '2', 'r', 'r', 0,
  /* 31827 */ 'A', 'D', 'C', '3', '2', 'r', 'r', 0,
  /* 31835 */ 'B', 'T', 'C', '3', '2', 'r', 'r', 0,
  /* 31843 */ 'V', 'M', 'R', 'E', 'A', 'D', '3', '2', 'r', 'r', 0,
  /* 31854 */ 'X', 'A', 'D', 'D', '3', '2', 'r', 'r', 0,
  /* 31863 */ 'A', 'N', 'D', '3', '2', 'r', 'r', 0,
  /* 31871 */ 'C', 'M', 'O', 'V', 'A', 'E', '3', '2', 'r', 'r', 0,
  /* 31882 */ 'C', 'M', 'O', 'V', 'B', 'E', '3', '2', 'r', 'r', 0,
  /* 31893 */ 'C', 'M', 'O', 'V', 'G', 'E', '3', '2', 'r', 'r', 0,
  /* 31904 */ 'C', 'M', 'O', 'V', 'L', 'E', '3', '2', 'r', 'r', 0,
  /* 31915 */ 'C', 'M', 'O', 'V', 'N', 'E', '3', '2', 'r', 'r', 0,
  /* 31926 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '3', '2', 'r', 'r', 0,
  /* 31938 */ 'C', 'M', 'O', 'V', 'E', '3', '2', 'r', 'r', 0,
  /* 31948 */ 'B', 'S', 'F', '3', '2', 'r', 'r', 0,
  /* 31956 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 'r', 'r', 0,
  /* 31968 */ 'C', 'M', 'O', 'V', 'G', '3', '2', 'r', 'r', 0,
  /* 31978 */ 'B', 'Z', 'H', 'I', '3', '2', 'r', 'r', 0,
  /* 31987 */ 'B', 'L', 'S', 'I', '3', '2', 'r', 'r', 0,
  /* 31996 */ 'B', 'L', 'S', 'M', 'S', 'K', '3', '2', 'r', 'r', 0,
  /* 32007 */ 'L', 'S', 'L', '3', '2', 'r', 'r', 0,
  /* 32015 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 0,
  /* 32024 */ 'C', 'M', 'O', 'V', 'L', '3', '2', 'r', 'r', 0,
  /* 32034 */ 'A', 'N', 'D', 'N', '3', '2', 'r', 'r', 0,
  /* 32043 */ 'I', 'N', '3', '2', 'r', 'r', 0,
  /* 32050 */ 'C', 'M', 'O', 'V', 'N', 'O', '3', '2', 'r', 'r', 0,
  /* 32061 */ 'C', 'M', 'O', 'V', 'O', '3', '2', 'r', 'r', 0,
  /* 32071 */ 'P', 'D', 'E', 'P', '3', '2', 'r', 'r', 0,
  /* 32080 */ 'C', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 32088 */ 'C', 'M', 'O', 'V', 'N', 'P', '3', '2', 'r', 'r', 0,
  /* 32099 */ 'C', 'M', 'O', 'V', 'P', '3', '2', 'r', 'r', 0,
  /* 32109 */ 'L', 'A', 'R', '3', '2', 'r', 'r', 0,
  /* 32117 */ 'X', 'O', 'R', '3', '2', 'r', 'r', 0,
  /* 32125 */ 'B', 'S', 'R', '3', '2', 'r', 'r', 0,
  /* 32133 */ 'B', 'L', 'S', 'R', '3', '2', 'r', 'r', 0,
  /* 32142 */ 'B', 'T', 'R', '3', '2', 'r', 'r', 0,
  /* 32150 */ 'B', 'E', 'X', 'T', 'R', '3', '2', 'r', 'r', 0,
  /* 32160 */ 'C', 'M', 'O', 'V', 'N', 'S', '3', '2', 'r', 'r', 0,
  /* 32171 */ 'B', 'T', 'S', '3', '2', 'r', 'r', 0,
  /* 32179 */ 'C', 'M', 'O', 'V', 'S', '3', '2', 'r', 'r', 0,
  /* 32189 */ 'B', 'T', '3', '2', 'r', 'r', 0,
  /* 32196 */ 'P', 'O', 'P', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 32207 */ 'L', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 32217 */ 'T', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 32227 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'r', 0,
  /* 32236 */ 'O', 'U', 'T', '3', '2', 'r', 'r', 0,
  /* 32244 */ 'P', 'E', 'X', 'T', '3', '2', 'r', 'r', 0,
  /* 32253 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', '3', '2', 'r', 'r', 0,
  /* 32265 */ 'M', 'O', 'V', '3', '2', 'r', 'r', 0,
  /* 32273 */ 'A', 'D', 'C', 'X', '3', '2', 'r', 'r', 0,
  /* 32282 */ 'S', 'H', 'L', 'X', '3', '2', 'r', 'r', 0,
  /* 32291 */ 'M', 'U', 'L', 'X', '3', '2', 'r', 'r', 0,
  /* 32300 */ 'A', 'D', 'O', 'X', '3', '2', 'r', 'r', 0,
  /* 32309 */ 'S', 'A', 'R', 'X', '3', '2', 'r', 'r', 0,
  /* 32318 */ 'S', 'H', 'R', 'X', '3', '2', 'r', 'r', 0,
  /* 32327 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '2', 'r', 'r', 0,
  /* 32338 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', '6', '4', 'r', 'r', 0,
  /* 32350 */ 'C', 'M', 'O', 'V', 'A', '6', '4', 'r', 'r', 0,
  /* 32360 */ 'S', 'B', 'B', '6', '4', 'r', 'r', 0,
  /* 32368 */ 'S', 'U', 'B', '6', '4', 'r', 'r', 0,
  /* 32376 */ 'C', 'M', 'O', 'V', 'B', '6', '4', 'r', 'r', 0,
  /* 32386 */ 'A', 'D', 'C', '6', '4', 'r', 'r', 0,
  /* 32394 */ 'B', 'T', 'C', '6', '4', 'r', 'r', 0,
  /* 32402 */ 'V', 'M', 'R', 'E', 'A', 'D', '6', '4', 'r', 'r', 0,
  /* 32413 */ 'X', 'A', 'D', 'D', '6', '4', 'r', 'r', 0,
  /* 32422 */ 'A', 'N', 'D', '6', '4', 'r', 'r', 0,
  /* 32430 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'r', 0,
  /* 32448 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'r', 0,
  /* 32465 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'r', 0,
  /* 32478 */ 'C', 'M', 'O', 'V', 'A', 'E', '6', '4', 'r', 'r', 0,
  /* 32489 */ 'C', 'M', 'O', 'V', 'B', 'E', '6', '4', 'r', 'r', 0,
  /* 32500 */ 'C', 'M', 'O', 'V', 'G', 'E', '6', '4', 'r', 'r', 0,
  /* 32511 */ 'C', 'M', 'O', 'V', 'L', 'E', '6', '4', 'r', 'r', 0,
  /* 32522 */ 'C', 'M', 'O', 'V', 'N', 'E', '6', '4', 'r', 'r', 0,
  /* 32533 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '6', '4', 'r', 'r', 0,
  /* 32545 */ 'C', 'M', 'O', 'V', 'E', '6', '4', 'r', 'r', 0,
  /* 32555 */ 'B', 'S', 'F', '6', '4', 'r', 'r', 0,
  /* 32563 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 'r', 'r', 0,
  /* 32575 */ 'C', 'M', 'O', 'V', 'G', '6', '4', 'r', 'r', 0,
  /* 32585 */ 'B', 'Z', 'H', 'I', '6', '4', 'r', 'r', 0,
  /* 32594 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32613 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32631 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32645 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32664 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32682 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32696 */ 'B', 'L', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32705 */ 'B', 'L', 'S', 'M', 'S', 'K', '6', '4', 'r', 'r', 0,
  /* 32716 */ 'L', 'S', 'L', '6', '4', 'r', 'r', 0,
  /* 32724 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 0,
  /* 32733 */ 'C', 'M', 'O', 'V', 'L', '6', '4', 'r', 'r', 0,
  /* 32743 */ 'A', 'N', 'D', 'N', '6', '4', 'r', 'r', 0,
  /* 32752 */ 'C', 'M', 'O', 'V', 'N', 'O', '6', '4', 'r', 'r', 0,
  /* 32763 */ 'C', 'M', 'O', 'V', 'O', '6', '4', 'r', 'r', 0,
  /* 32773 */ 'P', 'D', 'E', 'P', '6', '4', 'r', 'r', 0,
  /* 32782 */ 'C', 'M', 'P', '6', '4', 'r', 'r', 0,
  /* 32790 */ 'C', 'M', 'O', 'V', 'N', 'P', '6', '4', 'r', 'r', 0,
  /* 32801 */ 'C', 'M', 'O', 'V', 'P', '6', '4', 'r', 'r', 0,
  /* 32811 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'r', 'r', 0,
  /* 32824 */ 'L', 'A', 'R', '6', '4', 'r', 'r', 0,
  /* 32832 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '2', 'F', 'R', '6', '4', 'r', 'r', 0,
  /* 32848 */ 'X', 'O', 'R', '6', '4', 'r', 'r', 0,
  /* 32856 */ 'B', 'S', 'R', '6', '4', 'r', 'r', 0,
  /* 32864 */ 'B', 'L', 'S', 'R', '6', '4', 'r', 'r', 0,
  /* 32873 */ 'B', 'T', 'R', '6', '4', 'r', 'r', 0,
  /* 32881 */ 'B', 'E', 'X', 'T', 'R', '6', '4', 'r', 'r', 0,
  /* 32891 */ 'C', 'M', 'O', 'V', 'N', 'S', '6', '4', 'r', 'r', 0,
  /* 32902 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'r', 0,
  /* 32920 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'r', 0,
  /* 32937 */ 'B', 'T', 'S', '6', '4', 'r', 'r', 0,
  /* 32945 */ 'C', 'M', 'O', 'V', 'S', '6', '4', 'r', 'r', 0,
  /* 32955 */ 'B', 'T', '6', '4', 'r', 'r', 0,
  /* 32962 */ 'P', 'O', 'P', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 32973 */ 'L', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 32983 */ 'T', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 32993 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'r', 0,
  /* 33002 */ 'P', 'E', 'X', 'T', '6', '4', 'r', 'r', 0,
  /* 33011 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', '6', '4', 'r', 'r', 0,
  /* 33023 */ 'M', 'O', 'V', '6', '4', 'r', 'r', 0,
  /* 33031 */ 'A', 'D', 'C', 'X', '6', '4', 'r', 'r', 0,
  /* 33040 */ 'S', 'H', 'L', 'X', '6', '4', 'r', 'r', 0,
  /* 33049 */ 'M', 'U', 'L', 'X', '6', '4', 'r', 'r', 0,
  /* 33058 */ 'A', 'D', 'O', 'X', '6', '4', 'r', 'r', 0,
  /* 33067 */ 'S', 'A', 'R', 'X', '6', '4', 'r', 'r', 0,
  /* 33076 */ 'S', 'H', 'R', 'X', '6', '4', 'r', 'r', 0,
  /* 33085 */ 'V', 'M', 'O', 'V', 'Q', 'd', '6', '4', 'r', 'r', 0,
  /* 33096 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'f', 'r', 'o', 'm', '6', '4', 'r', 'r', 0,
  /* 33115 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 33132 */ 'V', 'M', 'O', 'V', 'S', 'D', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 33145 */ 'V', 'M', 'O', 'V', 'P', 'Q', 'I', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 33159 */ 'V', 'M', 'O', 'V', 'Q', 's', '6', '4', 'r', 'r', 0,
  /* 33170 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 33185 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 33197 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 33210 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 33225 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 33237 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 33250 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', 0,
  /* 33262 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', 0,
  /* 33275 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', 0,
  /* 33287 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', 0,
  /* 33300 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 33315 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 33327 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 33340 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 33355 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 33367 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 33380 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', 0,
  /* 33392 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', 0,
  /* 33405 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', 0,
  /* 33417 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', 0,
  /* 33430 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '3', '2', 'x', '4', 'r', 'r', 0,
  /* 33446 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '3', '2', 'x', '4', 'r', 'r', 0,
  /* 33461 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '3', '2', 'x', '4', 'r', 'r', 0,
  /* 33477 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '3', '2', 'x', '4', 'r', 'r', 0,
  /* 33492 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '6', '4', 'x', '4', 'r', 'r', 0,
  /* 33508 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '6', '4', 'x', '4', 'r', 'r', 0,
  /* 33523 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '6', '4', 'x', '4', 'r', 'r', 0,
  /* 33539 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '6', '4', 'x', '4', 'r', 'r', 0,
  /* 33554 */ 'C', 'M', 'O', 'V', 'A', '1', '6', 'r', 'r', 0,
  /* 33564 */ 'S', 'B', 'B', '1', '6', 'r', 'r', 0,
  /* 33572 */ 'S', 'U', 'B', '1', '6', 'r', 'r', 0,
  /* 33580 */ 'C', 'M', 'O', 'V', 'B', '1', '6', 'r', 'r', 0,
  /* 33590 */ 'A', 'D', 'C', '1', '6', 'r', 'r', 0,
  /* 33598 */ 'B', 'T', 'C', '1', '6', 'r', 'r', 0,
  /* 33606 */ 'X', 'A', 'D', 'D', '1', '6', 'r', 'r', 0,
  /* 33615 */ 'A', 'N', 'D', '1', '6', 'r', 'r', 0,
  /* 33623 */ 'C', 'M', 'O', 'V', 'A', 'E', '1', '6', 'r', 'r', 0,
  /* 33634 */ 'C', 'M', 'O', 'V', 'B', 'E', '1', '6', 'r', 'r', 0,
  /* 33645 */ 'C', 'M', 'O', 'V', 'G', 'E', '1', '6', 'r', 'r', 0,
  /* 33656 */ 'C', 'M', 'O', 'V', 'L', 'E', '1', '6', 'r', 'r', 0,
  /* 33667 */ 'C', 'M', 'O', 'V', 'N', 'E', '1', '6', 'r', 'r', 0,
  /* 33678 */ 'C', 'M', 'O', 'V', 'E', '1', '6', 'r', 'r', 0,
  /* 33688 */ 'B', 'S', 'F', '1', '6', 'r', 'r', 0,
  /* 33696 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'r', 'r', 0,
  /* 33708 */ 'C', 'M', 'O', 'V', 'G', '1', '6', 'r', 'r', 0,
  /* 33718 */ 'A', 'R', 'P', 'L', '1', '6', 'r', 'r', 0,
  /* 33727 */ 'L', 'S', 'L', '1', '6', 'r', 'r', 0,
  /* 33735 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 0,
  /* 33744 */ 'C', 'M', 'O', 'V', 'L', '1', '6', 'r', 'r', 0,
  /* 33754 */ 'I', 'N', '1', '6', 'r', 'r', 0,
  /* 33761 */ 'C', 'M', 'O', 'V', 'N', 'O', '1', '6', 'r', 'r', 0,
  /* 33772 */ 'C', 'M', 'O', 'V', 'O', '1', '6', 'r', 'r', 0,
  /* 33782 */ 'C', 'M', 'P', '1', '6', 'r', 'r', 0,
  /* 33790 */ 'C', 'M', 'O', 'V', 'N', 'P', '1', '6', 'r', 'r', 0,
  /* 33801 */ 'C', 'M', 'O', 'V', 'P', '1', '6', 'r', 'r', 0,
  /* 33811 */ 'L', 'A', 'R', '1', '6', 'r', 'r', 0,
  /* 33819 */ 'X', 'O', 'R', '1', '6', 'r', 'r', 0,
  /* 33827 */ 'B', 'S', 'R', '1', '6', 'r', 'r', 0,
  /* 33835 */ 'B', 'T', 'R', '1', '6', 'r', 'r', 0,
  /* 33843 */ 'C', 'M', 'O', 'V', 'N', 'S', '1', '6', 'r', 'r', 0,
  /* 33854 */ 'B', 'T', 'S', '1', '6', 'r', 'r', 0,
  /* 33862 */ 'C', 'M', 'O', 'V', 'S', '1', '6', 'r', 'r', 0,
  /* 33872 */ 'B', 'T', '1', '6', 'r', 'r', 0,
  /* 33879 */ 'P', 'O', 'P', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 33890 */ 'L', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 33900 */ 'T', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 33910 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'r', 0,
  /* 33919 */ 'O', 'U', 'T', '1', '6', 'r', 'r', 0,
  /* 33927 */ 'M', 'O', 'V', '1', '6', 'r', 'r', 0,
  /* 33935 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '2', '5', '6', 'r', 'r', 0,
  /* 33949 */ 'V', 'P', 'E', 'R', 'M', '2', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 33962 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 33977 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 33991 */ 'V', 'P', 'E', 'R', 'M', '2', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 34004 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 34019 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 34033 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'r', 0,
  /* 34049 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'r', 0,
  /* 34065 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '1', '2', '8', 'r', 'r', 0,
  /* 34079 */ 'V', 'A', 'E', 'S', 'K', 'E', 'Y', 'G', 'E', 'N', 'A', 'S', 'S', 'I', 'S', 'T', '1', '2', '8', 'r', 'r', 0,
  /* 34101 */ 'S', 'B', 'B', '8', 'r', 'r', 0,
  /* 34108 */ 'S', 'U', 'B', '8', 'r', 'r', 0,
  /* 34115 */ 'A', 'D', 'C', '8', 'r', 'r', 0,
  /* 34122 */ 'X', 'A', 'D', 'D', '8', 'r', 'r', 0,
  /* 34130 */ 'A', 'N', 'D', '8', 'r', 'r', 0,
  /* 34137 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'r', 'r', 0,
  /* 34148 */ 'I', 'N', '8', 'r', 'r', 0,
  /* 34154 */ 'C', 'M', 'P', '8', 'r', 'r', 0,
  /* 34161 */ 'X', 'O', 'R', '8', 'r', 'r', 0,
  /* 34168 */ 'T', 'E', 'S', 'T', '8', 'r', 'r', 0,
  /* 34176 */ 'O', 'U', 'T', '8', 'r', 'r', 0,
  /* 34183 */ 'M', 'O', 'V', '8', 'r', 'r', 0,
  /* 34190 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'r', 0,
  /* 34200 */ 'V', 'P', 'S', 'H', 'A', 'B', 'r', 'r', 0,
  /* 34209 */ 'V', 'P', 'S', 'U', 'B', 'B', 'r', 'r', 0,
  /* 34218 */ 'V', 'P', 'A', 'D', 'D', 'B', 'r', 'r', 0,
  /* 34227 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'r', 0,
  /* 34237 */ 'V', 'P', 'A', 'V', 'G', 'B', 'r', 'r', 0,
  /* 34246 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', 'r', 0,
  /* 34258 */ 'M', 'M', 'X', '_', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', 'r', 0,
  /* 34273 */ 'V', 'P', 'S', 'H', 'L', 'B', 'r', 'r', 0,
  /* 34282 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'r', 0,
  /* 34292 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'r', 'r', 0,
  /* 34303 */ 'V', 'P', 'I', 'N', 'S', 'R', 'B', 'r', 'r', 0,
  /* 34313 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'r', 'r', 0,
  /* 34323 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'r', 'r', 0,
  /* 34333 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'r', 'r', 0,
  /* 34343 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'r', 'r', 0,
  /* 34353 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'r', 'r', 0,
  /* 34364 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'r', 'r', 0,
  /* 34375 */ 'P', 'A', 'V', 'G', 'U', 'S', 'B', 'r', 'r', 0,
  /* 34385 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'r', 'r', 0,
  /* 34395 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'r', 'r', 0,
  /* 34406 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'r', 0,
  /* 34415 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'r', 'r', 0,
  /* 34430 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'r', 'r', 0,
  /* 34440 */ 'P', 'F', 'S', 'U', 'B', 'r', 'r', 0,
  /* 34448 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'r', 'r', 0,
  /* 34458 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'r', 0,
  /* 34470 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'r', 'r', 0,
  /* 34482 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'r', 'r', 0,
  /* 34494 */ 'P', 'F', 'A', 'C', 'C', 'r', 'r', 0,
  /* 34502 */ 'P', 'F', 'N', 'A', 'C', 'C', 'r', 'r', 0,
  /* 34511 */ 'P', 'F', 'P', 'N', 'A', 'C', 'C', 'r', 'r', 0,
  /* 34521 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'r', 'r', 0,
  /* 34531 */ 'V', 'A', 'E', 'S', 'I', 'M', 'C', 'r', 'r', 0,
  /* 34541 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'r', 'r', 0,
  /* 34551 */ 'V', 'P', 'E', 'R', 'M', 'I', '2', 'D', 'r', 'r', 0,
  /* 34562 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'M', 'W', '2', 'D', 'r', 'r', 0,
  /* 34580 */ 'V', 'P', 'S', 'H', 'A', 'D', 'r', 'r', 0,
  /* 34589 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'r', 0,
  /* 34598 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'r', 0,
  /* 34610 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'D', 'r', 'r', 0,
  /* 34621 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'D', 'r', 'r', 0,
  /* 34633 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'r', 0,
  /* 34643 */ 'V', 'P', 'S', 'U', 'B', 'D', 'r', 'r', 0,
  /* 34652 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'r', 'r', 0,
  /* 34664 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'r', 'r', 0,
  /* 34676 */ 'P', 'F', 'A', 'D', 'D', 'r', 'r', 0,
  /* 34684 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'r', 'r', 0,
  /* 34694 */ 'V', 'P', 'A', 'D', 'D', 'D', 'r', 'r', 0,
  /* 34703 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'D', 'r', 'r', 0,
  /* 34714 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'D', 'r', 'r', 0,
  /* 34726 */ 'P', 'I', '2', 'F', 'D', 'r', 'r', 0,
  /* 34734 */ 'P', 'F', '2', 'I', 'D', 'r', 'r', 0,
  /* 34742 */ 'V', 'P', 'S', 'H', 'L', 'D', 'r', 'r', 0,
  /* 34751 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'r', 0,
  /* 34760 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'r', 0,
  /* 34772 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'r', 'r', 0,
  /* 34782 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'r', 0,
  /* 34791 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'r', 0,
  /* 34803 */ 'V', 'P', 'A', 'N', 'D', 'r', 'r', 0,
  /* 34811 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'r', 0,
  /* 34821 */ 'V', 'P', 'E', 'R', 'M', 'I', '2', 'P', 'D', 'r', 'r', 0,
  /* 34833 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'r', 0,
  /* 34846 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'r', 'r', 0,
  /* 34858 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'r', 'r', 0,
  /* 34870 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', 0,
  /* 34882 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', 0,
  /* 34893 */ 'P', 'S', 'W', 'A', 'P', 'D', 'r', 'r', 0,
  /* 34902 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 34914 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 34924 */ 'V', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 34933 */ 'V', 'M', 'I', 'N', 'C', 'P', 'D', 'r', 'r', 0,
  /* 34943 */ 'V', 'M', 'A', 'X', 'C', 'P', 'D', 'r', 'r', 0,
  /* 34953 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'r', 'r', 0,
  /* 34963 */ 'V', 'A', 'D', 'D', 'P', 'D', 'r', 'r', 0,
  /* 34972 */ 'V', 'A', 'N', 'D', 'P', 'D', 'r', 'r', 0,
  /* 34981 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'D', 'r', 'r', 0,
  /* 34992 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'r', 'r', 0,
  /* 35004 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'r', 0,
  /* 35016 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'r', 'r', 0,
  /* 35028 */ 'V', 'M', 'U', 'L', 'P', 'D', 'r', 'r', 0,
  /* 35037 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'r', 0,
  /* 35047 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'r', 0,
  /* 35059 */ 'V', 'M', 'I', 'N', 'P', 'D', 'r', 'r', 0,
  /* 35068 */ 'V', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 35076 */ 'V', 'X', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 35085 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 35096 */ 'V', 'F', 's', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 35106 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'r', 'r', 0,
  /* 35116 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'r', 0,
  /* 35126 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'r', 0,
  /* 35138 */ 'V', 'D', 'I', 'V', 'P', 'D', 'r', 'r', 0,
  /* 35147 */ 'V', 'M', 'A', 'X', 'P', 'D', 'r', 'r', 0,
  /* 35156 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'r', 0,
  /* 35166 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'r', 'r', 0,
  /* 35177 */ 'V', 'P', 'I', 'N', 'S', 'R', 'D', 'r', 'r', 0,
  /* 35187 */ 'V', 'P', 'E', 'X', 'T', 'R', 'D', 'r', 'r', 0,
  /* 35197 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'r', 0,
  /* 35213 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'r', 0,
  /* 35228 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'r', 0,
  /* 35244 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'r', 0,
  /* 35259 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'r', 0,
  /* 35268 */ 'V', 'M', 'I', 'N', 'C', 'S', 'D', 'r', 'r', 0,
  /* 35278 */ 'V', 'M', 'A', 'X', 'C', 'S', 'D', 'r', 'r', 0,
  /* 35288 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'r', 0,
  /* 35297 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 35312 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 35326 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 35340 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 35353 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'r', 0,
  /* 35362 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'r', 'r', 0,
  /* 35372 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'r', 0,
  /* 35381 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'r', 0,
  /* 35394 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'D', 'r', 'r', 0,
  /* 35406 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'r', 0,
  /* 35415 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'r', 0,
  /* 35424 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'r', 'r', 0,
  /* 35434 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'r', 0,
  /* 35443 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'D', 'r', 'r', 0,
  /* 35453 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'S', 'D', 'r', 'r', 0,
  /* 35466 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'r', 'r', 0,
  /* 35477 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'r', 0,
  /* 35486 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'r', 'r', 0,
  /* 35501 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'r', 'r', 0,
  /* 35511 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'r', 'r', 0,
  /* 35521 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'r', 'r', 0,
  /* 35531 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'r', 'r', 0,
  /* 35541 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'r', 'r', 0,
  /* 35551 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'D', 'r', 'r', 0,
  /* 35562 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'D', 'r', 'r', 0,
  /* 35573 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'r', 'r', 0,
  /* 35584 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'r', 'r', 0,
  /* 35597 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'r', 'r', 0,
  /* 35610 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'D', 'r', 'r', 0,
  /* 35621 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'W', 'D', 'r', 'r', 0,
  /* 35633 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'D', 'r', 'r', 0,
  /* 35645 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'S', 'W', 'D', 'r', 'r', 0,
  /* 35658 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'D', 'r', 'r', 0,
  /* 35670 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'r', 'r', 0,
  /* 35682 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'r', 'r', 0,
  /* 35694 */ 'P', 'F', 'C', 'M', 'P', 'G', 'E', 'r', 'r', 0,
  /* 35704 */ 'L', 'D', '_', 'F', 'r', 'r', 0,
  /* 35711 */ 'S', 'T', '_', 'F', 'r', 'r', 0,
  /* 35718 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'r', 'r', 0,
  /* 35730 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'H', 'r', 'r', 0,
  /* 35742 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'H', 'r', 'r', 0,
  /* 35755 */ 'V', 'M', 'O', 'V', 'P', 'D', 'I', '2', 'D', 'I', 'r', 'r', 0,
  /* 35768 */ 'V', 'M', 'O', 'V', 'S', 'S', '2', 'D', 'I', 'r', 'r', 0,
  /* 35780 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 35793 */ 'V', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 35807 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 35824 */ 'V', 'M', 'O', 'V', 'Z', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 35838 */ 'V', 'M', 'O', 'V', 'Z', 'P', 'Q', 'I', 'L', 'o', '2', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 35855 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 35869 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'r', 'r', 0,
  /* 35882 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'r', 'r', 0,
  /* 35895 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 35912 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 35928 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 35940 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 35957 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 35973 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 35985 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'L', 'r', 'r', 0,
  /* 35997 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'L', 'r', 'r', 0,
  /* 36010 */ 'P', 'F', 'M', 'U', 'L', 'r', 'r', 0,
  /* 36018 */ 'V', 'P', 'P', 'E', 'R', 'M', 'r', 'r', 0,
  /* 36027 */ 'V', 'P', 'A', 'N', 'D', 'N', 'r', 'r', 0,
  /* 36036 */ 'P', 'F', 'M', 'I', 'N', 'r', 'r', 0,
  /* 36044 */ 'P', 'F', 'R', 'C', 'P', 'r', 'r', 0,
  /* 36052 */ 'S', 'T', '_', 'F', 'P', 'r', 'r', 0,
  /* 36060 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'r', 'r', 0,
  /* 36071 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'r', 'r', 0,
  /* 36083 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'r', 'r', 0,
  /* 36095 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'F', 'R', '6', '4', '2', 'Q', 'r', 'r', 0,
  /* 36111 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'M', 'B', '2', 'Q', 'r', 'r', 0,
  /* 36129 */ 'V', 'P', 'E', 'R', 'M', 'I', '2', 'Q', 'r', 'r', 0,
  /* 36140 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', 'Q', '2', 'Q', 'r', 'r', 0,
  /* 36154 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'r', 'r', 0,
  /* 36163 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'Q', 'r', 'r', 0,
  /* 36174 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'Q', 'r', 'r', 0,
  /* 36186 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'r', 'r', 0,
  /* 36195 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'r', 'r', 0,
  /* 36207 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'r', 'r', 0,
  /* 36219 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'r', 0,
  /* 36232 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'r', 0,
  /* 36244 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '2', 'D', 'Q', 'r', 'r', 0,
  /* 36258 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'r', 0,
  /* 36271 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'r', 0,
  /* 36283 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Q', 'r', 'r', 0,
  /* 36294 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'r', 'r', 0,
  /* 36303 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Q', 'r', 'r', 0,
  /* 36314 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'r', 'r', 0,
  /* 36327 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'r', 'r', 0,
  /* 36340 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'r', 'r', 0,
  /* 36350 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 36364 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 36378 */ 'V', 'P', 'C', 'L', 'M', 'U', 'L', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 36391 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'D', 'Q', 'r', 'r', 0,
  /* 36403 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'r', 'r', 0,
  /* 36414 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'r', 'r', 0,
  /* 36426 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'r', 'r', 0,
  /* 36438 */ 'P', 'F', 'C', 'M', 'P', 'E', 'Q', 'r', 'r', 0,
  /* 36448 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'r', 'r', 0,
  /* 36457 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'r', 0,
  /* 36466 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'r', 0,
  /* 36478 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'r', 0,
  /* 36487 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'r', 0,
  /* 36499 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'r', 'r', 0,
  /* 36510 */ 'V', 'P', 'I', 'N', 'S', 'R', 'Q', 'r', 'r', 0,
  /* 36520 */ 'V', 'P', 'E', 'X', 'T', 'R', 'Q', 'r', 'r', 0,
  /* 36530 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'r', 'r', 0,
  /* 36541 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'r', 0,
  /* 36550 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'r', 'r', 0,
  /* 36565 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'r', 'r', 0,
  /* 36575 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'r', 'r', 0,
  /* 36585 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Q', 'r', 'r', 0,
  /* 36596 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'Q', 'r', 'r', 0,
  /* 36608 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'r', 'r', 0,
  /* 36620 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'r', 'r', 0,
  /* 36632 */ 'P', 'F', 'S', 'U', 'B', 'R', 'r', 'r', 0,
  /* 36641 */ 'V', 'P', 'O', 'R', 'r', 'r', 0,
  /* 36648 */ 'V', 'P', 'X', 'O', 'R', 'r', 'r', 0,
  /* 36656 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'r', 'r', 0,
  /* 36668 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'r', 'r', 0,
  /* 36680 */ 'V', 'P', 'E', 'R', 'M', 'I', '2', 'P', 'S', 'r', 'r', 0,
  /* 36692 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'r', 0,
  /* 36705 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'r', 'r', 0,
  /* 36717 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', 0,
  /* 36729 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', 0,
  /* 36740 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 36752 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 36762 */ 'V', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 36771 */ 'V', 'M', 'I', 'N', 'C', 'P', 'S', 'r', 'r', 0,
  /* 36781 */ 'V', 'M', 'A', 'X', 'C', 'P', 'S', 'r', 'r', 0,
  /* 36791 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'r', 'r', 0,
  /* 36801 */ 'V', 'A', 'D', 'D', 'P', 'S', 'r', 'r', 0,
  /* 36810 */ 'V', 'A', 'N', 'D', 'P', 'S', 'r', 'r', 0,
  /* 36819 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'S', 'r', 'r', 0,
  /* 36830 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'r', 'r', 0,
  /* 36842 */ 'V', 'M', 'O', 'V', 'L', 'H', 'P', 'S', 'r', 'r', 0,
  /* 36853 */ 'V', 'M', 'O', 'V', 'H', 'L', 'P', 'S', 'r', 'r', 0,
  /* 36864 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'r', 0,
  /* 36876 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'r', 'r', 0,
  /* 36888 */ 'V', 'M', 'U', 'L', 'P', 'S', 'r', 'r', 0,
  /* 36897 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'r', 0,
  /* 36907 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'r', 0,
  /* 36919 */ 'V', 'M', 'I', 'N', 'P', 'S', 'r', 'r', 0,
  /* 36928 */ 'V', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 36936 */ 'V', 'X', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 36945 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 36956 */ 'V', 'F', 's', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 36966 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'r', 'r', 0,
  /* 36979 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'P', 'S', 'r', 'r', 0,
  /* 36991 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'r', 'r', 0,
  /* 37001 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'r', 0,
  /* 37011 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'r', 0,
  /* 37023 */ 'V', 'D', 'I', 'V', 'P', 'S', 'r', 'r', 0,
  /* 37032 */ 'V', 'M', 'A', 'X', 'P', 'S', 'r', 'r', 0,
  /* 37041 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'r', 0,
  /* 37051 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'r', 0,
  /* 37067 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'r', 0,
  /* 37082 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 37094 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 37110 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 37125 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'r', 0,
  /* 37134 */ 'V', 'M', 'I', 'N', 'C', 'S', 'S', 'r', 'r', 0,
  /* 37144 */ 'V', 'M', 'A', 'X', 'C', 'S', 'S', 'r', 'r', 0,
  /* 37154 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'r', 0,
  /* 37163 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 37178 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 37192 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 37206 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 37219 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'r', 0,
  /* 37228 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'r', 0,
  /* 37237 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'r', 0,
  /* 37250 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'S', 'r', 'r', 0,
  /* 37262 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'r', 'r', 0,
  /* 37277 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'r', 0,
  /* 37286 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'r', 0,
  /* 37295 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'r', 0,
  /* 37304 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'S', 'r', 'r', 0,
  /* 37314 */ 'P', 'F', 'C', 'M', 'P', 'G', 'T', 'r', 'r', 0,
  /* 37324 */ 'M', 'W', 'A', 'I', 'T', 'r', 'r', 0,
  /* 37332 */ 'P', 'F', 'R', 'S', 'Q', 'R', 'T', 'r', 'r', 0,
  /* 37342 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'L', 'A', 'S', 'T', 'r', 'r', 0,
  /* 37356 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'L', 'A', 'S', 'T', 'r', 'r', 0,
  /* 37370 */ 'V', 'P', 'T', 'E', 'S', 'T', 'r', 'r', 0,
  /* 37379 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'r', 0,
  /* 37389 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'r', 0,
  /* 37398 */ 'V', 'P', 'S', 'H', 'A', 'W', 'r', 'r', 0,
  /* 37407 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'r', 0,
  /* 37416 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'r', 0,
  /* 37428 */ 'V', 'P', 'H', 'S', 'U', 'B', 'B', 'W', 'r', 'r', 0,
  /* 37439 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'r', 0,
  /* 37449 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'W', 'r', 'r', 0,
  /* 37460 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'r', 'r', 0,
  /* 37473 */ 'K', 'U', 'N', 'P', 'C', 'K', 'B', 'W', 'r', 'r', 0,
  /* 37484 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'r', 'r', 0,
  /* 37497 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'W', 'r', 'r', 0,
  /* 37509 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'r', 0,
  /* 37519 */ 'V', 'P', 'S', 'U', 'B', 'W', 'r', 'r', 0,
  /* 37528 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'r', 'r', 0,
  /* 37540 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'r', 'r', 0,
  /* 37552 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'r', 0,
  /* 37562 */ 'K', 'A', 'D', 'D', 'W', 'r', 'r', 0,
  /* 37570 */ 'V', 'P', 'A', 'D', 'D', 'W', 'r', 'r', 0,
  /* 37579 */ 'K', 'A', 'N', 'D', 'W', 'r', 'r', 0,
  /* 37587 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'r', 'r', 0,
  /* 37599 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'r', 'r', 0,
  /* 37611 */ 'P', 'I', '2', 'F', 'W', 'r', 'r', 0,
  /* 37619 */ 'V', 'P', 'A', 'V', 'G', 'W', 'r', 'r', 0,
  /* 37628 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'r', 'r', 0,
  /* 37638 */ 'P', 'F', '2', 'I', 'W', 'r', 'r', 0,
  /* 37646 */ 'V', 'P', 'S', 'H', 'L', 'W', 'r', 'r', 0,
  /* 37655 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'r', 0,
  /* 37664 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'r', 0,
  /* 37676 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'r', 'r', 0,
  /* 37686 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'r', 0,
  /* 37695 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'r', 0,
  /* 37707 */ 'K', 'A', 'N', 'D', 'N', 'W', 'r', 'r', 0,
  /* 37716 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'r', 0,
  /* 37726 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'r', 'r', 0,
  /* 37737 */ 'P', 'M', 'U', 'L', 'H', 'R', 'W', 'r', 'r', 0,
  /* 37747 */ 'K', 'O', 'R', 'W', 'r', 'r', 0,
  /* 37754 */ 'K', 'X', 'N', 'O', 'R', 'W', 'r', 'r', 0,
  /* 37763 */ 'K', 'X', 'O', 'R', 'W', 'r', 'r', 0,
  /* 37771 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'r', 'r', 0,
  /* 37781 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'r', 'r', 0,
  /* 37791 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'r', 'r', 0,
  /* 37801 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'r', 'r', 0,
  /* 37812 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'r', 'r', 0,
  /* 37823 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'r', 'r', 0,
  /* 37833 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'r', 'r', 0,
  /* 37844 */ 'K', 'N', 'O', 'T', 'W', 'r', 'r', 0,
  /* 37852 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'r', 0,
  /* 37861 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'r', 'r', 0,
  /* 37876 */ 'K', 'T', 'E', 'S', 'T', 'W', 'r', 'r', 0,
  /* 37885 */ 'K', 'O', 'R', 'T', 'E', 'S', 'T', 'W', 'r', 'r', 0,
  /* 37896 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'r', 'r', 0,
  /* 37907 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'r', 'r', 0,
  /* 37917 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'r', 'r', 0,
  /* 37927 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'W', 'r', 'r', 0,
  /* 37938 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'W', 'r', 'r', 0,
  /* 37950 */ 'P', 'F', 'M', 'A', 'X', 'r', 'r', 0,
  /* 37958 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'r', 0,
  /* 37969 */ 'V', 'P', 'S', 'U', 'B', 'B', 'Y', 'r', 'r', 0,
  /* 37979 */ 'V', 'P', 'A', 'D', 'D', 'B', 'Y', 'r', 'r', 0,
  /* 37989 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'Y', 'r', 'r', 0,
  /* 38000 */ 'V', 'P', 'A', 'V', 'G', 'B', 'Y', 'r', 'r', 0,
  /* 38010 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'Y', 'r', 'r', 0,
  /* 38023 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'Y', 'r', 'r', 0,
  /* 38034 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'Y', 'r', 'r', 0,
  /* 38046 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 38057 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 38068 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 38079 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 38091 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 38103 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 38114 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'Y', 'r', 'r', 0,
  /* 38126 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'Y', 'r', 'r', 0,
  /* 38142 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'Y', 'r', 'r', 0,
  /* 38153 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'Y', 'r', 'r', 0,
  /* 38164 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'Y', 'r', 'r', 0,
  /* 38177 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'Y', 'r', 'r', 0,
  /* 38190 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'Y', 'r', 'r', 0,
  /* 38203 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'r', 0,
  /* 38213 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 38224 */ 'V', 'P', 'S', 'U', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 38234 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 38247 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 38260 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Y', 'r', 'r', 0,
  /* 38271 */ 'V', 'P', 'A', 'D', 'D', 'D', 'Y', 'r', 'r', 0,
  /* 38281 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 38291 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 38302 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 38312 */ 'V', 'P', 'E', 'R', 'M', 'D', 'Y', 'r', 'r', 0,
  /* 38322 */ 'V', 'P', 'A', 'N', 'D', 'Y', 'r', 'r', 0,
  /* 38331 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'Y', 'r', 'r', 0,
  /* 38342 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38355 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38368 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38379 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38392 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38403 */ 'V', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38413 */ 'V', 'M', 'I', 'N', 'C', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38424 */ 'V', 'M', 'A', 'X', 'C', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38435 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38446 */ 'V', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38456 */ 'V', 'A', 'N', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38466 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38479 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38492 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38505 */ 'V', 'M', 'U', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38515 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38526 */ 'V', 'M', 'I', 'N', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38536 */ 'V', 'O', 'R', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38545 */ 'V', 'X', 'O', 'R', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38555 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38566 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38577 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38590 */ 'V', 'D', 'I', 'V', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38600 */ 'V', 'M', 'A', 'X', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 38610 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'Y', 'r', 'r', 0,
  /* 38622 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'Y', 'r', 'r', 0,
  /* 38633 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'D', 'Y', 'r', 'r', 0,
  /* 38649 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'Y', 'r', 'r', 0,
  /* 38660 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'Y', 'r', 'r', 0,
  /* 38672 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Y', 'r', 'r', 0,
  /* 38688 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'Y', 'r', 'r', 0,
  /* 38699 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'Y', 'r', 'r', 0,
  /* 38710 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 38721 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 38732 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 38743 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 38755 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 38769 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 38783 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 38796 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 38809 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'Y', 'r', 'r', 0,
  /* 38822 */ 'V', 'P', 'A', 'N', 'D', 'N', 'Y', 'r', 'r', 0,
  /* 38832 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 38844 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 38857 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 38870 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 38880 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 38893 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 38906 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38920 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38933 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38947 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38960 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38970 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38984 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38998 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 39009 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 39024 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 39039 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 39051 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 39064 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 39077 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'r', 0,
  /* 39087 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'r', 0,
  /* 39097 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'Y', 'r', 'r', 0,
  /* 39109 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'Y', 'r', 'r', 0,
  /* 39121 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Y', 'r', 'r', 0,
  /* 39137 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'Y', 'r', 'r', 0,
  /* 39148 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'Y', 'r', 'r', 0,
  /* 39159 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'Y', 'r', 'r', 0,
  /* 39172 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'Y', 'r', 'r', 0,
  /* 39185 */ 'V', 'P', 'O', 'R', 'Y', 'r', 'r', 0,
  /* 39193 */ 'V', 'P', 'X', 'O', 'R', 'Y', 'r', 'r', 0,
  /* 39202 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39215 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39228 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39241 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39252 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39265 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39276 */ 'V', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39286 */ 'V', 'M', 'I', 'N', 'C', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39297 */ 'V', 'M', 'A', 'X', 'C', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39308 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39319 */ 'V', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39329 */ 'V', 'A', 'N', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39339 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39352 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39365 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39378 */ 'V', 'M', 'U', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39388 */ 'V', 'P', 'E', 'R', 'M', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39399 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39410 */ 'V', 'M', 'I', 'N', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39420 */ 'V', 'O', 'R', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39429 */ 'V', 'X', 'O', 'R', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39439 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39450 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39461 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39474 */ 'V', 'D', 'I', 'V', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39484 */ 'V', 'M', 'A', 'X', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 39494 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'Y', 'r', 'r', 0,
  /* 39510 */ 'V', 'P', 'T', 'E', 'S', 'T', 'Y', 'r', 'r', 0,
  /* 39520 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'r', 0,
  /* 39531 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'r', 0,
  /* 39541 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 39552 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 39566 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 39580 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 39591 */ 'V', 'P', 'S', 'U', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 39601 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 39614 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 39627 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 39638 */ 'V', 'P', 'A', 'D', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 39648 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 39661 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 39674 */ 'V', 'P', 'A', 'V', 'G', 'W', 'Y', 'r', 'r', 0,
  /* 39684 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'Y', 'r', 'r', 0,
  /* 39695 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 39705 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 39716 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 39726 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'Y', 'r', 'r', 0,
  /* 39737 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'Y', 'r', 'r', 0,
  /* 39749 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 39760 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 39771 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 39782 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 39794 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 39806 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 39817 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'Y', 'r', 'r', 0,
  /* 39829 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'Y', 'r', 'r', 0,
  /* 39845 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 39857 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 39868 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 39879 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'M', 'D', 'Z', 'r', 'r', 0,
  /* 39892 */ 'V', 'P', 'E', 'R', 'M', 'D', 'Z', 'r', 'r', 0,
  /* 39902 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Z', 'r', 'r', 0,
  /* 39913 */ 'V', 'B', 'L', 'E', 'N', 'D', 'M', 'P', 'D', 'Z', 'r', 'r', 0,
  /* 39926 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Z', 'r', 'r', 0,
  /* 39937 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Z', 'r', 'r', 0,
  /* 39948 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'Z', 'r', 'r', 0,
  /* 39960 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'D', 'Z', 'r', 'r', 0,
  /* 39976 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'Z', 'r', 'r', 0,
  /* 39988 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Z', 'r', 'r', 0,
  /* 40004 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'M', 'Q', 'Z', 'r', 'r', 0,
  /* 40017 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Z', 'r', 'r', 0,
  /* 40027 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'Z', 'r', 'r', 0,
  /* 40039 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'Z', 'r', 'r', 0,
  /* 40051 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Z', 'r', 'r', 0,
  /* 40067 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Z', 'r', 'r', 0,
  /* 40078 */ 'V', 'B', 'L', 'E', 'N', 'D', 'M', 'P', 'S', 'Z', 'r', 'r', 0,
  /* 40091 */ 'V', 'P', 'E', 'R', 'M', 'P', 'S', 'Z', 'r', 'r', 0,
  /* 40102 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Z', 'r', 'r', 0,
  /* 40113 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'Z', 'r', 'r', 0,
  /* 40129 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'r', 'Z', 'r', 'r', 0,
  /* 40146 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'r', 'Z', 'r', 'r', 0,
  /* 40163 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'g', 'r', 'r', 0,
  /* 40177 */ 'M', 'M', 'X', '_', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '6', '4', 'i', 'r', 'r', 0,
  /* 40194 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'B', 'i', 'r', 'r', 0,
  /* 40207 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'B', 'i', 'r', 'r', 0,
  /* 40220 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'B', 'i', 'r', 'r', 0,
  /* 40233 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'i', 'r', 'r', 0,
  /* 40248 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'B', 'i', 'r', 'r', 0,
  /* 40262 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'B', 'i', 'r', 'r', 0,
  /* 40276 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'i', 'r', 'r', 0,
  /* 40291 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'i', 'r', 'r', 0,
  /* 40306 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'i', 'r', 'r', 0,
  /* 40321 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'U', 'B', 'i', 'r', 'r', 0,
  /* 40335 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'U', 'B', 'i', 'r', 'r', 0,
  /* 40349 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'i', 'r', 'r', 0,
  /* 40365 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'i', 'r', 'r', 0,
  /* 40381 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'D', 'i', 'r', 'r', 0,
  /* 40394 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'D', 'i', 'r', 'r', 0,
  /* 40407 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'i', 'r', 'r', 0,
  /* 40419 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'D', 'i', 'r', 'r', 0,
  /* 40435 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'i', 'r', 'r', 0,
  /* 40450 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'i', 'r', 'r', 0,
  /* 40465 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'i', 'r', 'r', 0,
  /* 40480 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'i', 'r', 'r', 0,
  /* 40497 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'i', 'r', 'r', 0,
  /* 40514 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 40531 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 40547 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 40564 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 40580 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'N', 'i', 'r', 'r', 0,
  /* 40593 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'Q', 'i', 'r', 'r', 0,
  /* 40606 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 40619 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 40636 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 40653 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 40668 */ 'M', 'M', 'X', '_', 'P', 'O', 'R', 'i', 'r', 'r', 0,
  /* 40679 */ 'M', 'M', 'X', '_', 'P', 'X', 'O', 'R', 'i', 'r', 'r', 0,
  /* 40691 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'S', 'i', 'r', 'r', 0,
  /* 40707 */ 'M', 'M', 'X', '_', 'P', 'S', 'A', 'D', 'B', 'W', 'i', 'r', 'r', 0,
  /* 40721 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'i', 'r', 'r', 0,
  /* 40738 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'i', 'r', 'r', 0,
  /* 40755 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'W', 'i', 'r', 'r', 0,
  /* 40768 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'W', 'i', 'r', 'r', 0,
  /* 40781 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'i', 'r', 'r', 0,
  /* 40797 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'W', 'i', 'r', 'r', 0,
  /* 40810 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'W', 'i', 'r', 'r', 0,
  /* 40824 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'L', 'W', 'i', 'r', 'r', 0,
  /* 40838 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'i', 'r', 'r', 0,
  /* 40853 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'W', 'i', 'r', 'r', 0,
  /* 40867 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'W', 'i', 'r', 'r', 0,
  /* 40881 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'S', 'W', 'i', 'r', 'r', 0,
  /* 40895 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'i', 'r', 'r', 0,
  /* 40910 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'i', 'r', 'r', 0,
  /* 40925 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'S', 'W', 'i', 'r', 'r', 0,
  /* 40939 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'i', 'r', 'r', 0,
  /* 40954 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'i', 'r', 'r', 0,
  /* 40969 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Z', 'k', 'r', 'r', 0,
  /* 40986 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Z', 'k', 'r', 'r', 0,
  /* 41003 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'r', 'Z', 'k', 'r', 'r', 0,
  /* 41021 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'r', 'Z', 'k', 'r', 'r', 0,
  /* 41039 */ 'M', 'O', 'N', 'I', 'T', 'O', 'R', 'r', 'r', 'r', 0,
  /* 41050 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'z', 'r', 'r', 0,
  /* 41064 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'P', 'S', 'z', 'r', 'r', 0,
  /* 41077 */ 'M', 'O', 'V', '3', '2', 's', 'r', 0,
  /* 41085 */ 'M', 'O', 'V', '6', '4', 's', 'r', 0,
  /* 41093 */ 'M', 'O', 'V', '1', '6', 's', 'r', 0,
  /* 41101 */ 'V', 'M', 'O', 'V', 'Q', 'x', 'r', 'x', 'r', 0,
  /* 41111 */ 'M', 'O', 'V', '3', '2', 'm', 's', 0,
  /* 41119 */ 'M', 'O', 'V', '6', '4', 'm', 's', 0,
  /* 41127 */ 'M', 'O', 'V', '1', '6', 'm', 's', 0,
  /* 41135 */ 'M', 'O', 'V', '3', '2', 'r', 's', 0,
  /* 41143 */ 'M', 'O', 'V', '6', '4', 'r', 's', 0,
  /* 41151 */ 'M', 'O', 'V', '1', '6', 'r', 's', 0,
  /* 41159 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41173 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41187 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41202 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41217 */ 'V', 'P', 'C', 'M', 'P', 'D', 'Z', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41232 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Z', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41247 */ 'V', 'P', 'C', 'M', 'P', 'U', 'D', 'Z', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41263 */ 'V', 'P', 'C', 'M', 'P', 'Q', 'Z', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41278 */ 'V', 'P', 'C', 'M', 'P', 'U', 'Q', 'Z', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41294 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Z', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 41309 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41323 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41337 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41352 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41367 */ 'V', 'P', 'C', 'M', 'P', 'D', 'Z', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41382 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Z', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41397 */ 'V', 'P', 'C', 'M', 'P', 'U', 'D', 'Z', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41413 */ 'V', 'P', 'C', 'M', 'P', 'Q', 'Z', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41428 */ 'V', 'P', 'C', 'M', 'P', 'U', 'Q', 'Z', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41444 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Z', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 41459 */ 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'm', '_', 'a', 'l', 't', 0,
  /* 41472 */ 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'm', '_', 'a', 'l', 't', 0,
  /* 41485 */ 'V', 'M', 'O', 'V', 'Q', 'd', '6', '4', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 41500 */ 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 41513 */ 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 41526 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 41544 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 41563 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 41581 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 41600 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 41618 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 41637 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 41655 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 41674 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'm', '_', 'I', 'n', 't', 0,
  /* 41687 */ 'V', 'R', 'C', 'P', 'P', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 41699 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 41713 */ 'V', 'R', 'C', 'P', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 41725 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 41739 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 41752 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'm', '_', 'I', 'n', 't', 0,
  /* 41765 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', '_', 'I', 'n', 't', 0,
  /* 41780 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41796 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41813 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41829 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41846 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41862 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41879 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41895 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41912 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41925 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41938 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41951 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41964 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41977 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 41990 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 42003 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 42016 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 42029 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 42042 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 42055 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 42068 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 42086 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 42105 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 42123 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 42142 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 42160 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 42179 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 42197 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 42216 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'r', '_', 'I', 'n', 't', 0,
  /* 42230 */ 'S', 'Q', 'R', 'T', 'S', 'D', 'r', '_', 'I', 'n', 't', 0,
  /* 42242 */ 'V', 'R', 'C', 'P', 'P', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 42254 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 42268 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 42282 */ 'R', 'C', 'P', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 42293 */ 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 42306 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'r', '_', 'I', 'n', 't', 0,
  /* 42319 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', '_', 'I', 'n', 't', 0,
  /* 42334 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 42350 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 42367 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 42383 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 42400 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 42416 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 42433 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 42449 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 42466 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42482 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42499 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42515 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42532 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42548 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42565 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42581 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42598 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42611 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42624 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42637 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42650 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42663 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42676 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42689 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42702 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42715 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42728 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 42741 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
};

extern const unsigned X86InstrNameIndices[] = {
    8483U, 9508U, 9167U, 9180U, 9158U, 9221U, 8369U, 8384U, 
    8192U, 8426U, 9900U, 8169U, 8055U, 11501U, 8086U, 10019U, 
    7958U, 7651U, 6504U, 6525U, 9802U, 8304U, 3097U, 4860U, 
    456U, 20806U, 19304U, 20047U, 21027U, 5719U, 13810U, 6846U, 
    30721U, 14978U, 7201U, 20473U, 33590U, 10849U, 2044U, 13575U, 
    6584U, 30044U, 14760U, 7005U, 18861U, 31827U, 10317U, 2117U, 
    2215U, 6715U, 30201U, 2347U, 7103U, 19433U, 32386U, 10413U, 
    6497U, 13969U, 30915U, 15112U, 20972U, 34115U, 10943U, 19320U, 
    32273U, 20063U, 33031U, 5728U, 13823U, 6869U, 30742U, 14986U, 
    7219U, 7781U, 7804U, 20482U, 33607U, 7837U, 10861U, 2053U, 
    13588U, 6607U, 30065U, 14768U, 7023U, 7757U, 7793U, 18881U, 
    31855U, 7815U, 10329U, 2126U, 2230U, 6738U, 30222U, 2357U, 
    7744U, 7121U, 7769U, 19453U, 32414U, 7826U, 10425U, 6511U, 
    13981U, 30927U, 15119U, 20980U, 34123U, 10954U, 21777U, 34955U, 
    23594U, 36793U, 22173U, 41926U, 35289U, 42612U, 23980U, 42004U, 
    37155U, 42690U, 21725U, 34903U, 23542U, 36741U, 17045U, 17723U, 
    18027U, 17127U, 640U, 27959U, 2999U, 17320U, 4762U, 17898U, 
    2719U, 358U, 2493U, 4125U, 2831U, 4377U, 222U, 2579U, 
    4211U, 68U, 577U, 1671U, 3643U, 1701U, 3682U, 19347U, 
    32300U, 20090U, 33058U, 24160U, 37343U, 21349U, 34522U, 24174U, 
    37357U, 21369U, 34542U, 21359U, 34532U, 20937U, 34080U, 5737U, 
    13836U, 6883U, 30755U, 14994U, 7228U, 20490U, 33615U, 10873U, 
    2062U, 13601U, 6621U, 30078U, 14776U, 7032U, 18889U, 31863U, 
    10341U, 2135U, 2245U, 6752U, 30235U, 2367U, 7130U, 19461U, 
    32422U, 10437U, 6518U, 13993U, 30939U, 15126U, 20987U, 34130U, 
    10965U, 19060U, 32034U, 19782U, 32743U, 21893U, 35038U, 23710U, 
    36898U, 21795U, 34973U, 23612U, 36811U, 30773U, 33718U, 1379U, 
    5458U, 1564U, 3431U, 1391U, 6369U, 5670U, 1881U, 3861U, 
    1477U, 6455U, 5505U, 1642U, 3602U, 1416U, 6398U, 5468U, 
    1574U, 3441U, 1403U, 6378U, 5536U, 1738U, 3724U, 1454U, 
    6426U, 1367U, 1441U, 5680U, 1891U, 3871U, 1489U, 6464U, 
    5515U, 1652U, 3612U, 1428U, 6407U, 5545U, 1747U, 3743U, 
    1465U, 6434U, 9810U, 547U, 19161U, 32150U, 19896U, 32881U, 
    14422U, 15867U, 14464U, 15909U, 709U, 753U, 721U, 765U, 
    19013U, 31987U, 19735U, 32696U, 19022U, 31996U, 19744U, 32705U, 
    19152U, 32133U, 19887U, 32864U, 20702U, 19179U, 20563U, 33688U, 
    18974U, 31948U, 19594U, 32555U, 20686U, 33827U, 19144U, 32125U, 
    19879U, 32856U, 28723U, 29196U, 6946U, 30831U, 7273U, 33872U, 
    6684U, 30145U, 7077U, 32189U, 6815U, 30328U, 7175U, 32955U, 
    6855U, 30729U, 7210U, 33598U, 6593U, 30052U, 7014U, 31835U, 
    6724U, 30209U, 7112U, 32394U, 6928U, 30815U, 7255U, 33835U, 
    6666U, 30129U, 7059U, 32142U, 6797U, 30312U, 7157U, 32873U, 
    6937U, 30823U, 7264U, 33854U, 6675U, 30137U, 7068U, 32171U, 
    6806U, 30320U, 7166U, 32937U, 19004U, 31978U, 19624U, 32585U, 
    17182U, 28707U, 17794U, 2430U, 29180U, 5782U, 2457U, 11223U, 
    9617U, 8115U, 8310U, 3106U, 4869U, 465U, 7892U, 7912U, 
    7949U, 8465U, 8473U, 8487U, 9925U, 7916U, 20437U, 33554U, 
    18825U, 31791U, 19397U, 32350U, 20498U, 33623U, 18897U, 31871U, 
    19517U, 32478U, 20463U, 33580U, 18851U, 31817U, 19423U, 32376U, 
    20509U, 33634U, 18908U, 31882U, 19528U, 32489U, 8249U, 3021U, 
    4784U, 380U, 8231U, 2988U, 4751U, 347U, 20553U, 33678U, 
    18964U, 31938U, 19584U, 32545U, 8267U, 3045U, 4808U, 404U, 
    20583U, 33708U, 18994U, 31968U, 19614U, 32575U, 20520U, 33645U, 
    18919U, 31893U, 19539U, 32500U, 20610U, 33744U, 19050U, 32024U, 
    19772U, 32733U, 20531U, 33656U, 18930U, 31904U, 19550U, 32511U, 
    8239U, 3008U, 4771U, 367U, 8222U, 2967U, 4730U, 326U, 
    20542U, 33667U, 18941U, 31915U, 19561U, 32522U, 8258U, 3033U, 
    4796U, 392U, 20620U, 33761U, 19069U, 32050U, 19791U, 32752U, 
    20649U, 33790U, 19107U, 32088U, 19829U, 32790U, 8287U, 3074U, 
    4837U, 433U, 20737U, 33843U, 19214U, 32160U, 19922U, 32891U, 
    20631U, 33772U, 19080U, 32061U, 19802U, 32763U, 20660U, 33801U, 
    19118U, 32099U, 19840U, 32801U, 8296U, 3086U, 4849U, 445U, 
    20756U, 33862U, 19233U, 32179U, 19976U, 32945U, 1718U, 3714U, 
    5526U, 1728U, 6417U, 1690U, 3662U, 44U, 3522U, 3570U, 
    1594U, 3533U, 3581U, 1605U, 5746U, 13868U, 6892U, 30782U, 
    15033U, 7237U, 20641U, 33782U, 10885U, 2071U, 13633U, 6630U, 
    30096U, 14815U, 7041U, 19099U, 32080U, 10353U, 2154U, 2255U, 
    6761U, 30266U, 2377U, 7139U, 19821U, 32782U, 10449U, 6532U, 
    14021U, 30946U, 15160U, 21005U, 34154U, 10976U, 14454U, 41160U, 
    15899U, 41310U, 14496U, 41174U, 15941U, 41324U, 5639U, 1841U, 
    3794U, 6449U, 22270U, 41460U, 35386U, 41501U, 24067U, 41473U, 
    37242U, 41514U, 7712U, 20571U, 33696U, 18982U, 31956U, 19602U, 
    32563U, 7724U, 20994U, 34137U, 22187U, 35303U, 23994U, 37169U, 
    27989U, 29710U, 29673U, 27979U, 8316U, 3115U, 4878U, 474U, 
    7943U, 9558U, 5794U, 2683U, 7446U, 5862U, 3187U, 7557U, 
    4352U, 7457U, 4950U, 7568U, 11441U, 21669U, 34847U, 23507U, 
    36706U, 23020U, 36233U, 23458U, 36657U, 23045U, 36272U, 21681U, 
    34859U, 19671U, 32632U, 22774U, 35929U, 23881U, 37056U, 19474U, 
    32435U, 22086U, 35202U, 19938U, 32907U, 23924U, 37099U, 22117U, 
    35233U, 19722U, 32683U, 22819U, 35974U, 23008U, 36220U, 23032U, 
    36259U, 19638U, 32599U, 22745U, 35900U, 19689U, 32650U, 22790U, 
    35945U, 8023U, 8068U, 7655U, 9806U, 11359U, 17973U, 29351U, 
    17017U, 28639U, 18246U, 29489U, 17290U, 28794U, 17695U, 29121U, 
    18271U, 29509U, 18204U, 29456U, 17283U, 28769U, 17881U, 29242U, 
    18308U, 29550U, 22007U, 35139U, 23836U, 37024U, 17082U, 17760U, 
    18058U, 17158U, 674U, 28011U, 17360U, 17938U, 2768U, 2530U, 
    4162U, 2871U, 4417U, 262U, 2619U, 4251U, 108U, 608U, 
    22291U, 41965U, 35407U, 42651U, 24103U, 42043U, 37278U, 42729U, 
    17101U, 17778U, 18069U, 17169U, 686U, 28022U, 3143U, 17380U, 
    4906U, 17958U, 2806U, 502U, 2554U, 4186U, 2885U, 4431U, 
    276U, 2633U, 4265U, 122U, 619U, 14445U, 15890U, 14487U, 
    15932U, 11451U, 9548U, 3623U, 3152U, 4915U, 3170U, 4933U, 
    27935U, 9740U, 11461U, 31360U, 36967U, 9621U, 8497U, 796U, 
    13522U, 18079U, 13488U, 17179U, 3592U, 13533U, 18128U, 13499U, 
    17236U, 3673U, 18326U, 18485U, 17198U, 17810U, 17246U, 17846U, 
    9594U, 9601U, 9868U, 8073U, 18098U, 17206U, 18138U, 17255U, 
    9609U, 18211U, 18656U, 8027U, 9930U, 3319U, 3326U, 8491U, 
    11286U, 9983U, 9579U, 18220U, 29479U, 18678U, 9460U, 9334U, 
    9397U, 9481U, 9355U, 9418U, 9439U, 9313U, 9376U, 9522U, 
    9502U, 789U, 9529U, 10002U, 18501U, 18431U, 8079U, 9883U, 
    18664U, 11471U, 9246U, 9754U, 3733U, 8185U, 3513U, 9942U, 
    11280U, 802U, 8523U, 21903U, 35048U, 23720U, 36908U, 21804U, 
    34982U, 23621U, 36820U, 7971U, 9891U, 21704U, 34882U, 23530U, 
    36729U, 21965U, 35097U, 23782U, 36957U, 21692U, 34870U, 23518U, 
    36717U, 21954U, 35086U, 23771U, 36946U, 11481U, 21776U, 34954U, 
    23593U, 36792U, 9998U, 21737U, 34915U, 23554U, 36753U, 18203U, 
    29455U, 17282U, 28768U, 17880U, 29241U, 18307U, 29549U, 17992U, 
    17054U, 17732U, 2898U, 4444U, 289U, 2646U, 4278U, 135U, 
    2731U, 4315U, 172U, 18090U, 29410U, 20601U, 14399U, 6976U, 
    33735U, 15844U, 7435U, 17190U, 28715U, 19041U, 14389U, 6954U, 
    32015U, 15834U, 7369U, 17802U, 29188U, 19763U, 2315U, 6965U, 
    32724U, 2418U, 7402U, 18294U, 29536U, 5510U, 15026U, 33754U, 
    1647U, 14808U, 32043U, 6403U, 15154U, 34148U, 17985U, 29358U, 
    17029U, 28646U, 18256U, 29499U, 17300U, 28804U, 17707U, 29128U, 
    18282U, 29515U, 23792U, 36980U, 9651U, 8504U, 10006U, 3344U, 
    9562U, 8018U, 1872U, 3827U, 8440U, 1502U, 3384U, 1544U, 
    3411U, 1554U, 3421U, 5663U, 1865U, 3801U, 18117U, 17225U, 
    17828U, 2922U, 4468U, 313U, 2670U, 4302U, 159U, 2793U, 
    4339U, 196U, 18001U, 17092U, 18107U, 17215U, 17818U, 2910U, 
    4456U, 301U, 2658U, 4290U, 147U, 2781U, 4327U, 184U, 
    22278U, 35394U, 24075U, 37250U, 22224U, 35340U, 24031U, 37206U, 
    23892U, 37067U, 19487U, 32448U, 22097U, 35213U, 19951U, 32920U, 
    23935U, 37110U, 22128U, 35244U, 19652U, 32613U, 22757U, 35912U, 
    19703U, 32664U, 22802U, 35957U, 29965U, 22196U, 35312U, 24003U, 
    37178U, 22265U, 35381U, 24062U, 37237U, 22210U, 35326U, 24017U, 
    37192U, 23876U, 37051U, 19469U, 32430U, 22081U, 35197U, 19933U, 
    32902U, 23919U, 37094U, 22112U, 35228U, 19633U, 32594U, 22740U, 
    35895U, 19684U, 32645U, 22785U, 35940U, 22181U, 35297U, 23988U, 
    37163U, 831U, 5357U, 821U, 5347U, 837U, 5363U, 826U, 
    5352U, 13356U, 2006U, 4021U, 849U, 5375U, 843U, 5369U, 
    866U, 5392U, 854U, 5380U, 871U, 5397U, 17239U, 28732U, 
    17839U, 2444U, 29205U, 892U, 5427U, 860U, 5386U, 881U, 
    5416U, 898U, 5433U, 909U, 5444U, 876U, 5411U, 887U, 
    5422U, 13361U, 904U, 5439U, 37562U, 37707U, 37579U, 16204U, 
    18726U, 30003U, 16212U, 16294U, 37844U, 37885U, 37747U, 7692U, 
    11209U, 7699U, 11216U, 15569U, 15589U, 37876U, 37473U, 37754U, 
    37763U, 8212U, 20670U, 33811U, 19128U, 32109U, 19863U, 32824U, 
    5494U, 7711U, 1631U, 3559U, 6388U, 7723U, 24197U, 9763U, 
    20694U, 19171U, 534U, 783U, 17055U, 17733U, 16376U, 1349U, 
    3349U, 26U, 1358U, 3358U, 35U, 17330U, 4279U, 136U, 
    17908U, 173U, 16403U, 35704U, 29344U, 28632U, 28784U, 29114U, 
    8179U, 3496U, 20713U, 19190U, 8034U, 20721U, 19198U, 19906U, 
    18148U, 18623U, 20729U, 19206U, 19914U, 18164U, 18635U, 18180U, 
    29432U, 18230U, 29463U, 13818U, 6864U, 30737U, 13583U, 6602U, 
    30060U, 2225U, 6733U, 30217U, 13976U, 30922U, 13831U, 6878U, 
    30750U, 13596U, 6616U, 30073U, 2240U, 6747U, 30230U, 13988U, 
    30934U, 17968U, 17012U, 17690U, 18266U, 17980U, 17024U, 17702U, 
    18277U, 13921U, 6915U, 30803U, 13686U, 6653U, 30117U, 2280U, 
    6784U, 30300U, 14068U, 30965U, 11418U, 13797U, 6832U, 30708U, 
    13562U, 6570U, 30031U, 2200U, 6701U, 30188U, 13957U, 30903U, 
    13908U, 6901U, 30790U, 13673U, 6639U, 30104U, 2265U, 6770U, 
    30287U, 14056U, 30953U, 7868U, 7980U, 9627U, 11250U, 9584U, 
    8109U, 8102U, 8513U, 11237U, 9232U, 9645U, 11274U, 20593U, 
    33727U, 19033U, 32007U, 19755U, 32716U, 20748U, 19225U, 19968U, 
    18515U, 29757U, 5450U, 1536U, 3403U, 6362U, 20777U, 33890U, 
    19254U, 32207U, 19997U, 32973U, 10048U, 3848U, 21766U, 34944U, 
    23583U, 36782U, 22163U, 35279U, 23970U, 37145U, 22029U, 35148U, 
    23858U, 37033U, 22310U, 41978U, 35426U, 42664U, 24121U, 42056U, 
    37296U, 42742U, 8041U, 21756U, 34934U, 23573U, 36772U, 22153U, 
    35269U, 23960U, 37135U, 21915U, 35060U, 23732U, 36920U, 22248U, 
    41952U, 35364U, 42638U, 24054U, 42030U, 37229U, 42716U, 27426U, 
    40531U, 27314U, 40419U, 27586U, 40691U, 27459U, 40564U, 27409U, 
    40514U, 27442U, 40547U, 9874U, 9659U, 3699U, 33096U, 40163U, 
    30243U, 19504U, 32465U, 3367U, 33115U, 36140U, 36095U, 31281U, 
    36244U, 32832U, 30274U, 19850U, 32811U, 22653U, 35807U, 4522U, 
    5076U, 4580U, 5148U, 4639U, 5236U, 27676U, 40781U, 27244U, 
    40349U, 27260U, 40365U, 27102U, 40207U, 27289U, 40394U, 27501U, 
    40606U, 27157U, 40262U, 27762U, 40867U, 27186U, 40291U, 27805U, 
    40910U, 27663U, 40768U, 27072U, 40177U, 27475U, 40580U, 27302U, 
    40407U, 27115U, 40220U, 27692U, 40797U, 27128U, 40233U, 27330U, 
    40435U, 27733U, 40838U, 27201U, 40306U, 27345U, 40450U, 27834U, 
    40939U, 16189U, 4687U, 5284U, 4609U, 5206U, 4551U, 5105U, 
    4536U, 5090U, 4671U, 5268U, 4594U, 5191U, 14729U, 16174U, 
    4653U, 5250U, 27360U, 40465U, 27820U, 40925U, 27230U, 40335U, 
    27776U, 40881U, 27216U, 40321U, 34258U, 4703U, 5300U, 27849U, 
    40954U, 27705U, 40810U, 27719U, 40824U, 27548U, 40653U, 27563U, 
    40668U, 27602U, 40707U, 4492U, 5034U, 14223U, 15492U, 4507U, 
    5049U, 4565U, 5119U, 4624U, 5221U, 15285U, 21582U, 34760U, 
    15398U, 23252U, 36466U, 15536U, 24463U, 37664U, 15254U, 21407U, 
    34598U, 15480U, 24242U, 37416U, 15306U, 21613U, 34791U, 15419U, 
    23273U, 36487U, 15557U, 24494U, 37695U, 27089U, 40194U, 27276U, 
    40381U, 27488U, 40593U, 27143U, 40248U, 27748U, 40853U, 27171U, 
    40276U, 27790U, 40895U, 27650U, 40755U, 27616U, 40721U, 27514U, 
    40619U, 27375U, 40480U, 27633U, 40738U, 27531U, 40636U, 27392U, 
    40497U, 27574U, 40679U, 9746U, 41039U, 9238U, 9957U, 0U, 
    5852U, 13942U, 30846U, 41127U, 13407U, 15090U, 20814U, 33927U, 
    10909U, 41151U, 27927U, 41093U, 2947U, 29933U, 29949U, 13707U, 
    30160U, 41111U, 13367U, 733U, 13434U, 13472U, 14872U, 4078U, 
    19312U, 32265U, 10377U, 41135U, 27911U, 41077U, 5842U, 2957U, 
    4720U, 7540U, 29941U, 29957U, 2305U, 30343U, 41119U, 13397U, 
    13377U, 13387U, 13417U, 13442U, 13480U, 14945U, 2408U, 20055U, 
    33023U, 10473U, 41143U, 27919U, 41085U, 35856U, 22338U, 35454U, 
    7549U, 14087U, 30984U, 11320U, 13426U, 15210U, 21035U, 11307U, 
    34183U, 11333U, 10998U, 31070U, 21695U, 34873U, 11024U, 31330U, 
    23521U, 36720U, 11065U, 30763U, 20510U, 30086U, 18909U, 30256U, 
    19529U, 22898U, 36061U, 22627U, 35781U, 23908U, 37083U, 30992U, 
    21055U, 34191U, 11010U, 31416U, 24206U, 37380U, 11106U, 36854U, 
    31080U, 21840U, 31340U, 23657U, 36843U, 31090U, 21883U, 31350U, 
    23700U, 30885U, 3262U, 5135U, 3276U, 5163U, 21043U, 31252U, 
    30351U, 31224U, 31100U, 31373U, 7992U, 9917U, 28653U, 31187U, 
    35756U, 31212U, 33146U, 22671U, 41102U, 7886U, 8006U, 31144U, 
    22300U, 35416U, 11052U, 30364U, 33133U, 22909U, 36072U, 22921U, 
    36084U, 9639U, 31200U, 35769U, 31407U, 24112U, 37287U, 11093U, 
    11268U, 7501U, 7612U, 5806U, 7468U, 5874U, 7579U, 5830U, 
    2935U, 7490U, 5898U, 3249U, 7601U, 31111U, 21985U, 35117U, 
    11038U, 31384U, 23814U, 37002U, 11079U, 22640U, 35794U, 22698U, 
    35839U, 22684U, 35825U, 7512U, 7623U, 7523U, 7634U, 5818U, 
    7479U, 5886U, 7590U, 9672U, 9700U, 9686U, 9713U, 14506U, 
    15951U, 18091U, 29411U, 17191U, 28716U, 17803U, 29189U, 18295U, 
    29537U, 21874U, 35029U, 23691U, 36889U, 22238U, 41939U, 35354U, 
    42625U, 24045U, 42017U, 37220U, 42703U, 19338U, 32291U, 20081U, 
    33049U, 17063U, 17741U, 18037U, 17137U, 651U, 27969U, 3056U, 
    17339U, 4819U, 17917U, 2743U, 415U, 2505U, 4137U, 2844U, 
    4390U, 235U, 2592U, 4224U, 81U, 587U, 37324U, 18010U, 
    29395U, 17110U, 28692U, 17787U, 29165U, 18288U, 29530U, 9589U, 
    9226U, 11244U, 18196U, 29448U, 17275U, 28761U, 17873U, 29234U, 
    18301U, 29543U, 5756U, 13901U, 6907U, 30796U, 15066U, 7247U, 
    20679U, 33820U, 10898U, 2081U, 13666U, 6645U, 30110U, 13459U, 
    14848U, 7051U, 19137U, 32118U, 10366U, 2164U, 2271U, 6776U, 
    30293U, 2388U, 7149U, 19872U, 32849U, 10462U, 6540U, 14050U, 
    30959U, 15189U, 21013U, 34162U, 10988U, 21937U, 35069U, 23754U, 
    36929U, 29988U, 33919U, 29980U, 32236U, 29996U, 34176U, 7880U, 
    8000U, 11262U, 6139U, 6251U, 6151U, 6263U, 6163U, 6275U, 
    24387U, 37588U, 21298U, 34471U, 24399U, 37600U, 21310U, 34483U, 
    21083U, 34219U, 21504U, 34695U, 23068U, 36295U, 21161U, 34334U, 
    24548U, 37782U, 21192U, 34365U, 24579U, 37813U, 24378U, 37571U, 
    20923U, 34066U, 22873U, 36028U, 21626U, 34804U, 8163U, 21102U, 
    34238U, 21202U, 34375U, 24419U, 37620U, 697U, 741U, 14518U, 
    15963U, 23152U, 36379U, 21130U, 34293U, 22048U, 35167U, 23286U, 
    36500U, 24517U, 37727U, 9286U, 8399U, 22715U, 35870U, 9252U, 
    8336U, 20891U, 34034U, 21223U, 34396U, 22351U, 35467U, 23320U, 
    36531U, 24600U, 37834U, 9300U, 8413U, 22728U, 35883U, 9269U, 
    8353U, 20907U, 34050U, 19090U, 32071U, 19812U, 32773U, 19283U, 
    32244U, 20026U, 33002U, 31020U, 34314U, 31134U, 35188U, 31272U, 
    36521U, 31453U, 15601U, 21556U, 34734U, 24437U, 37638U, 21321U, 
    34494U, 21485U, 34676U, 23224U, 36438U, 22591U, 35694U, 24139U, 
    37314U, 24688U, 37950U, 22881U, 36036U, 22855U, 36010U, 21329U, 
    34502U, 21338U, 34511U, 18791U, 31757U, 19374U, 32327U, 22889U, 
    36044U, 18802U, 31768U, 24149U, 37332U, 23434U, 36632U, 21267U, 
    34440U, 21494U, 34685U, 6205U, 6317U, 24368U, 37553U, 6234U, 
    6346U, 21443U, 34634U, 6191U, 6303U, 24325U, 37510U, 21548U, 
    34726U, 24410U, 37611U, 21141U, 34304U, 22072U, 35178U, 23310U, 
    36511U, 14530U, 15975U, 6175U, 6287U, 22471U, 35574U, 21213U, 
    34386U, 22309U, 35425U, 24590U, 37824U, 21276U, 34449U, 22396U, 
    35512U, 24656U, 37918U, 21171U, 34344U, 22247U, 35363U, 24558U, 
    37792U, 21258U, 34431U, 22386U, 35502U, 24646U, 37908U, 34247U, 
    21462U, 34653U, 22985U, 36196U, 24344U, 37529U, 23201U, 36415U, 
    22568U, 35671U, 23411U, 36609U, 21474U, 34665U, 22997U, 36208U, 
    24356U, 37541U, 23213U, 36427U, 22580U, 35683U, 23423U, 36621U, 
    23114U, 36341U, 6219U, 6331U, 24527U, 37737U, 24635U, 37897U, 
    24428U, 37629U, 21595U, 34773U, 24476U, 37677U, 23190U, 36404U, 
    29418U, 18782U, 31734U, 28739U, 18744U, 31696U, 29212U, 18763U, 
    31715U, 1520U, 20766U, 33879U, 19243U, 32196U, 19986U, 32962U, 
    5580U, 1782U, 5597U, 1799U, 5487U, 1624U, 3552U, 5614U, 
    1816U, 3769U, 5631U, 1833U, 3786U, 5655U, 1857U, 23444U, 
    36642U, 8456U, 7680U, 556U, 810U, 3333U, 11227U, 24266U, 
    37440U, 21092U, 34228U, 14123U, 15267U, 14237U, 15506U, 14248U, 
    15517U, 21120U, 34283U, 21634U, 34812U, 24507U, 37717U, 15370U, 
    15277U, 21574U, 34752U, 15390U, 23244U, 36458U, 15528U, 24455U, 
    37656U, 15246U, 21399U, 34590U, 15472U, 24234U, 37408U, 15380U, 
    15298U, 21605U, 34783U, 15411U, 23265U, 36479U, 15549U, 24486U, 
    37687U, 21074U, 34210U, 21453U, 34644U, 22976U, 36187U, 21151U, 
    34324U, 24538U, 37772U, 21181U, 34354U, 24568U, 37802U, 24335U, 
    37520U, 21715U, 34893U, 24188U, 37371U, 24287U, 37461U, 23088U, 
    36315U, 23124U, 36351U, 22482U, 35585U, 24300U, 37485U, 23101U, 
    36328U, 23138U, 36365U, 22495U, 35598U, 29402U, 18772U, 31724U, 
    28699U, 18734U, 31686U, 5691U, 2144U, 6474U, 29172U, 18753U, 
    31705U, 1512U, 5562U, 1764U, 5571U, 1773U, 5588U, 1790U, 
    5479U, 1616U, 3544U, 5605U, 1807U, 3760U, 5622U, 1824U, 
    3777U, 5646U, 1848U, 5774U, 2182U, 6554U, 23451U, 36649U, 
    1027U, 8662U, 13844U, 1244U, 8907U, 15002U, 915U, 8536U, 
    13609U, 1132U, 8781U, 14784U, 971U, 8599U, 13724U, 1188U, 
    8844U, 14889U, 1083U, 8725U, 14000U, 1300U, 8970U, 15133U, 
    18543U, 41688U, 29780U, 42243U, 18591U, 41714U, 29828U, 42282U, 
    1059U, 8698U, 13884U, 1276U, 8943U, 15049U, 947U, 8572U, 
    13649U, 1164U, 8817U, 14831U, 1003U, 8635U, 13756U, 1220U, 
    8880U, 14921U, 1111U, 8757U, 14035U, 1328U, 9002U, 15174U, 
    8127U, 3452U, 8145U, 3474U, 9780U, 7920U, 29385U, 28682U, 
    29155U, 29375U, 28672U, 29145U, 7933U, 9572U, 30838U, 30152U, 
    30335U, 30976U, 11373U, 1929U, 3909U, 1955U, 3935U, 3982U, 
    1993U, 4008U, 11430U, 1916U, 3896U, 1942U, 3922U, 3969U, 
    1980U, 3995U, 9953U, 8514U, 11238U, 11275U, 11346U, 1043U, 
    8680U, 13860U, 1260U, 8925U, 15018U, 931U, 8554U, 13625U, 
    1148U, 8799U, 14800U, 987U, 8617U, 13740U, 1204U, 8862U, 
    14905U, 1097U, 8741U, 14014U, 1314U, 8986U, 15147U, 1075U, 
    8716U, 13900U, 1292U, 8961U, 15065U, 963U, 8590U, 13665U, 
    1180U, 8835U, 14847U, 1019U, 8653U, 13772U, 1236U, 8898U, 
    14937U, 1125U, 8773U, 14049U, 1342U, 9018U, 15188U, 13715U, 
    14880U, 13780U, 14953U, 18342U, 29569U, 18533U, 29770U, 18372U, 
    29599U, 42217U, 18581U, 29818U, 42269U, 9518U, 18551U, 41700U, 
    29788U, 42255U, 18599U, 41726U, 29836U, 42293U, 8217U, 1051U, 
    8689U, 13876U, 1268U, 8934U, 15041U, 939U, 8563U, 13641U, 
    1156U, 8808U, 14823U, 995U, 8626U, 13748U, 1212U, 8871U, 
    14913U, 1104U, 8749U, 14028U, 1321U, 8994U, 15167U, 19356U, 
    32309U, 20099U, 33067U, 5701U, 13789U, 6823U, 30700U, 14962U, 
    7183U, 20447U, 33564U, 10825U, 2026U, 13554U, 6561U, 30023U, 
    14744U, 6987U, 18835U, 31801U, 10293U, 2099U, 2190U, 6692U, 
    30180U, 2327U, 7085U, 19407U, 32360U, 10389U, 6483U, 13950U, 
    30896U, 15098U, 20958U, 34101U, 10921U, 5555U, 1757U, 3753U, 
    6443U, 1902U, 3882U, 18390U, 29617U, 18314U, 29556U, 18397U, 
    29624U, 29365U, 28662U, 29135U, 29521U, 18320U, 29562U, 18425U, 
    29652U, 18404U, 29631U, 18438U, 29666U, 18411U, 29638U, 18444U, 
    29681U, 18418U, 29645U, 18450U, 29687U, 18472U, 29728U, 18525U, 
    29762U, 18457U, 29694U, 18479U, 29745U, 18617U, 29854U, 8048U, 
    18156U, 18629U, 1035U, 8671U, 13852U, 1252U, 8916U, 15010U, 
    923U, 8545U, 13617U, 1140U, 8790U, 14792U, 979U, 8608U, 
    13732U, 1196U, 8853U, 14897U, 1090U, 8733U, 14007U, 1307U, 
    8978U, 15140U, 9070U, 7325U, 9136U, 7413U, 9026U, 7281U, 
    9092U, 7347U, 9048U, 7303U, 9114U, 7380U, 19329U, 32282U, 
    20072U, 33040U, 1067U, 8707U, 13892U, 1284U, 8952U, 15057U, 
    955U, 8581U, 13657U, 1172U, 8826U, 14839U, 1011U, 8644U, 
    13764U, 1228U, 8889U, 14929U, 1118U, 8765U, 14042U, 1335U, 
    9010U, 15181U, 9081U, 7336U, 9147U, 7424U, 9037U, 7292U, 
    9103U, 7358U, 9059U, 7314U, 9125U, 7391U, 19365U, 32318U, 
    20108U, 33076U, 14434U, 15879U, 14476U, 15921U, 18172U, 18641U, 
    8281U, 3065U, 4828U, 424U, 9976U, 18188U, 29440U, 28753U, 
    17865U, 29226U, 18238U, 29471U, 28776U, 29249U, 18352U, 29579U, 
    18552U, 29789U, 18382U, 41675U, 29609U, 42230U, 18600U, 41727U, 
    29837U, 42294U, 8322U, 3124U, 4887U, 483U, 11491U, 7897U, 
    7939U, 8012U, 8478U, 8519U, 9772U, 7874U, 7986U, 9633U, 
    11256U, 29425U, 28746U, 29219U, 18520U, 17093U, 17770U, 17216U, 
    17819U, 16384U, 36052U, 17371U, 17949U, 2782U, 2543U, 4175U, 
    17265U, 17855U, 2695U, 16393U, 2469U, 4101U, 35711U, 5710U, 
    13802U, 6837U, 30713U, 14970U, 7192U, 20455U, 33572U, 10837U, 
    2035U, 13567U, 6575U, 30036U, 14752U, 6996U, 18843U, 31809U, 
    10305U, 2108U, 2205U, 6706U, 30193U, 2337U, 7094U, 19415U, 
    32368U, 10401U, 6490U, 13962U, 30908U, 15105U, 20965U, 34108U, 
    10932U, 21728U, 34906U, 23545U, 36744U, 17072U, 17750U, 18047U, 
    17147U, 662U, 28000U, 17349U, 17927U, 2755U, 2517U, 4149U, 
    2857U, 4403U, 248U, 2605U, 4237U, 94U, 597U, 22144U, 
    41913U, 35260U, 42599U, 23951U, 41991U, 37126U, 42677U, 17036U, 
    17714U, 18017U, 17117U, 629U, 27949U, 2979U, 17310U, 4742U, 
    17888U, 2707U, 338U, 2481U, 4113U, 2818U, 4364U, 209U, 
    2566U, 4198U, 55U, 567U, 9861U, 9204U, 9737U, 9990U, 
    3817U, 9950U, 3808U, 13450U, 4041U, 18463U, 4481U, 29719U, 
    4974U, 13543U, 4052U, 14172U, 4065U, 15358U, 4088U, 5764U, 
    13933U, 15081U, 20797U, 33910U, 2089U, 13698U, 14863U, 19274U, 
    32227U, 2172U, 2294U, 2397U, 20017U, 32993U, 6546U, 14079U, 
    15202U, 11293U, 21019U, 34168U, 2015U, 4030U, 3211U, 4996U, 
    3222U, 5007U, 9567U, 8329U, 3134U, 4897U, 493U, 20787U, 
    33900U, 19264U, 32217U, 20007U, 32983U, 22186U, 35302U, 23993U, 
    37168U, 29709U, 29672U, 29735U, 29700U, 3199U, 4962U, 511U, 
    3238U, 5023U, 523U, 29658U, 7706U, 21828U, 34993U, 23645U, 
    36831U, 21862U, 35017U, 23679U, 36877U, 3948U, 25238U, 38446U, 
    21785U, 34963U, 26210U, 39319U, 23602U, 36801U, 22172U, 41925U, 
    35288U, 42611U, 23979U, 42003U, 37154U, 42689U, 25171U, 38379U, 
    21724U, 34902U, 26143U, 39252U, 23541U, 36740U, 24159U, 37342U, 
    21348U, 34521U, 24173U, 37356U, 21368U, 34541U, 21358U, 34531U, 
    20936U, 34079U, 25321U, 38515U, 21892U, 35037U, 26304U, 39399U, 
    23709U, 36897U, 25248U, 38456U, 21794U, 34972U, 26220U, 39329U, 
    23611U, 36810U, 9839U, 26856U, 39913U, 27021U, 40078U, 14553U, 
    15998U, 14421U, 15866U, 14589U, 16034U, 14463U, 15908U, 25397U, 
    38577U, 21994U, 35126U, 26380U, 39461U, 23823U, 37011U, 6108U, 
    6123U, 25481U, 38633U, 26903U, 39960U, 26427U, 39494U, 27056U, 
    40113U, 24087U, 37262U, 14578U, 41187U, 16023U, 41337U, 14672U, 
    41232U, 16117U, 41382U, 14453U, 41159U, 15898U, 41309U, 14624U, 
    41202U, 16069U, 41352U, 14718U, 41294U, 16163U, 41444U, 14495U, 
    41173U, 15940U, 41323U, 22269U, 41459U, 35385U, 41500U, 24066U, 
    41472U, 37241U, 41513U, 22214U, 35330U, 24021U, 37196U, 25134U, 
    38342U, 21668U, 34846U, 26119U, 39228U, 23506U, 36705U, 24710U, 
    25769U, 38920U, 36232U, 24723U, 26093U, 39202U, 36656U, 26106U, 
    39215U, 23469U, 36668U, 25796U, 38947U, 23044U, 36271U, 25147U, 
    38355U, 21680U, 34858U, 31544U, 38809U, 31174U, 35718U, 19670U, 
    32631U, 22773U, 35928U, 23880U, 37055U, 19473U, 32434U, 22085U, 
    35201U, 19937U, 32906U, 23923U, 37098U, 22116U, 35232U, 19721U, 
    32682U, 22818U, 35973U, 24696U, 25755U, 38906U, 36219U, 25782U, 
    38933U, 23031U, 36258U, 19637U, 32598U, 22744U, 35899U, 19688U, 
    32649U, 22789U, 35944U, 25410U, 38590U, 22006U, 35138U, 26393U, 
    39474U, 23835U, 37023U, 22290U, 41964U, 35406U, 42650U, 24102U, 
    42042U, 37277U, 42728U, 14444U, 15889U, 14614U, 16059U, 14486U, 
    15931U, 18509U, 29751U, 18672U, 29860U, 30854U, 33962U, 30636U, 
    33430U, 30668U, 33492U, 30869U, 34004U, 30652U, 33461U, 30684U, 
    33523U, 31359U, 36966U, 5176U, 31743U, 41050U, 30431U, 12973U, 
    20172U, 12153U, 33225U, 13183U, 10148U, 10556U, 16775U, 11769U, 
    28395U, 12589U, 17453U, 11965U, 28877U, 12785U, 16475U, 11573U, 
    28095U, 12393U, 30561U, 13059U, 20302U, 12239U, 33355U, 13269U, 
    10258U, 10726U, 16925U, 11867U, 28545U, 12687U, 17603U, 12063U, 
    29027U, 12883U, 16625U, 11671U, 28245U, 12491U, 30481U, 42367U, 
    20222U, 41813U, 33275U, 42499U, 10622U, 16833U, 28453U, 17511U, 
    41563U, 28935U, 42105U, 16533U, 28153U, 30611U, 42433U, 20352U, 
    41879U, 33405U, 42565U, 10792U, 16983U, 28603U, 17661U, 41637U, 
    29085U, 42179U, 16683U, 28303U, 30376U, 12914U, 20117U, 12094U, 
    33170U, 13124U, 10073U, 10485U, 16712U, 11702U, 28332U, 12522U, 
    17390U, 11898U, 28814U, 12718U, 16412U, 11506U, 28032U, 12326U, 
    30506U, 13000U, 20247U, 12180U, 33300U, 13210U, 10183U, 10655U, 
    16862U, 11800U, 28482U, 12620U, 17540U, 11996U, 28964U, 12816U, 
    16562U, 11604U, 28182U, 12424U, 30416U, 12957U, 20157U, 12137U, 
    33210U, 13167U, 10128U, 10537U, 16758U, 11751U, 28378U, 12571U, 
    17436U, 11947U, 28860U, 12767U, 16458U, 11555U, 28078U, 12375U, 
    30546U, 13043U, 20287U, 12223U, 33340U, 13253U, 10238U, 10707U, 
    16908U, 11849U, 28528U, 12669U, 17586U, 12045U, 29010U, 12865U, 
    16608U, 11653U, 28228U, 12473U, 30391U, 12930U, 20132U, 12110U, 
    33185U, 13140U, 10093U, 10504U, 16729U, 11720U, 28349U, 12540U, 
    17407U, 11916U, 28831U, 12736U, 16429U, 11524U, 28049U, 12344U, 
    30521U, 13016U, 20262U, 12196U, 33315U, 13226U, 10203U, 10674U, 
    16879U, 11818U, 28499U, 12638U, 17557U, 12014U, 28981U, 12834U, 
    16579U, 11622U, 28199U, 12442U, 30456U, 42334U, 20197U, 41780U, 
    33250U, 42466U, 10589U, 16804U, 28424U, 17482U, 41526U, 28906U, 
    42068U, 16504U, 28124U, 30586U, 42400U, 20327U, 41846U, 33380U, 
    42532U, 10759U, 16954U, 28574U, 17632U, 41600U, 29056U, 42142U, 
    16654U, 28274U, 30443U, 12986U, 20184U, 12166U, 33237U, 13196U, 
    10165U, 10572U, 16789U, 11784U, 28409U, 12604U, 17467U, 11980U, 
    28891U, 12800U, 16489U, 11588U, 28109U, 12408U, 30573U, 13072U, 
    20314U, 12252U, 33367U, 13282U, 10275U, 10742U, 16939U, 11882U, 
    28559U, 12702U, 17617U, 12078U, 29041U, 12898U, 16639U, 11686U, 
    28259U, 12506U, 30493U, 42383U, 20234U, 41829U, 33287U, 42515U, 
    10638U, 16847U, 28467U, 17525U, 41581U, 28949U, 42123U, 16547U, 
    28167U, 30623U, 42449U, 20364U, 41895U, 33417U, 42581U, 10808U, 
    16997U, 28617U, 17675U, 41655U, 29099U, 42197U, 16697U, 28317U, 
    30403U, 12943U, 20144U, 12123U, 33197U, 13153U, 10110U, 10520U, 
    16743U, 11735U, 28363U, 12555U, 17421U, 11931U, 28845U, 12751U, 
    16443U, 11539U, 28063U, 12359U, 30533U, 13029U, 20274U, 12209U, 
    33327U, 13239U, 10220U, 10690U, 16893U, 11833U, 28513U, 12653U, 
    17571U, 12029U, 28995U, 12849U, 16593U, 11637U, 28213U, 12457U, 
    30468U, 42350U, 20209U, 41796U, 33262U, 42482U, 10605U, 16818U, 
    28438U, 17496U, 41544U, 28920U, 42086U, 16518U, 28138U, 30598U, 
    42416U, 20339U, 41862U, 33392U, 42548U, 10775U, 16968U, 28588U, 
    17646U, 41618U, 29070U, 42160U, 16668U, 28288U, 22037U, 12280U, 
    35156U, 13310U, 23866U, 12305U, 37041U, 13335U, 22327U, 35443U, 
    24129U, 37304U, 21902U, 35047U, 23719U, 36907U, 21803U, 34981U, 
    23620U, 36819U, 21964U, 35096U, 23781U, 36956U, 21953U, 35085U, 
    23770U, 36945U, 25258U, 21814U, 26230U, 23631U, 25342U, 21923U, 
    26325U, 23740U, 25227U, 38435U, 21775U, 34953U, 26199U, 39308U, 
    23592U, 36791U, 25184U, 38392U, 21736U, 34914U, 26156U, 39265U, 
    23553U, 36752U, 20849U, 33977U, 20377U, 33446U, 20407U, 33508U, 
    20876U, 34019U, 20392U, 33477U, 20422U, 33539U, 23791U, 36979U, 
    27898U, 41064U, 26453U, 24196U, 9762U, 10047U, 3847U, 31516U, 
    25420U, 31120U, 22015U, 31617U, 26403U, 31393U, 23844U, 25216U, 
    38424U, 21765U, 34943U, 26188U, 39297U, 23582U, 36781U, 22162U, 
    35278U, 23969U, 37144U, 25434U, 38600U, 22028U, 35147U, 26417U, 
    39484U, 23857U, 37032U, 22318U, 41977U, 35434U, 42663U, 24120U, 
    42055U, 37295U, 42741U, 9197U, 18492U, 7926U, 25205U, 38413U, 
    21755U, 34933U, 26177U, 39286U, 23572U, 36771U, 22152U, 35268U, 
    23959U, 37134U, 25332U, 38526U, 21914U, 35059U, 26315U, 39410U, 
    23731U, 36919U, 22256U, 41951U, 35372U, 42637U, 24053U, 42029U, 
    37228U, 42715U, 8447U, 1527U, 3394U, 9189U, 35855U, 22337U, 
    35453U, 31482U, 25160U, 38368U, 11134U, 31642U, 26845U, 16246U, 
    39902U, 16328U, 31069U, 21694U, 34872U, 11023U, 31583U, 26132U, 
    39241U, 11164U, 31664U, 27010U, 16270U, 40067U, 16352U, 31329U, 
    23520U, 36719U, 11064U, 25681U, 38832U, 22897U, 36060U, 22626U, 
    35780U, 23907U, 37082U, 30011U, 18813U, 31779U, 30168U, 19385U, 
    32338U, 31471U, 24749U, 37958U, 11119U, 30991U, 21054U, 34190U, 
    11009U, 19292U, 16220U, 32253U, 16302U, 20035U, 16233U, 33011U, 
    16315U, 31631U, 26463U, 39520U, 11194U, 31415U, 24205U, 37379U, 
    11105U, 36853U, 31079U, 21839U, 31339U, 23656U, 36842U, 31089U, 
    21882U, 31349U, 23699U, 30884U, 29314U, 3289U, 5317U, 29271U, 
    3261U, 5134U, 29329U, 3304U, 5332U, 29285U, 3275U, 5162U, 
    24736U, 21042U, 31557U, 31251U, 31493U, 31099U, 31594U, 31372U, 
    31186U, 35755U, 31211U, 33145U, 22670U, 33085U, 41485U, 33159U, 
    41101U, 31143U, 22299U, 35415U, 11051U, 30363U, 33132U, 25693U, 
    38844U, 22908U, 36071U, 25706U, 38857U, 22920U, 36083U, 31199U, 
    35768U, 31406U, 24111U, 37286U, 11092U, 31505U, 25386U, 38566U, 
    11149U, 31653U, 26880U, 16258U, 39937U, 16340U, 31110U, 21984U, 
    35116U, 11037U, 31606U, 26369U, 39450U, 11179U, 31675U, 27045U, 
    16282U, 40102U, 16364U, 31383U, 23813U, 37001U, 11078U, 22639U, 
    35793U, 22697U, 35838U, 22683U, 35824U, 14635U, 16080U, 14505U, 
    15950U, 18332U, 18647U, 18869U, 31843U, 19441U, 32402U, 8093U, 
    1663U, 3635U, 1585U, 3504U, 25311U, 38505U, 21873U, 35028U, 
    26283U, 39378U, 23690U, 36888U, 22237U, 41938U, 35353U, 42624U, 
    24044U, 42016U, 37219U, 42702U, 18952U, 31926U, 19572U, 32533U, 
    8205U, 9542U, 25356U, 38536U, 21936U, 35068U, 26339U, 39420U, 
    23753U, 36928U, 6138U, 5918U, 6250U, 6013U, 6150U, 5930U, 
    6262U, 6025U, 6162U, 5942U, 6274U, 6037U, 26591U, 39648U, 
    24386U, 37587U, 24955U, 38177U, 21297U, 34470U, 26604U, 39661U, 
    24398U, 37599U, 24968U, 38190U, 21309U, 34482U, 24770U, 37979U, 
    21082U, 34218U, 25049U, 38271U, 21503U, 34694U, 25809U, 38960U, 
    23067U, 36294U, 24835U, 38057U, 21160U, 34333U, 26703U, 39760U, 
    24547U, 37781U, 24869U, 38091U, 21191U, 34364U, 26737U, 39794U, 
    24578U, 37812U, 26581U, 39638U, 24377U, 37570U, 20922U, 34065U, 
    20822U, 33935U, 25671U, 38822U, 22872U, 36027U, 25114U, 38322U, 
    21625U, 34803U, 24791U, 38000U, 21101U, 34237U, 26617U, 39674U, 
    24418U, 37619U, 14540U, 15985U, 14409U, 15854U, 26822U, 39879U, 
    26947U, 40004U, 24942U, 38164U, 21285U, 34458U, 14648U, 16093U, 
    14517U, 15962U, 24904U, 38126U, 21242U, 34415U, 25520U, 38672U, 
    27864U, 40969U, 26931U, 39988U, 41003U, 40129U, 22370U, 35486U, 
    36111U, 34562U, 25998U, 39121U, 27881U, 40986U, 26994U, 40051U, 
    41021U, 40146U, 23339U, 36550U, 26772U, 39829U, 24619U, 37861U, 
    23151U, 36378U, 31425U, 13114U, 24215U, 12316U, 37389U, 13346U, 
    14661U, 41217U, 16106U, 41367U, 24812U, 38034U, 21129U, 34292U, 
    25444U, 38610U, 26891U, 39948U, 22047U, 35166U, 25960U, 39097U, 
    26970U, 40027U, 23285U, 36499U, 26680U, 39737U, 24516U, 37726U, 
    9285U, 8398U, 22714U, 35869U, 9251U, 8335U, 20890U, 34033U, 
    24892U, 38114U, 21222U, 34395U, 25508U, 38660U, 26919U, 39976U, 
    22350U, 35466U, 25986U, 39109U, 26982U, 40039U, 23319U, 36530U, 
    26760U, 39817U, 24599U, 37833U, 9299U, 8412U, 22727U, 35882U, 
    9268U, 8352U, 20906U, 34049U, 14695U, 41263U, 16140U, 41413U, 
    14683U, 41247U, 16128U, 41397U, 14706U, 41278U, 16151U, 41428U, 
    14094U, 15217U, 14132U, 15318U, 14183U, 15431U, 14112U, 15235U, 
    14162U, 15348U, 14201U, 15449U, 14276U, 15619U, 14258U, 15580U, 
    20836U, 33949U, 20863U, 33991U, 25104U, 38312U, 26835U, 39892U, 
    21378U, 34551U, 21643U, 34821U, 23481U, 36680U, 22932U, 36129U, 
    31056U, 13086U, 21655U, 12266U, 34833U, 13296U, 31316U, 13100U, 
    23493U, 12291U, 36692U, 13321U, 14297U, 15670U, 25285U, 38479U, 
    14141U, 15327U, 21849U, 35004U, 14331U, 15746U, 26257U, 39352U, 
    14211U, 15459U, 23666U, 36864U, 14310U, 15683U, 14368U, 15813U, 
    26869U, 39926U, 26293U, 39388U, 27034U, 40091U, 14321U, 15736U, 
    14379U, 15824U, 26960U, 40017U, 31019U, 34313U, 5064U, 31133U, 
    35187U, 31271U, 36520U, 31452U, 15600U, 25059U, 21512U, 25888U, 
    23164U, 25456U, 22058U, 25972U, 23296U, 21419U, 34610U, 22952U, 
    36163U, 24275U, 37449U, 23076U, 36303U, 25038U, 38260U, 21493U, 
    34684U, 6204U, 5984U, 6316U, 6079U, 21430U, 34621U, 22963U, 
    36174U, 24312U, 37497U, 23177U, 36391U, 22555U, 35658U, 23398U, 
    36596U, 22459U, 35562U, 23387U, 36585U, 26570U, 39627U, 24367U, 
    37552U, 6233U, 6345U, 24254U, 37428U, 23056U, 36283U, 24991U, 
    38213U, 21442U, 34633U, 6190U, 5970U, 6302U, 6065U, 22448U, 
    35551U, 26523U, 39580U, 24324U, 37509U, 21140U, 34303U, 22071U, 
    35177U, 23309U, 36510U, 14529U, 13509U, 15974U, 21525U, 34703U, 
    22601U, 35730U, 22830U, 35985U, 21536U, 34714U, 22613U, 35742U, 
    22842U, 35997U, 22530U, 35633U, 24676U, 37938U, 22507U, 35610U, 
    24665U, 37927U, 22542U, 35645U, 22518U, 35621U, 6174U, 5954U, 
    6286U, 6049U, 25605U, 38743U, 22470U, 35573U, 31530U, 25591U, 
    31161U, 22435U, 31569U, 26036U, 31303U, 23374U, 24881U, 38103U, 
    21212U, 34385U, 25497U, 38649U, 22308U, 35424U, 26749U, 39806U, 
    24589U, 37823U, 24931U, 38153U, 21275U, 34448U, 25547U, 38699U, 
    22395U, 35511U, 26811U, 39868U, 24655U, 37917U, 24846U, 38068U, 
    21170U, 34343U, 25470U, 38622U, 22246U, 35362U, 26714U, 39771U, 
    24557U, 37791U, 24920U, 38142U, 21257U, 34430U, 25536U, 38688U, 
    22385U, 35501U, 26800U, 39857U, 24645U, 37907U, 29299U, 38010U, 
    29257U, 34246U, 25012U, 38234U, 21461U, 34652U, 25729U, 38880U, 
    22984U, 36195U, 26544U, 39601U, 24343U, 37528U, 25914U, 39051U, 
    23200U, 36414U, 25645U, 38783U, 22567U, 35670U, 26050U, 39159U, 
    23410U, 36608U, 25025U, 38247U, 21473U, 34664U, 25742U, 38893U, 
    22996U, 36207U, 26557U, 39614U, 24355U, 37540U, 25927U, 39064U, 
    23212U, 36426U, 25658U, 38796U, 22579U, 35682U, 26063U, 39172U, 
    23422U, 36620U, 25847U, 38998U, 23113U, 36340U, 6218U, 5998U, 
    6330U, 6093U, 26788U, 39845U, 24634U, 37896U, 26627U, 39684U, 
    24427U, 37628U, 25083U, 38291U, 21594U, 34772U, 26648U, 39705U, 
    24475U, 37676U, 25902U, 39039U, 23189U, 36403U, 26076U, 39185U, 
    23443U, 36641U, 31233U, 22863U, 36018U, 14103U, 31029U, 15226U, 
    21233U, 34406U, 14153U, 31152U, 15339U, 22361U, 35477U, 14192U, 
    31294U, 15440U, 23330U, 36541U, 14267U, 31462U, 15610U, 24610U, 
    37852U, 26484U, 39541U, 24265U, 37439U, 31001U, 21064U, 34200U, 
    31038U, 21389U, 34580U, 31242U, 22943U, 36154U, 31434U, 24224U, 
    37398U, 31010U, 21110U, 34273U, 31047U, 21564U, 34742U, 31262U, 
    23234U, 36448U, 31443U, 24445U, 37646U, 24780U, 37989U, 21091U, 
    34227U, 14286U, 15639U, 14122U, 15266U, 14344U, 15769U, 14236U, 
    15505U, 14356U, 15781U, 14247U, 15516U, 24801U, 38023U, 21119U, 
    34282U, 25123U, 38331U, 21633U, 34811U, 26669U, 39726U, 24506U, 
    37716U, 15694U, 15369U, 15650U, 25073U, 38281U, 15276U, 21573U, 
    34751U, 15716U, 25940U, 39077U, 15389U, 23243U, 36457U, 25569U, 
    38721U, 22415U, 35531U, 26014U, 39137U, 23354U, 36565U, 15793U, 
    26638U, 39695U, 15527U, 24454U, 37655U, 15629U, 24981U, 38203U, 
    15245U, 21398U, 34589U, 25558U, 38710U, 22405U, 35521U, 15759U, 
    26474U, 39531U, 15471U, 24233U, 37407U, 15705U, 15379U, 15660U, 
    25094U, 38302U, 15297U, 21604U, 34782U, 15726U, 25950U, 39087U, 
    15410U, 23264U, 36478U, 25580U, 38732U, 22425U, 35541U, 26025U, 
    39148U, 23364U, 36575U, 15803U, 26659U, 39716U, 15548U, 24485U, 
    37686U, 24760U, 37969U, 21073U, 34209U, 25002U, 38224U, 21452U, 
    34643U, 25719U, 38870U, 22975U, 36186U, 24824U, 38046U, 21150U, 
    34323U, 26692U, 39749U, 24537U, 37771U, 24857U, 38079U, 21180U, 
    34353U, 26725U, 39782U, 24567U, 37801U, 26534U, 39591U, 24334U, 
    37519U, 26443U, 39510U, 24187U, 37370U, 26495U, 39552U, 24286U, 
    37460U, 25819U, 38970U, 23087U, 36314U, 25858U, 39009U, 23123U, 
    36350U, 25617U, 38755U, 22481U, 35584U, 26509U, 39566U, 24299U, 
    37484U, 25833U, 38984U, 23100U, 36327U, 25873U, 39024U, 23137U, 
    36364U, 25631U, 38769U, 22494U, 35597U, 26084U, 39193U, 23450U, 
    36648U, 18696U, 41752U, 29876U, 42306U, 18542U, 41687U, 29779U, 
    42242U, 18590U, 41713U, 29827U, 18341U, 29568U, 18532U, 29769U, 
    18371U, 29598U, 42216U, 18580U, 29817U, 42268U, 18360U, 29587U, 
    18569U, 29806U, 18705U, 41765U, 29885U, 42319U, 18550U, 41699U, 
    29787U, 42254U, 18598U, 41725U, 29835U, 14566U, 16011U, 14433U, 
    15878U, 14602U, 16047U, 14475U, 15920U, 18686U, 29866U, 18351U, 
    29578U, 18716U, 29896U, 18560U, 29797U, 18381U, 41674U, 29608U, 
    18608U, 41739U, 29845U, 9771U, 25195U, 38403U, 21746U, 34924U, 
    26167U, 39276U, 23563U, 36762U, 22143U, 41912U, 35259U, 42598U, 
    23950U, 41990U, 37125U, 42676U, 25375U, 38555U, 21974U, 35106U, 
    26358U, 39439U, 23803U, 36991U, 22185U, 35301U, 23992U, 37167U, 
    25272U, 38466U, 21827U, 34992U, 26244U, 39339U, 23644U, 36830U, 
    25298U, 38492U, 21861U, 35016U, 26270U, 39365U, 23678U, 36876U, 
    25365U, 38545U, 21944U, 35076U, 26348U, 39429U, 23761U, 36936U, 
    9212U, 9726U, 540U, 9826U, 7659U, 9971U, 8016U, 7669U, 
    1968U, 3957U, 8136U, 3463U, 8154U, 3485U, 9786U, 10034U, 
    11386U, 20481U, 33606U, 18880U, 31854U, 19452U, 32413U, 20979U, 
    34122U, 9535U, 5402U, 29924U, 20574U, 33699U, 29906U, 4985U, 
    18985U, 31959U, 29915U, 19605U, 32566U, 20997U, 34140U, 8275U, 
    7902U, 7848U, 9792U, 7734U, 7858U, 7953U, 10059U, 9937U, 
    5755U, 13913U, 6906U, 30795U, 15073U, 7246U, 20678U, 33819U, 
    10897U, 2080U, 13678U, 6644U, 30109U, 14855U, 7050U, 19136U, 
    32117U, 10365U, 2163U, 2270U, 6775U, 30292U, 2387U, 7148U, 
    19871U, 32848U, 10461U, 6539U, 14061U, 30958U, 15195U, 21012U, 
    34161U, 10987U, 21945U, 35077U, 23762U, 36937U, 11402U, 9755U, 
    3734U, 8186U, 3514U, 10010U, 3836U, 10066U, 777U, 5910U, 
    8120U, 10041U, 
};

static inline void InitX86MCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(X86Insts, X86InstrNameIndices, X86InstrNameData, 4658);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct X86GenInstrInfo : public TargetInstrInfo {
  explicit X86GenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc X86Insts[];
extern const unsigned X86InstrNameIndices[];
extern const char X86InstrNameData[];
X86GenInstrInfo::X86GenInstrInfo(int SO, int DO)
  : TargetInstrInfo(SO, DO) {
  InitMCInstrInfo(X86Insts, X86InstrNameIndices, X86InstrNameData, 4658);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {namespace X86 {
namespace OpName { 
enum {
OPERAND_LAST
};
} // End namespace OpName
} // End namespace X86
} // End namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM
#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {namespace X86 {
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // End namespace X86
} // End namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Enum Values                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Mips {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    ABSQ_S_PH	= 17,
    ABSQ_S_QB	= 18,
    ABSQ_S_W	= 19,
    ADD	= 20,
    ADDQH_PH	= 21,
    ADDQH_R_PH	= 22,
    ADDQH_R_W	= 23,
    ADDQH_W	= 24,
    ADDQ_PH	= 25,
    ADDQ_S_PH	= 26,
    ADDQ_S_W	= 27,
    ADDSC	= 28,
    ADDUH_QB	= 29,
    ADDUH_R_QB	= 30,
    ADDU_PH	= 31,
    ADDU_QB	= 32,
    ADDU_S_PH	= 33,
    ADDU_S_QB	= 34,
    ADDWC	= 35,
    ADD_MM	= 36,
    ADDi	= 37,
    ADDi_MM	= 38,
    ADDiu	= 39,
    ADDiu_MM	= 40,
    ADDu	= 41,
    ADDu_MM	= 42,
    ADJCALLSTACKDOWN	= 43,
    ADJCALLSTACKUP	= 44,
    AND	= 45,
    AND64	= 46,
    AND_MM	= 47,
    ANDi	= 48,
    ANDi64	= 49,
    ANDi_MM	= 50,
    APPEND	= 51,
    ATOMIC_CMP_SWAP_I16	= 52,
    ATOMIC_CMP_SWAP_I16_P8	= 53,
    ATOMIC_CMP_SWAP_I32	= 54,
    ATOMIC_CMP_SWAP_I32_P8	= 55,
    ATOMIC_CMP_SWAP_I64	= 56,
    ATOMIC_CMP_SWAP_I64_P8	= 57,
    ATOMIC_CMP_SWAP_I8	= 58,
    ATOMIC_CMP_SWAP_I8_P8	= 59,
    ATOMIC_LOAD_ADD_I16	= 60,
    ATOMIC_LOAD_ADD_I16_P8	= 61,
    ATOMIC_LOAD_ADD_I32	= 62,
    ATOMIC_LOAD_ADD_I32_P8	= 63,
    ATOMIC_LOAD_ADD_I64	= 64,
    ATOMIC_LOAD_ADD_I64_P8	= 65,
    ATOMIC_LOAD_ADD_I8	= 66,
    ATOMIC_LOAD_ADD_I8_P8	= 67,
    ATOMIC_LOAD_AND_I16	= 68,
    ATOMIC_LOAD_AND_I16_P8	= 69,
    ATOMIC_LOAD_AND_I32	= 70,
    ATOMIC_LOAD_AND_I32_P8	= 71,
    ATOMIC_LOAD_AND_I64	= 72,
    ATOMIC_LOAD_AND_I64_P8	= 73,
    ATOMIC_LOAD_AND_I8	= 74,
    ATOMIC_LOAD_AND_I8_P8	= 75,
    ATOMIC_LOAD_NAND_I16	= 76,
    ATOMIC_LOAD_NAND_I16_P8	= 77,
    ATOMIC_LOAD_NAND_I32	= 78,
    ATOMIC_LOAD_NAND_I32_P8	= 79,
    ATOMIC_LOAD_NAND_I64	= 80,
    ATOMIC_LOAD_NAND_I64_P8	= 81,
    ATOMIC_LOAD_NAND_I8	= 82,
    ATOMIC_LOAD_NAND_I8_P8	= 83,
    ATOMIC_LOAD_OR_I16	= 84,
    ATOMIC_LOAD_OR_I16_P8	= 85,
    ATOMIC_LOAD_OR_I32	= 86,
    ATOMIC_LOAD_OR_I32_P8	= 87,
    ATOMIC_LOAD_OR_I64	= 88,
    ATOMIC_LOAD_OR_I64_P8	= 89,
    ATOMIC_LOAD_OR_I8	= 90,
    ATOMIC_LOAD_OR_I8_P8	= 91,
    ATOMIC_LOAD_SUB_I16	= 92,
    ATOMIC_LOAD_SUB_I16_P8	= 93,
    ATOMIC_LOAD_SUB_I32	= 94,
    ATOMIC_LOAD_SUB_I32_P8	= 95,
    ATOMIC_LOAD_SUB_I64	= 96,
    ATOMIC_LOAD_SUB_I64_P8	= 97,
    ATOMIC_LOAD_SUB_I8	= 98,
    ATOMIC_LOAD_SUB_I8_P8	= 99,
    ATOMIC_LOAD_XOR_I16	= 100,
    ATOMIC_LOAD_XOR_I16_P8	= 101,
    ATOMIC_LOAD_XOR_I32	= 102,
    ATOMIC_LOAD_XOR_I32_P8	= 103,
    ATOMIC_LOAD_XOR_I64	= 104,
    ATOMIC_LOAD_XOR_I64_P8	= 105,
    ATOMIC_LOAD_XOR_I8	= 106,
    ATOMIC_LOAD_XOR_I8_P8	= 107,
    ATOMIC_SWAP_I16	= 108,
    ATOMIC_SWAP_I16_P8	= 109,
    ATOMIC_SWAP_I32	= 110,
    ATOMIC_SWAP_I32_P8	= 111,
    ATOMIC_SWAP_I64	= 112,
    ATOMIC_SWAP_I64_P8	= 113,
    ATOMIC_SWAP_I8	= 114,
    ATOMIC_SWAP_I8_P8	= 115,
    AddiuRxImmX16	= 116,
    AddiuRxPcImmX16	= 117,
    AddiuRxRxImm16	= 118,
    AddiuRxRxImmX16	= 119,
    AddiuRxRyOffMemX16	= 120,
    AddiuSpImm16	= 121,
    AddiuSpImmX16	= 122,
    AdduRxRyRz16	= 123,
    AndRxRxRy16	= 124,
    B	= 125,
    BALIGN	= 126,
    BAL_BR	= 127,
    BC1F	= 128,
    BC1T	= 129,
    BEQ	= 130,
    BEQ64	= 131,
    BGEZ	= 132,
    BGEZ64	= 133,
    BGEZAL	= 134,
    BGTZ	= 135,
    BGTZ64	= 136,
    BITREV	= 137,
    BLEZ	= 138,
    BLEZ64	= 139,
    BLTZ	= 140,
    BLTZ64	= 141,
    BLTZAL	= 142,
    BNE	= 143,
    BNE64	= 144,
    BPOSGE32	= 145,
    BPOSGE32_PSEUDO	= 146,
    BREAK	= 147,
    BeqzRxImm16	= 148,
    BeqzRxImmX16	= 149,
    BimmX16	= 150,
    BnezRxImm16	= 151,
    BnezRxImmX16	= 152,
    Break16	= 153,
    BteqzT8CmpX16	= 154,
    BteqzT8CmpiX16	= 155,
    BteqzT8SltX16	= 156,
    BteqzT8SltiX16	= 157,
    BteqzT8SltiuX16	= 158,
    BteqzT8SltuX16	= 159,
    BteqzX16	= 160,
    BtnezT8CmpX16	= 161,
    BtnezT8CmpiX16	= 162,
    BtnezT8SltX16	= 163,
    BtnezT8SltiX16	= 164,
    BtnezT8SltiuX16	= 165,
    BtnezT8SltuX16	= 166,
    BtnezX16	= 167,
    BuildPairF64	= 168,
    CEIL_L_D64	= 169,
    CEIL_L_S	= 170,
    CEIL_W_D32	= 171,
    CEIL_W_D64	= 172,
    CEIL_W_S	= 173,
    CFC1	= 174,
    CLO	= 175,
    CLZ	= 176,
    CMPGDU_EQ_QB	= 177,
    CMPGDU_LE_QB	= 178,
    CMPGDU_LT_QB	= 179,
    CMPGU_EQ_QB	= 180,
    CMPGU_LE_QB	= 181,
    CMPGU_LT_QB	= 182,
    CMPU_EQ_QB	= 183,
    CMPU_LE_QB	= 184,
    CMPU_LT_QB	= 185,
    CMP_EQ_PH	= 186,
    CMP_LE_PH	= 187,
    CMP_LT_PH	= 188,
    CTC1	= 189,
    CVT_D32_S	= 190,
    CVT_D32_W	= 191,
    CVT_D64_L	= 192,
    CVT_D64_S	= 193,
    CVT_D64_W	= 194,
    CVT_L_D64	= 195,
    CVT_L_S	= 196,
    CVT_S_D32	= 197,
    CVT_S_D64	= 198,
    CVT_S_L	= 199,
    CVT_S_W	= 200,
    CVT_W_D32	= 201,
    CVT_W_D64	= 202,
    CVT_W_S	= 203,
    C_EQ_D32	= 204,
    C_EQ_D64	= 205,
    C_EQ_S	= 206,
    C_F_D32	= 207,
    C_F_D64	= 208,
    C_F_S	= 209,
    C_LE_D32	= 210,
    C_LE_D64	= 211,
    C_LE_S	= 212,
    C_LT_D32	= 213,
    C_LT_D64	= 214,
    C_LT_S	= 215,
    C_NGE_D32	= 216,
    C_NGE_D64	= 217,
    C_NGE_S	= 218,
    C_NGLE_D32	= 219,
    C_NGLE_D64	= 220,
    C_NGLE_S	= 221,
    C_NGL_D32	= 222,
    C_NGL_D64	= 223,
    C_NGL_S	= 224,
    C_NGT_D32	= 225,
    C_NGT_D64	= 226,
    C_NGT_S	= 227,
    C_OLE_D32	= 228,
    C_OLE_D64	= 229,
    C_OLE_S	= 230,
    C_OLT_D32	= 231,
    C_OLT_D64	= 232,
    C_OLT_S	= 233,
    C_SEQ_D32	= 234,
    C_SEQ_D64	= 235,
    C_SEQ_S	= 236,
    C_SF_D32	= 237,
    C_SF_D64	= 238,
    C_SF_S	= 239,
    C_UEQ_D32	= 240,
    C_UEQ_D64	= 241,
    C_UEQ_S	= 242,
    C_ULE_D32	= 243,
    C_ULE_D64	= 244,
    C_ULE_S	= 245,
    C_ULT_D32	= 246,
    C_ULT_D64	= 247,
    C_ULT_S	= 248,
    C_UN_D32	= 249,
    C_UN_D64	= 250,
    C_UN_S	= 251,
    CmpRxRy16	= 252,
    CmpiRxImm16	= 253,
    CmpiRxImmX16	= 254,
    Constant32	= 255,
    DADD	= 256,
    DADDi	= 257,
    DADDiu	= 258,
    DADDu	= 259,
    DCLO	= 260,
    DCLZ	= 261,
    DERET	= 262,
    DEXT	= 263,
    DEXTM	= 264,
    DEXTU	= 265,
    DI	= 266,
    DINS	= 267,
    DINSM	= 268,
    DINSU	= 269,
    DMFC0_3OP64	= 270,
    DMFC1	= 271,
    DMFC2_3OP64	= 272,
    DMTC0_3OP64	= 273,
    DMTC1	= 274,
    DMTC2_3OP64	= 275,
    DMULT	= 276,
    DMULTu	= 277,
    DPAQX_SA_W_PH	= 278,
    DPAQX_S_W_PH	= 279,
    DPAQ_SA_L_W	= 280,
    DPAQ_S_W_PH	= 281,
    DPAU_H_QBL	= 282,
    DPAU_H_QBR	= 283,
    DPAX_W_PH	= 284,
    DPA_W_PH	= 285,
    DPSQX_SA_W_PH	= 286,
    DPSQX_S_W_PH	= 287,
    DPSQ_SA_L_W	= 288,
    DPSQ_S_W_PH	= 289,
    DPSU_H_QBL	= 290,
    DPSU_H_QBR	= 291,
    DPSX_W_PH	= 292,
    DPS_W_PH	= 293,
    DROTR	= 294,
    DROTRV	= 295,
    DSBH	= 296,
    DSDIV	= 297,
    DSHD	= 298,
    DSLL	= 299,
    DSLL32	= 300,
    DSLL64_32	= 301,
    DSLLV	= 302,
    DSRA	= 303,
    DSRA32	= 304,
    DSRAV	= 305,
    DSRL	= 306,
    DSRL32	= 307,
    DSRLV	= 308,
    DSUBu	= 309,
    DUDIV	= 310,
    DivRxRy16	= 311,
    DivuRxRy16	= 312,
    EI	= 313,
    ERET	= 314,
    EXT	= 315,
    EXTP	= 316,
    EXTPDP	= 317,
    EXTPDPV	= 318,
    EXTPV	= 319,
    EXTRV_RS_W	= 320,
    EXTRV_R_W	= 321,
    EXTRV_S_H	= 322,
    EXTRV_W	= 323,
    EXTR_RS_W	= 324,
    EXTR_R_W	= 325,
    EXTR_S_H	= 326,
    EXTR_W	= 327,
    ExtractElementF64	= 328,
    FABS_D32	= 329,
    FABS_D64	= 330,
    FABS_S	= 331,
    FADD_D32	= 332,
    FADD_D64	= 333,
    FADD_S	= 334,
    FCMP_D32	= 335,
    FCMP_D64	= 336,
    FCMP_S32	= 337,
    FDIV_D32	= 338,
    FDIV_D64	= 339,
    FDIV_S	= 340,
    FLOOR_L_D64	= 341,
    FLOOR_L_S	= 342,
    FLOOR_W_D32	= 343,
    FLOOR_W_D64	= 344,
    FLOOR_W_S	= 345,
    FMOV_D32	= 346,
    FMOV_D64	= 347,
    FMOV_S	= 348,
    FMUL_D32	= 349,
    FMUL_D64	= 350,
    FMUL_S	= 351,
    FNEG_D32	= 352,
    FNEG_D64	= 353,
    FNEG_S	= 354,
    FSQRT_D32	= 355,
    FSQRT_D64	= 356,
    FSQRT_S	= 357,
    FSUB_D32	= 358,
    FSUB_D64	= 359,
    FSUB_S	= 360,
    INS	= 361,
    INSV	= 362,
    J	= 363,
    JAL	= 364,
    JALR	= 365,
    JALR64	= 366,
    JALR64Pseudo	= 367,
    JALRPseudo	= 368,
    JR	= 369,
    JR64	= 370,
    Jal16	= 371,
    JrRa16	= 372,
    JrcRa16	= 373,
    JrcRx16	= 374,
    JumpLinkReg16	= 375,
    LB	= 376,
    LB64	= 377,
    LB64_P8	= 378,
    LBUX	= 379,
    LB_MM	= 380,
    LB_MM_P8	= 381,
    LB_P8	= 382,
    LBu	= 383,
    LBu64	= 384,
    LBu64_P8	= 385,
    LBu_MM	= 386,
    LBu_MM_P8	= 387,
    LBu_P8	= 388,
    LD	= 389,
    LDC1	= 390,
    LDC164	= 391,
    LDC164_P8	= 392,
    LDL	= 393,
    LDL_P8	= 394,
    LDR	= 395,
    LDR_P8	= 396,
    LDXC1	= 397,
    LDXC164	= 398,
    LDXC164_P8	= 399,
    LD_B	= 400,
    LD_D	= 401,
    LD_H	= 402,
    LD_P8	= 403,
    LD_W	= 404,
    LEA_ADDiu	= 405,
    LEA_ADDiu64	= 406,
    LH	= 407,
    LH64	= 408,
    LH64_P8	= 409,
    LHX	= 410,
    LH_MM	= 411,
    LH_MM_P8	= 412,
    LH_P8	= 413,
    LHu	= 414,
    LHu64	= 415,
    LHu64_P8	= 416,
    LHu_MM	= 417,
    LHu_MM_P8	= 418,
    LHu_P8	= 419,
    LL	= 420,
    LLD	= 421,
    LLD_P8	= 422,
    LL_P8	= 423,
    LOAD_ACC128	= 424,
    LOAD_ACC128_P8	= 425,
    LOAD_ACC64	= 426,
    LOAD_ACC64DSP	= 427,
    LOAD_ACC64DSP_P8	= 428,
    LOAD_ACC64_P8	= 429,
    LOAD_CCOND_DSP	= 430,
    LOAD_CCOND_DSP_P8	= 431,
    LUXC1	= 432,
    LUXC164	= 433,
    LUi	= 434,
    LUi64	= 435,
    LUi_MM	= 436,
    LW	= 437,
    LW64	= 438,
    LW64_P8	= 439,
    LWC1	= 440,
    LWC1_P8	= 441,
    LWL	= 442,
    LWL64	= 443,
    LWL64_P8	= 444,
    LWL_MM	= 445,
    LWL_P8	= 446,
    LWR	= 447,
    LWR64	= 448,
    LWR64_P8	= 449,
    LWR_MM	= 450,
    LWR_P8	= 451,
    LWX	= 452,
    LWXC1	= 453,
    LWXC1_P8	= 454,
    LW_MM	= 455,
    LW_MM_P8	= 456,
    LW_P8	= 457,
    LWu	= 458,
    LWu_P8	= 459,
    LbRxRyOffMemX16	= 460,
    LbuRxRyOffMemX16	= 461,
    LhRxRyOffMemX16	= 462,
    LhuRxRyOffMemX16	= 463,
    LiRxImm16	= 464,
    LiRxImmX16	= 465,
    LoadAddr32Imm	= 466,
    LoadAddr32Reg	= 467,
    LoadImm32Reg	= 468,
    LwConstant32	= 469,
    LwRxRyOffMemX16	= 470,
    LwRxSpImmX16	= 471,
    MADD	= 472,
    MADDU	= 473,
    MADDU_DSP	= 474,
    MADD_D32	= 475,
    MADD_D64	= 476,
    MADD_DSP	= 477,
    MADD_S	= 478,
    MAQ_SA_W_PHL	= 479,
    MAQ_SA_W_PHR	= 480,
    MAQ_S_W_PHL	= 481,
    MAQ_S_W_PHR	= 482,
    MFC0_3OP	= 483,
    MFC1	= 484,
    MFC2_3OP	= 485,
    MFHI	= 486,
    MFHI64	= 487,
    MFHI_DSP	= 488,
    MFLO	= 489,
    MFLO64	= 490,
    MFLO_DSP	= 491,
    MIPSeh_return32	= 492,
    MIPSeh_return64	= 493,
    MODSUB	= 494,
    MOVF_D32	= 495,
    MOVF_D64	= 496,
    MOVF_I	= 497,
    MOVF_I64	= 498,
    MOVF_S	= 499,
    MOVN_I64_D64	= 500,
    MOVN_I64_I	= 501,
    MOVN_I64_I64	= 502,
    MOVN_I64_S	= 503,
    MOVN_I_D32	= 504,
    MOVN_I_D64	= 505,
    MOVN_I_I	= 506,
    MOVN_I_I64	= 507,
    MOVN_I_S	= 508,
    MOVT_D32	= 509,
    MOVT_D64	= 510,
    MOVT_I	= 511,
    MOVT_I64	= 512,
    MOVT_S	= 513,
    MOVZ_I64_D64	= 514,
    MOVZ_I64_I	= 515,
    MOVZ_I64_I64	= 516,
    MOVZ_I64_S	= 517,
    MOVZ_I_D32	= 518,
    MOVZ_I_D64	= 519,
    MOVZ_I_I	= 520,
    MOVZ_I_I64	= 521,
    MOVZ_I_S	= 522,
    MSUB	= 523,
    MSUBU	= 524,
    MSUBU_DSP	= 525,
    MSUB_D32	= 526,
    MSUB_D64	= 527,
    MSUB_DSP	= 528,
    MSUB_S	= 529,
    MTC0_3OP	= 530,
    MTC1	= 531,
    MTC2_3OP	= 532,
    MTHI	= 533,
    MTHI64	= 534,
    MTHI_DSP	= 535,
    MTHLIP	= 536,
    MTLO	= 537,
    MTLO64	= 538,
    MTLO_DSP	= 539,
    MUL	= 540,
    MULEQ_S_W_PHL	= 541,
    MULEQ_S_W_PHR	= 542,
    MULEU_S_PH_QBL	= 543,
    MULEU_S_PH_QBR	= 544,
    MULQ_RS_PH	= 545,
    MULQ_RS_W	= 546,
    MULQ_S_PH	= 547,
    MULQ_S_W	= 548,
    MULSAQ_S_W_PH	= 549,
    MULSA_W_PH	= 550,
    MULT	= 551,
    MULTU_DSP	= 552,
    MULT_DSP	= 553,
    MULT_MM	= 554,
    MULTu	= 555,
    MULTu_MM	= 556,
    MUL_MM	= 557,
    MUL_PH	= 558,
    MUL_S_PH	= 559,
    Mfhi16	= 560,
    Mflo16	= 561,
    Move32R16	= 562,
    MoveR3216	= 563,
    MultRxRy16	= 564,
    MultRxRyRz16	= 565,
    MultuRxRy16	= 566,
    MultuRxRyRz16	= 567,
    NMADD_D32	= 568,
    NMADD_D64	= 569,
    NMADD_S	= 570,
    NMSUB_D32	= 571,
    NMSUB_D64	= 572,
    NMSUB_S	= 573,
    NOP	= 574,
    NOR	= 575,
    NOR64	= 576,
    NOR_MM	= 577,
    NegRxRy16	= 578,
    NotRxRy16	= 579,
    OR	= 580,
    OR64	= 581,
    OR_MM	= 582,
    ORi	= 583,
    ORi64	= 584,
    ORi_MM	= 585,
    OrRxRxRy16	= 586,
    PACKRL_PH	= 587,
    PICK_PH	= 588,
    PICK_QB	= 589,
    PRECEQU_PH_QBL	= 590,
    PRECEQU_PH_QBLA	= 591,
    PRECEQU_PH_QBR	= 592,
    PRECEQU_PH_QBRA	= 593,
    PRECEQ_W_PHL	= 594,
    PRECEQ_W_PHR	= 595,
    PRECEU_PH_QBL	= 596,
    PRECEU_PH_QBLA	= 597,
    PRECEU_PH_QBR	= 598,
    PRECEU_PH_QBRA	= 599,
    PRECRQU_S_QB_PH	= 600,
    PRECRQ_PH_W	= 601,
    PRECRQ_QB_PH	= 602,
    PRECRQ_RS_PH_W	= 603,
    PRECR_QB_PH	= 604,
    PRECR_SRA_PH_W	= 605,
    PRECR_SRA_R_PH_W	= 606,
    PREPEND	= 607,
    PseudoCMPU_EQ_QB	= 608,
    PseudoCMPU_LE_QB	= 609,
    PseudoCMPU_LT_QB	= 610,
    PseudoCMP_EQ_PH	= 611,
    PseudoCMP_LE_PH	= 612,
    PseudoCMP_LT_PH	= 613,
    PseudoCVT_D32_W	= 614,
    PseudoCVT_D64_L	= 615,
    PseudoCVT_D64_W	= 616,
    PseudoCVT_S_L	= 617,
    PseudoCVT_S_W	= 618,
    PseudoDMULT	= 619,
    PseudoDMULTu	= 620,
    PseudoDSDIV	= 621,
    PseudoDUDIV	= 622,
    PseudoLDC1	= 623,
    PseudoMADD	= 624,
    PseudoMADDU	= 625,
    PseudoMSUB	= 626,
    PseudoMSUBU	= 627,
    PseudoMULT	= 628,
    PseudoMULTu	= 629,
    PseudoPICK_PH	= 630,
    PseudoPICK_QB	= 631,
    PseudoSDC1	= 632,
    PseudoSDIV	= 633,
    PseudoUDIV	= 634,
    RADDU_W_QB	= 635,
    RDDSP	= 636,
    RDHWR	= 637,
    RDHWR64	= 638,
    REPLV_PH	= 639,
    REPLV_QB	= 640,
    REPL_PH	= 641,
    REPL_QB	= 642,
    RET	= 643,
    ROTR	= 644,
    ROTRV	= 645,
    ROTRV_MM	= 646,
    ROTR_MM	= 647,
    ROUND_L_D64	= 648,
    ROUND_L_S	= 649,
    ROUND_W_D32	= 650,
    ROUND_W_D64	= 651,
    ROUND_W_S	= 652,
    RestoreIncSpF16	= 653,
    RestoreRaF16	= 654,
    RetRA	= 655,
    RetRA16	= 656,
    SB	= 657,
    SB64	= 658,
    SB64_P8	= 659,
    SB_MM	= 660,
    SB_MM_P8	= 661,
    SB_P8	= 662,
    SC	= 663,
    SCD	= 664,
    SCD_P8	= 665,
    SC_P8	= 666,
    SD	= 667,
    SDC1	= 668,
    SDC164	= 669,
    SDC164_P8	= 670,
    SDIV	= 671,
    SDL	= 672,
    SDL_P8	= 673,
    SDR	= 674,
    SDR_P8	= 675,
    SDXC1	= 676,
    SDXC164	= 677,
    SDXC164_P8	= 678,
    SD_P8	= 679,
    SEB	= 680,
    SEB64	= 681,
    SEH	= 682,
    SEH64	= 683,
    SH	= 684,
    SH64	= 685,
    SH64_P8	= 686,
    SHILO	= 687,
    SHILOV	= 688,
    SHLLV_PH	= 689,
    SHLLV_QB	= 690,
    SHLLV_S_PH	= 691,
    SHLLV_S_W	= 692,
    SHLL_PH	= 693,
    SHLL_QB	= 694,
    SHLL_S_PH	= 695,
    SHLL_S_W	= 696,
    SHRAV_PH	= 697,
    SHRAV_QB	= 698,
    SHRAV_R_PH	= 699,
    SHRAV_R_QB	= 700,
    SHRAV_R_W	= 701,
    SHRA_PH	= 702,
    SHRA_QB	= 703,
    SHRA_R_PH	= 704,
    SHRA_R_QB	= 705,
    SHRA_R_W	= 706,
    SHRLV_PH	= 707,
    SHRLV_QB	= 708,
    SHRL_PH	= 709,
    SHRL_QB	= 710,
    SH_MM	= 711,
    SH_MM_P8	= 712,
    SH_P8	= 713,
    SLL	= 714,
    SLL64_32	= 715,
    SLL64_64	= 716,
    SLLV	= 717,
    SLLV_MM	= 718,
    SLL_MM	= 719,
    SLT	= 720,
    SLT64	= 721,
    SLT_MM	= 722,
    SLTi	= 723,
    SLTi64	= 724,
    SLTi_MM	= 725,
    SLTiu	= 726,
    SLTiu64	= 727,
    SLTiu_MM	= 728,
    SLTu	= 729,
    SLTu64	= 730,
    SLTu_MM	= 731,
    SRA	= 732,
    SRAV	= 733,
    SRAV_MM	= 734,
    SRA_MM	= 735,
    SRL	= 736,
    SRLV	= 737,
    SRLV_MM	= 738,
    SRL_MM	= 739,
    STORE_ACC128	= 740,
    STORE_ACC128_P8	= 741,
    STORE_ACC64	= 742,
    STORE_ACC64DSP	= 743,
    STORE_ACC64DSP_P8	= 744,
    STORE_ACC64_P8	= 745,
    STORE_CCOND_DSP	= 746,
    STORE_CCOND_DSP_P8	= 747,
    ST_B	= 748,
    ST_D	= 749,
    ST_H	= 750,
    ST_W	= 751,
    SUB	= 752,
    SUBQH_PH	= 753,
    SUBQH_R_PH	= 754,
    SUBQH_R_W	= 755,
    SUBQH_W	= 756,
    SUBQ_PH	= 757,
    SUBQ_S_PH	= 758,
    SUBQ_S_W	= 759,
    SUBUH_QB	= 760,
    SUBUH_R_QB	= 761,
    SUBU_PH	= 762,
    SUBU_QB	= 763,
    SUBU_S_PH	= 764,
    SUBU_S_QB	= 765,
    SUB_MM	= 766,
    SUBu	= 767,
    SUBu_MM	= 768,
    SUXC1	= 769,
    SUXC164	= 770,
    SW	= 771,
    SW64	= 772,
    SW64_P8	= 773,
    SWC1	= 774,
    SWC1_P8	= 775,
    SWL	= 776,
    SWL64	= 777,
    SWL64_P8	= 778,
    SWL_MM	= 779,
    SWL_P8	= 780,
    SWR	= 781,
    SWR64	= 782,
    SWR64_P8	= 783,
    SWR_MM	= 784,
    SWR_P8	= 785,
    SWXC1	= 786,
    SWXC1_P8	= 787,
    SW_MM	= 788,
    SW_MM_P8	= 789,
    SW_P8	= 790,
    SYNC	= 791,
    SYSCALL	= 792,
    SaveDecSpF16	= 793,
    SaveRaF16	= 794,
    SbRxRyOffMemX16	= 795,
    SelBeqZ	= 796,
    SelBneZ	= 797,
    SelTBteqZCmp	= 798,
    SelTBteqZCmpi	= 799,
    SelTBteqZSlt	= 800,
    SelTBteqZSlti	= 801,
    SelTBteqZSltiu	= 802,
    SelTBteqZSltu	= 803,
    SelTBtneZCmp	= 804,
    SelTBtneZCmpi	= 805,
    SelTBtneZSlt	= 806,
    SelTBtneZSlti	= 807,
    SelTBtneZSltiu	= 808,
    SelTBtneZSltu	= 809,
    ShRxRyOffMemX16	= 810,
    SllX16	= 811,
    SllvRxRy16	= 812,
    SltCCRxRy16	= 813,
    SltRxRy16	= 814,
    SltiCCRxImmX16	= 815,
    SltiRxImm16	= 816,
    SltiRxImmX16	= 817,
    SltiuCCRxImmX16	= 818,
    SltiuRxImm16	= 819,
    SltiuRxImmX16	= 820,
    SltuCCRxRy16	= 821,
    SltuRxRy16	= 822,
    SltuRxRyRz16	= 823,
    SraX16	= 824,
    SravRxRy16	= 825,
    SrlX16	= 826,
    SrlvRxRy16	= 827,
    SubuRxRyRz16	= 828,
    SwRxRyOffMemX16	= 829,
    SwRxSpImmX16	= 830,
    TAILCALL	= 831,
    TAILCALL64_R	= 832,
    TAILCALL_R	= 833,
    TEQ	= 834,
    TRAP	= 835,
    TRUNC_L_D64	= 836,
    TRUNC_L_S	= 837,
    TRUNC_W_D32	= 838,
    TRUNC_W_D64	= 839,
    TRUNC_W_S	= 840,
    UDIV	= 841,
    WRDSP	= 842,
    WSBH	= 843,
    XOR	= 844,
    XOR64	= 845,
    XOR_MM	= 846,
    XORi	= 847,
    XORi64	= 848,
    XORi_MM	= 849,
    XorRxRxRy16	= 850,
    INSTRUCTION_LIST_END = 851
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Descriptors                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { Mips::DSPOutFlag20, 0 };
static const uint16_t ImplicitList2[] = { Mips::DSPCarry, 0 };
static const uint16_t ImplicitList3[] = { Mips::SP, 0 };
static const uint16_t ImplicitList4[] = { Mips::AT, 0 };
static const uint16_t ImplicitList5[] = { Mips::RA, 0 };
static const uint16_t ImplicitList6[] = { Mips::DSPPos, 0 };
static const uint16_t ImplicitList7[] = { Mips::T8, 0 };
static const uint16_t ImplicitList8[] = { Mips::DSPCCond, 0 };
static const uint16_t ImplicitList9[] = { Mips::HI0_64, Mips::LO0_64, 0 };
static const uint16_t ImplicitList10[] = { Mips::DSPOutFlag16_19, 0 };
static const uint16_t ImplicitList11[] = { Mips::HI0, Mips::LO0, 0 };
static const uint16_t ImplicitList12[] = { Mips::DSPEFI, 0 };
static const uint16_t ImplicitList13[] = { Mips::DSPPos, Mips::DSPEFI, 0 };
static const uint16_t ImplicitList14[] = { Mips::DSPOutFlag23, 0 };
static const uint16_t ImplicitList15[] = { Mips::FCC0, 0 };
static const uint16_t ImplicitList16[] = { Mips::DSPPos, Mips::DSPSCount, 0 };
static const uint16_t ImplicitList17[] = { Mips::HI0, 0 };
static const uint16_t ImplicitList18[] = { Mips::HI0_64, 0 };
static const uint16_t ImplicitList19[] = { Mips::LO0, 0 };
static const uint16_t ImplicitList20[] = { Mips::LO0_64, 0 };
static const uint16_t ImplicitList21[] = { Mips::V0, Mips::V1, 0 };
static const uint16_t ImplicitList22[] = { Mips::DSPOutFlag21, 0 };
static const uint16_t ImplicitList23[] = { Mips::DSPOutFlag22, 0 };
static const uint16_t ImplicitList24[] = { Mips::S0, Mips::S1, Mips::S2, Mips::RA, Mips::SP, 0 };
static const uint16_t ImplicitList25[] = { Mips::RA, Mips::SP, Mips::S0, Mips::S1, Mips::S2, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo17[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsPlusSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::CCRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { Mips::CCRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo55[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo59[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo72[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo83[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo84[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { Mips::MSA128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo100[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo101[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::CPU16RegsPlusSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPUSPRegRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::HI32DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::LO32DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo114[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo115[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo116[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo117[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo118[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo119[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo120[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo121[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo122[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo123[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo124[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo125[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo126[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo127[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { Mips::HI32DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo131[] = { { Mips::LO32DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo138[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo143[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo154[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };

extern const MCInstrDesc MipsInsts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #16 = LIFETIME_END
  { 17,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #17 = ABSQ_S_PH
  { 18,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #18 = ABSQ_S_QB
  { 19,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #19 = ABSQ_S_W
  { 20,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #20 = ADD
  { 21,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #21 = ADDQH_PH
  { 22,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #22 = ADDQH_R_PH
  { 23,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #23 = ADDQH_R_W
  { 24,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #24 = ADDQH_W
  { 25,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #25 = ADDQ_PH
  { 26,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #26 = ADDQ_S_PH
  { 27,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #27 = ADDQ_S_W
  { 28,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList2, OperandInfo10 },  // Inst #28 = ADDSC
  { 29,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #29 = ADDUH_QB
  { 30,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #30 = ADDUH_R_QB
  { 31,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #31 = ADDU_PH
  { 32,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #32 = ADDU_QB
  { 33,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #33 = ADDU_S_PH
  { 34,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #34 = ADDU_S_QB
  { 35,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, ImplicitList1, OperandInfo10 },  // Inst #35 = ADDWC
  { 36,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #36 = ADD_MM
  { 37,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #37 = ADDi
  { 38,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #38 = ADDi_MM
  { 39,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #39 = ADDiu
  { 40,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #40 = ADDiu_MM
  { 41,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #41 = ADDu
  { 42,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #42 = ADDu_MM
  { 43,	1,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo2 },  // Inst #43 = ADJCALLSTACKDOWN
  { 44,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo13 },  // Inst #44 = ADJCALLSTACKUP
  { 45,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #45 = AND
  { 46,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo14 },  // Inst #46 = AND64
  { 47,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #47 = AND_MM
  { 48,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #48 = ANDi
  { 49,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo15 },  // Inst #49 = ANDi64
  { 50,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #50 = ANDi_MM
  { 51,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16 },  // Inst #51 = APPEND
  { 52,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #52 = ATOMIC_CMP_SWAP_I16
  { 53,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #53 = ATOMIC_CMP_SWAP_I16_P8
  { 54,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #54 = ATOMIC_CMP_SWAP_I32
  { 55,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #55 = ATOMIC_CMP_SWAP_I32_P8
  { 56,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #56 = ATOMIC_CMP_SWAP_I64
  { 57,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #57 = ATOMIC_CMP_SWAP_I64_P8
  { 58,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #58 = ATOMIC_CMP_SWAP_I8
  { 59,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #59 = ATOMIC_CMP_SWAP_I8_P8
  { 60,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #60 = ATOMIC_LOAD_ADD_I16
  { 61,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #61 = ATOMIC_LOAD_ADD_I16_P8
  { 62,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #62 = ATOMIC_LOAD_ADD_I32
  { 63,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #63 = ATOMIC_LOAD_ADD_I32_P8
  { 64,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #64 = ATOMIC_LOAD_ADD_I64
  { 65,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #65 = ATOMIC_LOAD_ADD_I64_P8
  { 66,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #66 = ATOMIC_LOAD_ADD_I8
  { 67,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #67 = ATOMIC_LOAD_ADD_I8_P8
  { 68,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #68 = ATOMIC_LOAD_AND_I16
  { 69,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #69 = ATOMIC_LOAD_AND_I16_P8
  { 70,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #70 = ATOMIC_LOAD_AND_I32
  { 71,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #71 = ATOMIC_LOAD_AND_I32_P8
  { 72,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #72 = ATOMIC_LOAD_AND_I64
  { 73,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #73 = ATOMIC_LOAD_AND_I64_P8
  { 74,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #74 = ATOMIC_LOAD_AND_I8
  { 75,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #75 = ATOMIC_LOAD_AND_I8_P8
  { 76,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #76 = ATOMIC_LOAD_NAND_I16
  { 77,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #77 = ATOMIC_LOAD_NAND_I16_P8
  { 78,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #78 = ATOMIC_LOAD_NAND_I32
  { 79,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #79 = ATOMIC_LOAD_NAND_I32_P8
  { 80,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #80 = ATOMIC_LOAD_NAND_I64
  { 81,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #81 = ATOMIC_LOAD_NAND_I64_P8
  { 82,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #82 = ATOMIC_LOAD_NAND_I8
  { 83,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #83 = ATOMIC_LOAD_NAND_I8_P8
  { 84,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #84 = ATOMIC_LOAD_OR_I16
  { 85,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #85 = ATOMIC_LOAD_OR_I16_P8
  { 86,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #86 = ATOMIC_LOAD_OR_I32
  { 87,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #87 = ATOMIC_LOAD_OR_I32_P8
  { 88,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #88 = ATOMIC_LOAD_OR_I64
  { 89,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #89 = ATOMIC_LOAD_OR_I64_P8
  { 90,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #90 = ATOMIC_LOAD_OR_I8
  { 91,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #91 = ATOMIC_LOAD_OR_I8_P8
  { 92,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #92 = ATOMIC_LOAD_SUB_I16
  { 93,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #93 = ATOMIC_LOAD_SUB_I16_P8
  { 94,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #94 = ATOMIC_LOAD_SUB_I32
  { 95,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #95 = ATOMIC_LOAD_SUB_I32_P8
  { 96,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #96 = ATOMIC_LOAD_SUB_I64
  { 97,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #97 = ATOMIC_LOAD_SUB_I64_P8
  { 98,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #98 = ATOMIC_LOAD_SUB_I8
  { 99,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #99 = ATOMIC_LOAD_SUB_I8_P8
  { 100,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #100 = ATOMIC_LOAD_XOR_I16
  { 101,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #101 = ATOMIC_LOAD_XOR_I16_P8
  { 102,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #102 = ATOMIC_LOAD_XOR_I32
  { 103,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #103 = ATOMIC_LOAD_XOR_I32_P8
  { 104,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #104 = ATOMIC_LOAD_XOR_I64
  { 105,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #105 = ATOMIC_LOAD_XOR_I64_P8
  { 106,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #106 = ATOMIC_LOAD_XOR_I8
  { 107,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #107 = ATOMIC_LOAD_XOR_I8_P8
  { 108,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #108 = ATOMIC_SWAP_I16
  { 109,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #109 = ATOMIC_SWAP_I16_P8
  { 110,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #110 = ATOMIC_SWAP_I32
  { 111,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #111 = ATOMIC_SWAP_I32_P8
  { 112,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #112 = ATOMIC_SWAP_I64
  { 113,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #113 = ATOMIC_SWAP_I64_P8
  { 114,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #114 = ATOMIC_SWAP_I8
  { 115,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #115 = ATOMIC_SWAP_I8_P8
  { 116,	2,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #116 = AddiuRxImmX16
  { 117,	2,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #117 = AddiuRxPcImmX16
  { 118,	3,	1,	4,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo26 },  // Inst #118 = AddiuRxRxImm16
  { 119,	3,	1,	4,	4,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo26 },  // Inst #119 = AddiuRxRxImmX16
  { 120,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo27 },  // Inst #120 = AddiuRxRyOffMemX16
  { 121,	1,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5 },  // Inst #121 = AddiuSpImm16
  { 122,	1,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5 },  // Inst #122 = AddiuSpImmX16
  { 123,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #123 = AdduRxRyRz16
  { 124,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #124 = AndRxRxRy16
  { 125,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo30 },  // Inst #125 = B
  { 126,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16 },  // Inst #126 = BALIGN
  { 127,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList5, OperandInfo30 },  // Inst #127 = BAL_BR
  { 128,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x5ULL, NULL, ImplicitList4, OperandInfo31 },  // Inst #128 = BC1F
  { 129,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x5ULL, NULL, ImplicitList4, OperandInfo31 },  // Inst #129 = BC1T
  { 130,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo32 },  // Inst #130 = BEQ
  { 131,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo33 },  // Inst #131 = BEQ64
  { 132,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #132 = BGEZ
  { 133,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo35 },  // Inst #133 = BGEZ64
  { 134,	2,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList5, OperandInfo34 },  // Inst #134 = BGEZAL
  { 135,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #135 = BGTZ
  { 136,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo35 },  // Inst #136 = BGTZ64
  { 137,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo9 },  // Inst #137 = BITREV
  { 138,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #138 = BLEZ
  { 139,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo35 },  // Inst #139 = BLEZ64
  { 140,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #140 = BLTZ
  { 141,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo35 },  // Inst #141 = BLTZ64
  { 142,	2,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList5, OperandInfo34 },  // Inst #142 = BLTZAL
  { 143,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo32 },  // Inst #143 = BNE
  { 144,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo33 },  // Inst #144 = BNE64
  { 145,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo30 },  // Inst #145 = BPOSGE32
  { 146,	1,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList6, NULL, OperandInfo36 },  // Inst #146 = BPOSGE32_PSEUDO
  { 147,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo7 },  // Inst #147 = BREAK
  { 148,	2,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #148 = BeqzRxImm16
  { 149,	2,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #149 = BeqzRxImmX16
  { 150,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #150 = BimmX16
  { 151,	2,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #151 = BnezRxImm16
  { 152,	2,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #152 = BnezRxImmX16
  { 153,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #153 = Break16
  { 154,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #154 = BteqzT8CmpX16
  { 155,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #155 = BteqzT8CmpiX16
  { 156,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #156 = BteqzT8SltX16
  { 157,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #157 = BteqzT8SltiX16
  { 158,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #158 = BteqzT8SltiuX16
  { 159,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #159 = BteqzT8SltuX16
  { 160,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo5 },  // Inst #160 = BteqzX16
  { 161,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #161 = BtnezT8CmpX16
  { 162,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #162 = BtnezT8CmpiX16
  { 163,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #163 = BtnezT8SltX16
  { 164,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #164 = BtnezT8SltiX16
  { 165,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #165 = BtnezT8SltiuX16
  { 166,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #166 = BtnezT8SltuX16
  { 167,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo5 },  // Inst #167 = BtnezX16
  { 168,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #168 = BuildPairF64
  { 169,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #169 = CEIL_L_D64
  { 170,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #170 = CEIL_L_S
  { 171,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #171 = CEIL_W_D32
  { 172,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #172 = CEIL_W_D64
  { 173,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #173 = CEIL_W_S
  { 174,	2,	1,	7,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo46 },  // Inst #174 = CFC1
  { 175,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #175 = CLO
  { 176,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #176 = CLZ
  { 177,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo47 },  // Inst #177 = CMPGDU_EQ_QB
  { 178,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo47 },  // Inst #178 = CMPGDU_LE_QB
  { 179,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo47 },  // Inst #179 = CMPGDU_LT_QB
  { 180,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo47 },  // Inst #180 = CMPGU_EQ_QB
  { 181,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo47 },  // Inst #181 = CMPGU_LE_QB
  { 182,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo47 },  // Inst #182 = CMPGU_LT_QB
  { 183,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #183 = CMPU_EQ_QB
  { 184,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #184 = CMPU_LE_QB
  { 185,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #185 = CMPU_LT_QB
  { 186,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #186 = CMP_EQ_PH
  { 187,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #187 = CMP_LE_PH
  { 188,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #188 = CMP_LT_PH
  { 189,	2,	1,	7,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo48 },  // Inst #189 = CTC1
  { 190,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo49 },  // Inst #190 = CVT_D32_S
  { 191,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo49 },  // Inst #191 = CVT_D32_W
  { 192,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #192 = CVT_D64_L
  { 193,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #193 = CVT_D64_S
  { 194,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #194 = CVT_D64_W
  { 195,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #195 = CVT_L_D64
  { 196,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #196 = CVT_L_S
  { 197,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #197 = CVT_S_D32
  { 198,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #198 = CVT_S_D64
  { 199,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #199 = CVT_S_L
  { 200,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #200 = CVT_S_W
  { 201,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #201 = CVT_W_D32
  { 202,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #202 = CVT_W_D64
  { 203,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #203 = CVT_W_S
  { 204,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #204 = C_EQ_D32
  { 205,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #205 = C_EQ_D64
  { 206,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #206 = C_EQ_S
  { 207,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #207 = C_F_D32
  { 208,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #208 = C_F_D64
  { 209,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #209 = C_F_S
  { 210,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #210 = C_LE_D32
  { 211,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #211 = C_LE_D64
  { 212,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #212 = C_LE_S
  { 213,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #213 = C_LT_D32
  { 214,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #214 = C_LT_D64
  { 215,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #215 = C_LT_S
  { 216,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #216 = C_NGE_D32
  { 217,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #217 = C_NGE_D64
  { 218,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #218 = C_NGE_S
  { 219,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #219 = C_NGLE_D32
  { 220,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #220 = C_NGLE_D64
  { 221,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #221 = C_NGLE_S
  { 222,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #222 = C_NGL_D32
  { 223,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #223 = C_NGL_D64
  { 224,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #224 = C_NGL_S
  { 225,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #225 = C_NGT_D32
  { 226,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #226 = C_NGT_D64
  { 227,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #227 = C_NGT_S
  { 228,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #228 = C_OLE_D32
  { 229,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #229 = C_OLE_D64
  { 230,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #230 = C_OLE_S
  { 231,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #231 = C_OLT_D32
  { 232,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #232 = C_OLT_D64
  { 233,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #233 = C_OLT_S
  { 234,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #234 = C_SEQ_D32
  { 235,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #235 = C_SEQ_D64
  { 236,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #236 = C_SEQ_S
  { 237,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #237 = C_SF_D32
  { 238,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #238 = C_SF_D64
  { 239,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #239 = C_SF_S
  { 240,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #240 = C_UEQ_D32
  { 241,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #241 = C_UEQ_D64
  { 242,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #242 = C_UEQ_S
  { 243,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #243 = C_ULE_D32
  { 244,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #244 = C_ULE_D64
  { 245,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #245 = C_ULE_S
  { 246,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #246 = C_ULT_D32
  { 247,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #247 = C_ULT_D64
  { 248,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #248 = C_ULT_S
  { 249,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #249 = C_UN_D32
  { 250,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #250 = C_UN_D64
  { 251,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #251 = C_UN_S
  { 252,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo51 },  // Inst #252 = CmpRxRy16
  { 253,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #253 = CmpiRxImm16
  { 254,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #254 = CmpiRxImmX16
  { 255,	1,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #255 = Constant32
  { 256,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo14 },  // Inst #256 = DADD
  { 257,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo15 },  // Inst #257 = DADDi
  { 258,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo15 },  // Inst #258 = DADDiu
  { 259,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo14 },  // Inst #259 = DADDu
  { 260,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo52 },  // Inst #260 = DCLO
  { 261,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo52 },  // Inst #261 = DCLZ
  { 262,	0,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0 },  // Inst #262 = DERET
  { 263,	4,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #263 = DEXT
  { 264,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #264 = DEXTM
  { 265,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #265 = DEXTU
  { 266,	1,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo36 },  // Inst #266 = DI
  { 267,	5,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo54 },  // Inst #267 = DINS
  { 268,	5,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo54 },  // Inst #268 = DINSM
  { 269,	5,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo54 },  // Inst #269 = DINSU
  { 270,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo15 },  // Inst #270 = DMFC0_3OP64
  { 271,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo55 },  // Inst #271 = DMFC1
  { 272,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo15 },  // Inst #272 = DMFC2_3OP64
  { 273,	3,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo56 },  // Inst #273 = DMTC0_3OP64
  { 274,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo57 },  // Inst #274 = DMTC1
  { 275,	3,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo56 },  // Inst #275 = DMTC2_3OP64
  { 276,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList9, OperandInfo52 },  // Inst #276 = DMULT
  { 277,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList9, OperandInfo52 },  // Inst #277 = DMULTu
  { 278,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #278 = DPAQX_SA_W_PH
  { 279,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #279 = DPAQX_S_W_PH
  { 280,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #280 = DPAQ_SA_L_W
  { 281,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #281 = DPAQ_S_W_PH
  { 282,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #282 = DPAU_H_QBL
  { 283,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #283 = DPAU_H_QBR
  { 284,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #284 = DPAX_W_PH
  { 285,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #285 = DPA_W_PH
  { 286,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #286 = DPSQX_SA_W_PH
  { 287,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #287 = DPSQX_S_W_PH
  { 288,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #288 = DPSQ_SA_L_W
  { 289,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #289 = DPSQ_S_W_PH
  { 290,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #290 = DPSU_H_QBL
  { 291,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #291 = DPSU_H_QBR
  { 292,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #292 = DPSX_W_PH
  { 293,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #293 = DPS_W_PH
  { 294,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #294 = DROTR
  { 295,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo59 },  // Inst #295 = DROTRV
  { 296,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo52 },  // Inst #296 = DSBH
  { 297,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList9, OperandInfo52 },  // Inst #297 = DSDIV
  { 298,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo52 },  // Inst #298 = DSHD
  { 299,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #299 = DSLL
  { 300,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #300 = DSLL32
  { 301,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo60 },  // Inst #301 = DSLL64_32
  { 302,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo59 },  // Inst #302 = DSLLV
  { 303,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #303 = DSRA
  { 304,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #304 = DSRA32
  { 305,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo59 },  // Inst #305 = DSRAV
  { 306,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #306 = DSRL
  { 307,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #307 = DSRL32
  { 308,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo59 },  // Inst #308 = DSRLV
  { 309,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo14 },  // Inst #309 = DSUBu
  { 310,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList9, OperandInfo52 },  // Inst #310 = DUDIV
  { 311,	2,	0,	4,	2,	0, 0x0ULL, NULL, ImplicitList11, OperandInfo51 },  // Inst #311 = DivRxRy16
  { 312,	2,	0,	4,	2,	0, 0x0ULL, NULL, ImplicitList11, OperandInfo51 },  // Inst #312 = DivuRxRy16
  { 313,	1,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo36 },  // Inst #313 = EI
  { 314,	0,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0 },  // Inst #314 = ERET
  { 315,	4,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo61 },  // Inst #315 = EXT
  { 316,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList12, OperandInfo62 },  // Inst #316 = EXTP
  { 317,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList13, OperandInfo62 },  // Inst #317 = EXTPDP
  { 318,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList13, OperandInfo63 },  // Inst #318 = EXTPDPV
  { 319,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList12, OperandInfo63 },  // Inst #319 = EXTPV
  { 320,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo63 },  // Inst #320 = EXTRV_RS_W
  { 321,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo63 },  // Inst #321 = EXTRV_R_W
  { 322,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo63 },  // Inst #322 = EXTRV_S_H
  { 323,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo63 },  // Inst #323 = EXTRV_W
  { 324,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo62 },  // Inst #324 = EXTR_RS_W
  { 325,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo62 },  // Inst #325 = EXTR_R_W
  { 326,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo62 },  // Inst #326 = EXTR_S_H
  { 327,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo62 },  // Inst #327 = EXTR_W
  { 328,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo64 },  // Inst #328 = ExtractElementF64
  { 329,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #329 = FABS_D32
  { 330,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #330 = FABS_D64
  { 331,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #331 = FABS_S
  { 332,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo65 },  // Inst #332 = FADD_D32
  { 333,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo66 },  // Inst #333 = FADD_D64
  { 334,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo67 },  // Inst #334 = FADD_S
  { 335,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo68 },  // Inst #335 = FCMP_D32
  { 336,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo69 },  // Inst #336 = FCMP_D64
  { 337,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo70 },  // Inst #337 = FCMP_S32
  { 338,	3,	1,	13,	4,	0, 0x4ULL, NULL, NULL, OperandInfo65 },  // Inst #338 = FDIV_D32
  { 339,	3,	1,	13,	4,	0, 0x4ULL, NULL, NULL, OperandInfo66 },  // Inst #339 = FDIV_D64
  { 340,	3,	1,	14,	4,	0, 0x4ULL, NULL, NULL, OperandInfo67 },  // Inst #340 = FDIV_S
  { 341,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #341 = FLOOR_L_D64
  { 342,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #342 = FLOOR_L_S
  { 343,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #343 = FLOOR_W_D32
  { 344,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #344 = FLOOR_W_D64
  { 345,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #345 = FLOOR_W_S
  { 346,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #346 = FMOV_D32
  { 347,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #347 = FMOV_D64
  { 348,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #348 = FMOV_S
  { 349,	3,	1,	15,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo65 },  // Inst #349 = FMUL_D32
  { 350,	3,	1,	15,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo66 },  // Inst #350 = FMUL_D64
  { 351,	3,	1,	16,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo67 },  // Inst #351 = FMUL_S
  { 352,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #352 = FNEG_D32
  { 353,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #353 = FNEG_D64
  { 354,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #354 = FNEG_S
  { 355,	2,	1,	17,	4,	0, 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #355 = FSQRT_D32
  { 356,	2,	1,	17,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #356 = FSQRT_D64
  { 357,	2,	1,	18,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #357 = FSQRT_S
  { 358,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo65 },  // Inst #358 = FSUB_D32
  { 359,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo66 },  // Inst #359 = FSUB_D64
  { 360,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo67 },  // Inst #360 = FSUB_S
  { 361,	5,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo71 },  // Inst #361 = INS
  { 362,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList16, NULL, OperandInfo72 },  // Inst #362 = INSV
  { 363,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x3ULL, NULL, ImplicitList4, OperandInfo5 },  // Inst #363 = J
  { 364,	1,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x3ULL, NULL, ImplicitList5, OperandInfo5 },  // Inst #364 = JAL
  { 365,	2,	1,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList5, OperandInfo9 },  // Inst #365 = JALR
  { 366,	2,	1,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList5, OperandInfo52 },  // Inst #366 = JALR64
  { 367,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x0ULL, NULL, ImplicitList5, OperandInfo73 },  // Inst #367 = JALR64Pseudo
  { 368,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x0ULL, NULL, ImplicitList5, OperandInfo36 },  // Inst #368 = JALRPseudo
  { 369,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo36 },  // Inst #369 = JR
  { 370,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo73 },  // Inst #370 = JR64
  { 371,	1,	0,	4,	4,	0|(1<<MCID::Call), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #371 = Jal16
  { 372,	0,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #372 = JrRa16
  { 373,	0,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #373 = JrcRa16
  { 374,	1,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo74 },  // Inst #374 = JrcRx16
  { 375,	1,	0,	5,	2,	0|(1<<MCID::Call), 0x0ULL, NULL, NULL, OperandInfo74 },  // Inst #375 = JumpLinkReg16
  { 376,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #376 = LB
  { 377,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #377 = LB64
  { 378,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #378 = LB64_P8
  { 379,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #379 = LBUX
  { 380,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #380 = LB_MM
  { 381,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #381 = LB_MM_P8
  { 382,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #382 = LB_P8
  { 383,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #383 = LBu
  { 384,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #384 = LBu64
  { 385,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #385 = LBu64_P8
  { 386,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #386 = LBu_MM
  { 387,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #387 = LBu_MM_P8
  { 388,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #388 = LBu_P8
  { 389,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #389 = LD
  { 390,	3,	1,	19,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo79 },  // Inst #390 = LDC1
  { 391,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo80 },  // Inst #391 = LDC164
  { 392,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo81 },  // Inst #392 = LDC164_P8
  { 393,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo82 },  // Inst #393 = LDL
  { 394,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo83 },  // Inst #394 = LDL_P8
  { 395,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo82 },  // Inst #395 = LDR
  { 396,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo83 },  // Inst #396 = LDR_P8
  { 397,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #397 = LDXC1
  { 398,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo84 },  // Inst #398 = LDXC164
  { 399,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo85 },  // Inst #399 = LDXC164_P8
  { 400,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo86 },  // Inst #400 = LD_B
  { 401,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo86 },  // Inst #401 = LD_D
  { 402,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo86 },  // Inst #402 = LD_H
  { 403,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #403 = LD_P8
  { 404,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo86 },  // Inst #404 = LD_W
  { 405,	3,	1,	0,	4,	0, 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #405 = LEA_ADDiu
  { 406,	3,	1,	0,	4,	0, 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #406 = LEA_ADDiu64
  { 407,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #407 = LH
  { 408,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #408 = LH64
  { 409,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #409 = LH64_P8
  { 410,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #410 = LHX
  { 411,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #411 = LH_MM
  { 412,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #412 = LH_MM_P8
  { 413,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #413 = LH_P8
  { 414,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #414 = LHu
  { 415,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #415 = LHu64
  { 416,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #416 = LHu64_P8
  { 417,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #417 = LHu_MM
  { 418,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #418 = LHu_MM_P8
  { 419,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #419 = LHu_P8
  { 420,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #420 = LL
  { 421,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #421 = LLD
  { 422,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #422 = LLD_P8
  { 423,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #423 = LL_P8
  { 424,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo87 },  // Inst #424 = LOAD_ACC128
  { 425,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo88 },  // Inst #425 = LOAD_ACC128_P8
  { 426,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo89 },  // Inst #426 = LOAD_ACC64
  { 427,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo90 },  // Inst #427 = LOAD_ACC64DSP
  { 428,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo91 },  // Inst #428 = LOAD_ACC64DSP_P8
  { 429,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo92 },  // Inst #429 = LOAD_ACC64_P8
  { 430,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo93 },  // Inst #430 = LOAD_CCOND_DSP
  { 431,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo94 },  // Inst #431 = LOAD_CCOND_DSP_P8
  { 432,	3,	1,	19,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #432 = LUXC1
  { 433,	3,	1,	19,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo84 },  // Inst #433 = LUXC164
  { 434,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo95 },  // Inst #434 = LUi
  { 435,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo96 },  // Inst #435 = LUi64
  { 436,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo95 },  // Inst #436 = LUi_MM
  { 437,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #437 = LW
  { 438,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #438 = LW64
  { 439,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #439 = LW64_P8
  { 440,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo97 },  // Inst #440 = LWC1
  { 441,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo98 },  // Inst #441 = LWC1_P8
  { 442,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo99 },  // Inst #442 = LWL
  { 443,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo82 },  // Inst #443 = LWL64
  { 444,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo83 },  // Inst #444 = LWL64_P8
  { 445,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo99 },  // Inst #445 = LWL_MM
  { 446,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo100 },  // Inst #446 = LWL_P8
  { 447,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo99 },  // Inst #447 = LWR
  { 448,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo82 },  // Inst #448 = LWR64
  { 449,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo83 },  // Inst #449 = LWR64_P8
  { 450,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo99 },  // Inst #450 = LWR_MM
  { 451,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo100 },  // Inst #451 = LWR_P8
  { 452,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #452 = LWX
  { 453,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo101 },  // Inst #453 = LWXC1
  { 454,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo102 },  // Inst #454 = LWXC1_P8
  { 455,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #455 = LW_MM
  { 456,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #456 = LW_MM_P8
  { 457,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #457 = LW_P8
  { 458,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #458 = LWu
  { 459,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #459 = LWu_P8
  { 460,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #460 = LbRxRyOffMemX16
  { 461,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #461 = LbuRxRyOffMemX16
  { 462,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #462 = LhRxRyOffMemX16
  { 463,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #463 = LhuRxRyOffMemX16
  { 464,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #464 = LiRxImm16
  { 465,	2,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #465 = LiRxImmX16
  { 466,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo95 },  // Inst #466 = LoadAddr32Imm
  { 467,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo75 },  // Inst #467 = LoadAddr32Reg
  { 468,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo95 },  // Inst #468 = LoadImm32Reg
  { 469,	2,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #469 = LwConstant32
  { 470,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #470 = LwRxRyOffMemX16
  { 471,	3,	1,	20,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, NULL, OperandInfo104 },  // Inst #471 = LwRxSpImmX16
  { 472,	2,	0,	10,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo9 },  // Inst #472 = MADD
  { 473,	2,	0,	10,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo9 },  // Inst #473 = MADDU
  { 474,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #474 = MADDU_DSP
  { 475,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo105 },  // Inst #475 = MADD_D32
  { 476,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo106 },  // Inst #476 = MADD_D64
  { 477,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #477 = MADD_DSP
  { 478,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo107 },  // Inst #478 = MADD_S
  { 479,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #479 = MAQ_SA_W_PHL
  { 480,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #480 = MAQ_SA_W_PHR
  { 481,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #481 = MAQ_S_W_PHL
  { 482,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #482 = MAQ_S_W_PHR
  { 483,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo12 },  // Inst #483 = MFC0_3OP
  { 484,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo108 },  // Inst #484 = MFC1
  { 485,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo12 },  // Inst #485 = MFC2_3OP
  { 486,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList17, NULL, OperandInfo36 },  // Inst #486 = MFHI
  { 487,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList18, NULL, OperandInfo73 },  // Inst #487 = MFHI64
  { 488,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo109 },  // Inst #488 = MFHI_DSP
  { 489,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList19, NULL, OperandInfo36 },  // Inst #489 = MFLO
  { 490,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList20, NULL, OperandInfo73 },  // Inst #490 = MFLO64
  { 491,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo110 },  // Inst #491 = MFLO_DSP
  { 492,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, ImplicitList21, NULL, OperandInfo111 },  // Inst #492 = MIPSeh_return32
  { 493,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, ImplicitList21, NULL, OperandInfo112 },  // Inst #493 = MIPSeh_return64
  { 494,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #494 = MODSUB
  { 495,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo113 },  // Inst #495 = MOVF_D32
  { 496,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo114 },  // Inst #496 = MOVF_D64
  { 497,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo115 },  // Inst #497 = MOVF_I
  { 498,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo116 },  // Inst #498 = MOVF_I64
  { 499,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo117 },  // Inst #499 = MOVF_S
  { 500,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo118 },  // Inst #500 = MOVN_I64_D64
  { 501,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo119 },  // Inst #501 = MOVN_I64_I
  { 502,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo120 },  // Inst #502 = MOVN_I64_I64
  { 503,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo121 },  // Inst #503 = MOVN_I64_S
  { 504,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo122 },  // Inst #504 = MOVN_I_D32
  { 505,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo123 },  // Inst #505 = MOVN_I_D64
  { 506,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo124 },  // Inst #506 = MOVN_I_I
  { 507,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo125 },  // Inst #507 = MOVN_I_I64
  { 508,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo126 },  // Inst #508 = MOVN_I_S
  { 509,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo113 },  // Inst #509 = MOVT_D32
  { 510,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo114 },  // Inst #510 = MOVT_D64
  { 511,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo115 },  // Inst #511 = MOVT_I
  { 512,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo116 },  // Inst #512 = MOVT_I64
  { 513,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo117 },  // Inst #513 = MOVT_S
  { 514,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo118 },  // Inst #514 = MOVZ_I64_D64
  { 515,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo119 },  // Inst #515 = MOVZ_I64_I
  { 516,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo120 },  // Inst #516 = MOVZ_I64_I64
  { 517,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo121 },  // Inst #517 = MOVZ_I64_S
  { 518,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo122 },  // Inst #518 = MOVZ_I_D32
  { 519,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo123 },  // Inst #519 = MOVZ_I_D64
  { 520,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo124 },  // Inst #520 = MOVZ_I_I
  { 521,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo125 },  // Inst #521 = MOVZ_I_I64
  { 522,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo126 },  // Inst #522 = MOVZ_I_S
  { 523,	2,	0,	10,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo9 },  // Inst #523 = MSUB
  { 524,	2,	0,	10,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo9 },  // Inst #524 = MSUBU
  { 525,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #525 = MSUBU_DSP
  { 526,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo105 },  // Inst #526 = MSUB_D32
  { 527,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo106 },  // Inst #527 = MSUB_D64
  { 528,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #528 = MSUB_DSP
  { 529,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo107 },  // Inst #529 = MSUB_S
  { 530,	3,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo127 },  // Inst #530 = MTC0_3OP
  { 531,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo128 },  // Inst #531 = MTC1
  { 532,	3,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo127 },  // Inst #532 = MTC2_3OP
  { 533,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList17, OperandInfo36 },  // Inst #533 = MTHI
  { 534,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList18, OperandInfo73 },  // Inst #534 = MTHI64
  { 535,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo129 },  // Inst #535 = MTHI_DSP
  { 536,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList6, OperandInfo130 },  // Inst #536 = MTHLIP
  { 537,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList19, OperandInfo36 },  // Inst #537 = MTLO
  { 538,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList20, OperandInfo73 },  // Inst #538 = MTLO64
  { 539,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo131 },  // Inst #539 = MTLO_DSP
  { 540,	3,	1,	22,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #540 = MUL
  { 541,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo47 },  // Inst #541 = MULEQ_S_W_PHL
  { 542,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo47 },  // Inst #542 = MULEQ_S_W_PHR
  { 543,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #543 = MULEU_S_PH_QBL
  { 544,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #544 = MULEU_S_PH_QBR
  { 545,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #545 = MULQ_RS_PH
  { 546,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo10 },  // Inst #546 = MULQ_RS_W
  { 547,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #547 = MULQ_S_PH
  { 548,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo10 },  // Inst #548 = MULQ_S_W
  { 549,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo58 },  // Inst #549 = MULSAQ_S_W_PH
  { 550,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo58 },  // Inst #550 = MULSA_W_PH
  { 551,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo9 },  // Inst #551 = MULT
  { 552,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo132 },  // Inst #552 = MULTU_DSP
  { 553,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo132 },  // Inst #553 = MULT_DSP
  { 554,	2,	0,	22,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo9 },  // Inst #554 = MULT_MM
  { 555,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo9 },  // Inst #555 = MULTu
  { 556,	2,	0,	22,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo9 },  // Inst #556 = MULTu_MM
  { 557,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #557 = MUL_MM
  { 558,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #558 = MUL_PH
  { 559,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #559 = MUL_S_PH
  { 560,	1,	1,	4,	2,	0, 0x0ULL, ImplicitList17, NULL, OperandInfo74 },  // Inst #560 = Mfhi16
  { 561,	1,	1,	4,	2,	0, 0x0ULL, ImplicitList19, NULL, OperandInfo74 },  // Inst #561 = Mflo16
  { 562,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo133 },  // Inst #562 = Move32R16
  { 563,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo134 },  // Inst #563 = MoveR3216
  { 564,	2,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo51 },  // Inst #564 = MultRxRy16
  { 565,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo28 },  // Inst #565 = MultRxRyRz16
  { 566,	2,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo51 },  // Inst #566 = MultuRxRy16
  { 567,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo28 },  // Inst #567 = MultuRxRyRz16
  { 568,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo105 },  // Inst #568 = NMADD_D32
  { 569,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo106 },  // Inst #569 = NMADD_D64
  { 570,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo107 },  // Inst #570 = NMADD_S
  { 571,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo105 },  // Inst #571 = NMSUB_D32
  { 572,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo106 },  // Inst #572 = NMSUB_D64
  { 573,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo107 },  // Inst #573 = NMSUB_S
  { 574,	0,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #574 = NOP
  { 575,	3,	1,	1,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #575 = NOR
  { 576,	3,	1,	1,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo14 },  // Inst #576 = NOR64
  { 577,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #577 = NOR_MM
  { 578,	2,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo51 },  // Inst #578 = NegRxRy16
  { 579,	2,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo51 },  // Inst #579 = NotRxRy16
  { 580,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #580 = OR
  { 581,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo14 },  // Inst #581 = OR64
  { 582,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #582 = OR_MM
  { 583,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #583 = ORi
  { 584,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo15 },  // Inst #584 = ORi64
  { 585,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #585 = ORi_MM
  { 586,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #586 = OrRxRxRy16
  { 587,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #587 = PACKRL_PH
  { 588,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList8, NULL, OperandInfo11 },  // Inst #588 = PICK_PH
  { 589,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList8, NULL, OperandInfo11 },  // Inst #589 = PICK_QB
  { 590,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #590 = PRECEQU_PH_QBL
  { 591,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #591 = PRECEQU_PH_QBLA
  { 592,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #592 = PRECEQU_PH_QBR
  { 593,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #593 = PRECEQU_PH_QBRA
  { 594,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo135 },  // Inst #594 = PRECEQ_W_PHL
  { 595,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo135 },  // Inst #595 = PRECEQ_W_PHR
  { 596,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #596 = PRECEU_PH_QBL
  { 597,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #597 = PRECEU_PH_QBLA
  { 598,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #598 = PRECEU_PH_QBR
  { 599,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #599 = PRECEU_PH_QBRA
  { 600,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo11 },  // Inst #600 = PRECRQU_S_QB_PH
  { 601,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo136 },  // Inst #601 = PRECRQ_PH_W
  { 602,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #602 = PRECRQ_QB_PH
  { 603,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo136 },  // Inst #603 = PRECRQ_RS_PH_W
  { 604,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #604 = PRECR_QB_PH
  { 605,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo137 },  // Inst #605 = PRECR_SRA_PH_W
  { 606,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo137 },  // Inst #606 = PRECR_SRA_R_PH_W
  { 607,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16 },  // Inst #607 = PREPEND
  { 608,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #608 = PseudoCMPU_EQ_QB
  { 609,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #609 = PseudoCMPU_LE_QB
  { 610,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #610 = PseudoCMPU_LT_QB
  { 611,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #611 = PseudoCMP_EQ_PH
  { 612,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #612 = PseudoCMP_LE_PH
  { 613,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #613 = PseudoCMP_LT_PH
  { 614,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo139 },  // Inst #614 = PseudoCVT_D32_W
  { 615,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo57 },  // Inst #615 = PseudoCVT_D64_L
  { 616,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo140 },  // Inst #616 = PseudoCVT_D64_W
  { 617,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo57 },  // Inst #617 = PseudoCVT_S_L
  { 618,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo128 },  // Inst #618 = PseudoCVT_S_W
  { 619,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo141 },  // Inst #619 = PseudoDMULT
  { 620,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo141 },  // Inst #620 = PseudoDMULTu
  { 621,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo141 },  // Inst #621 = PseudoDSDIV
  { 622,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo141 },  // Inst #622 = PseudoDUDIV
  { 623,	3,	1,	19,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo79 },  // Inst #623 = PseudoLDC1
  { 624,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo142 },  // Inst #624 = PseudoMADD
  { 625,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo142 },  // Inst #625 = PseudoMADDU
  { 626,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo142 },  // Inst #626 = PseudoMSUB
  { 627,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo142 },  // Inst #627 = PseudoMSUBU
  { 628,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo143 },  // Inst #628 = PseudoMULT
  { 629,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo143 },  // Inst #629 = PseudoMULTu
  { 630,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo144 },  // Inst #630 = PseudoPICK_PH
  { 631,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo144 },  // Inst #631 = PseudoPICK_QB
  { 632,	3,	0,	23,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo79 },  // Inst #632 = PseudoSDC1
  { 633,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo143 },  // Inst #633 = PseudoSDIV
  { 634,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo143 },  // Inst #634 = PseudoUDIV
  { 635,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo135 },  // Inst #635 = RADDU_W_QB
  { 636,	2,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo95 },  // Inst #636 = RDDSP
  { 637,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo145 },  // Inst #637 = RDHWR
  { 638,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo146 },  // Inst #638 = RDHWR64
  { 639,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo147 },  // Inst #639 = REPLV_PH
  { 640,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo147 },  // Inst #640 = REPLV_QB
  { 641,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo148 },  // Inst #641 = REPL_PH
  { 642,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo148 },  // Inst #642 = REPL_QB
  { 643,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo36 },  // Inst #643 = RET
  { 644,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12 },  // Inst #644 = ROTR
  { 645,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #645 = ROTRV
  { 646,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #646 = ROTRV_MM
  { 647,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12 },  // Inst #647 = ROTR_MM
  { 648,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #648 = ROUND_L_D64
  { 649,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #649 = ROUND_L_S
  { 650,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #650 = ROUND_W_D32
  { 651,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #651 = ROUND_W_D64
  { 652,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #652 = ROUND_W_S
  { 653,	1,	0,	20,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5 },  // Inst #653 = RestoreIncSpF16
  { 654,	1,	0,	20,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList24, OperandInfo5 },  // Inst #654 = RestoreRaF16
  { 655,	0,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, 0 },  // Inst #655 = RetRA
  { 656,	0,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x0ULL, NULL, NULL, 0 },  // Inst #656 = RetRA16
  { 657,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #657 = SB
  { 658,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #658 = SB64
  { 659,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #659 = SB64_P8
  { 660,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #660 = SB_MM
  { 661,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #661 = SB_MM_P8
  { 662,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #662 = SB_P8
  { 663,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo149 },  // Inst #663 = SC
  { 664,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo150 },  // Inst #664 = SCD
  { 665,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo151 },  // Inst #665 = SCD_P8
  { 666,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo152 },  // Inst #666 = SC_P8
  { 667,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #667 = SD
  { 668,	3,	0,	23,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo79 },  // Inst #668 = SDC1
  { 669,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo80 },  // Inst #669 = SDC164
  { 670,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo81 },  // Inst #670 = SDC164_P8
  { 671,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo9 },  // Inst #671 = SDIV
  { 672,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #672 = SDL
  { 673,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #673 = SDL_P8
  { 674,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #674 = SDR
  { 675,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #675 = SDR_P8
  { 676,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #676 = SDXC1
  { 677,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo84 },  // Inst #677 = SDXC164
  { 678,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo85 },  // Inst #678 = SDXC164_P8
  { 679,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #679 = SD_P8
  { 680,	2,	1,	24,	4,	0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #680 = SEB
  { 681,	2,	1,	24,	4,	0, 0x1ULL, NULL, NULL, OperandInfo52 },  // Inst #681 = SEB64
  { 682,	2,	1,	24,	4,	0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #682 = SEH
  { 683,	2,	1,	24,	4,	0, 0x1ULL, NULL, NULL, OperandInfo52 },  // Inst #683 = SEH64
  { 684,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #684 = SH
  { 685,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #685 = SH64
  { 686,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #686 = SH64_P8
  { 687,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo153 },  // Inst #687 = SHILO
  { 688,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo130 },  // Inst #688 = SHILOV
  { 689,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo154 },  // Inst #689 = SHLLV_PH
  { 690,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo154 },  // Inst #690 = SHLLV_QB
  { 691,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo154 },  // Inst #691 = SHLLV_S_PH
  { 692,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo10 },  // Inst #692 = SHLLV_S_W
  { 693,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo155 },  // Inst #693 = SHLL_PH
  { 694,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo155 },  // Inst #694 = SHLL_QB
  { 695,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo155 },  // Inst #695 = SHLL_S_PH
  { 696,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo12 },  // Inst #696 = SHLL_S_W
  { 697,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo154 },  // Inst #697 = SHRAV_PH
  { 698,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo154 },  // Inst #698 = SHRAV_QB
  { 699,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo154 },  // Inst #699 = SHRAV_R_PH
  { 700,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo154 },  // Inst #700 = SHRAV_R_QB
  { 701,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #701 = SHRAV_R_W
  { 702,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #702 = SHRA_PH
  { 703,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #703 = SHRA_QB
  { 704,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #704 = SHRA_R_PH
  { 705,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #705 = SHRA_R_QB
  { 706,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #706 = SHRA_R_W
  { 707,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo154 },  // Inst #707 = SHRLV_PH
  { 708,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo154 },  // Inst #708 = SHRLV_QB
  { 709,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #709 = SHRL_PH
  { 710,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #710 = SHRL_QB
  { 711,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #711 = SH_MM
  { 712,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #712 = SH_MM_P8
  { 713,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #713 = SH_P8
  { 714,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12 },  // Inst #714 = SLL
  { 715,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo60 },  // Inst #715 = SLL64_32
  { 716,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo112 },  // Inst #716 = SLL64_64
  { 717,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #717 = SLLV
  { 718,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #718 = SLLV_MM
  { 719,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12 },  // Inst #719 = SLL_MM
  { 720,	3,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #720 = SLT
  { 721,	3,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo156 },  // Inst #721 = SLT64
  { 722,	3,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #722 = SLT_MM
  { 723,	3,	1,	25,	4,	0, 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #723 = SLTi
  { 724,	3,	1,	25,	4,	0, 0x2ULL, NULL, NULL, OperandInfo157 },  // Inst #724 = SLTi64
  { 725,	3,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #725 = SLTi_MM
  { 726,	3,	1,	25,	4,	0, 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #726 = SLTiu
  { 727,	3,	1,	25,	4,	0, 0x2ULL, NULL, NULL, OperandInfo157 },  // Inst #727 = SLTiu64
  { 728,	3,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #728 = SLTiu_MM
  { 729,	3,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #729 = SLTu
  { 730,	3,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo156 },  // Inst #730 = SLTu64
  { 731,	3,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #731 = SLTu_MM
  { 732,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12 },  // Inst #732 = SRA
  { 733,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #733 = SRAV
  { 734,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #734 = SRAV_MM
  { 735,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12 },  // Inst #735 = SRA_MM
  { 736,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12 },  // Inst #736 = SRL
  { 737,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #737 = SRLV
  { 738,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #738 = SRLV_MM
  { 739,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12 },  // Inst #739 = SRL_MM
  { 740,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo87 },  // Inst #740 = STORE_ACC128
  { 741,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo88 },  // Inst #741 = STORE_ACC128_P8
  { 742,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo89 },  // Inst #742 = STORE_ACC64
  { 743,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo90 },  // Inst #743 = STORE_ACC64DSP
  { 744,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo91 },  // Inst #744 = STORE_ACC64DSP_P8
  { 745,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo92 },  // Inst #745 = STORE_ACC64_P8
  { 746,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo93 },  // Inst #746 = STORE_CCOND_DSP
  { 747,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo94 },  // Inst #747 = STORE_CCOND_DSP_P8
  { 748,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x6ULL, NULL, NULL, OperandInfo86 },  // Inst #748 = ST_B
  { 749,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x6ULL, NULL, NULL, OperandInfo86 },  // Inst #749 = ST_D
  { 750,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x6ULL, NULL, NULL, OperandInfo86 },  // Inst #750 = ST_H
  { 751,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x6ULL, NULL, NULL, OperandInfo86 },  // Inst #751 = ST_W
  { 752,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #752 = SUB
  { 753,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #753 = SUBQH_PH
  { 754,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #754 = SUBQH_R_PH
  { 755,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #755 = SUBQH_R_W
  { 756,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10 },  // Inst #756 = SUBQH_W
  { 757,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #757 = SUBQ_PH
  { 758,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #758 = SUBQ_S_PH
  { 759,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #759 = SUBQ_S_W
  { 760,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #760 = SUBUH_QB
  { 761,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #761 = SUBUH_R_QB
  { 762,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #762 = SUBU_PH
  { 763,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #763 = SUBU_QB
  { 764,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #764 = SUBU_S_PH
  { 765,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #765 = SUBU_S_QB
  { 766,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #766 = SUB_MM
  { 767,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #767 = SUBu
  { 768,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #768 = SUBu_MM
  { 769,	3,	0,	23,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #769 = SUXC1
  { 770,	3,	0,	23,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo84 },  // Inst #770 = SUXC164
  { 771,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #771 = SW
  { 772,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #772 = SW64
  { 773,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #773 = SW64_P8
  { 774,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo97 },  // Inst #774 = SWC1
  { 775,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo98 },  // Inst #775 = SWC1_P8
  { 776,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #776 = SWL
  { 777,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #777 = SWL64
  { 778,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #778 = SWL64_P8
  { 779,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #779 = SWL_MM
  { 780,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #780 = SWL_P8
  { 781,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #781 = SWR
  { 782,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #782 = SWR64
  { 783,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #783 = SWR64_P8
  { 784,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #784 = SWR_MM
  { 785,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #785 = SWR_P8
  { 786,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo101 },  // Inst #786 = SWXC1
  { 787,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo102 },  // Inst #787 = SWXC1_P8
  { 788,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #788 = SW_MM
  { 789,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #789 = SW_MM_P8
  { 790,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #790 = SW_P8
  { 791,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo2 },  // Inst #791 = SYNC
  { 792,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo5 },  // Inst #792 = SYSCALL
  { 793,	1,	0,	26,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5 },  // Inst #793 = SaveDecSpF16
  { 794,	1,	0,	26,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList25, ImplicitList3, OperandInfo5 },  // Inst #794 = SaveRaF16
  { 795,	4,	0,	26,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #795 = SbRxRyOffMemX16
  { 796,	4,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo158 },  // Inst #796 = SelBeqZ
  { 797,	4,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo158 },  // Inst #797 = SelBneZ
  { 798,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo159 },  // Inst #798 = SelTBteqZCmp
  { 799,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo160 },  // Inst #799 = SelTBteqZCmpi
  { 800,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo159 },  // Inst #800 = SelTBteqZSlt
  { 801,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo160 },  // Inst #801 = SelTBteqZSlti
  { 802,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo160 },  // Inst #802 = SelTBteqZSltiu
  { 803,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo159 },  // Inst #803 = SelTBteqZSltu
  { 804,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo159 },  // Inst #804 = SelTBtneZCmp
  { 805,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo160 },  // Inst #805 = SelTBtneZCmpi
  { 806,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo159 },  // Inst #806 = SelTBtneZSlt
  { 807,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo160 },  // Inst #807 = SelTBtneZSlti
  { 808,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo160 },  // Inst #808 = SelTBtneZSltiu
  { 809,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo159 },  // Inst #809 = SelTBtneZSltu
  { 810,	4,	0,	26,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #810 = ShRxRyOffMemX16
  { 811,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #811 = SllX16
  { 812,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #812 = SllvRxRy16
  { 813,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #813 = SltCCRxRy16
  { 814,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo51 },  // Inst #814 = SltRxRy16
  { 815,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #815 = SltiCCRxImmX16
  { 816,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #816 = SltiRxImm16
  { 817,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #817 = SltiRxImmX16
  { 818,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #818 = SltiuCCRxImmX16
  { 819,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #819 = SltiuRxImm16
  { 820,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #820 = SltiuRxImmX16
  { 821,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #821 = SltuCCRxRy16
  { 822,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo51 },  // Inst #822 = SltuRxRy16
  { 823,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo28 },  // Inst #823 = SltuRxRyRz16
  { 824,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #824 = SraX16
  { 825,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #825 = SravRxRy16
  { 826,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #826 = SrlX16
  { 827,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #827 = SrlvRxRy16
  { 828,	3,	1,	4,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #828 = SubuRxRyRz16
  { 829,	4,	0,	26,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #829 = SwRxRyOffMemX16
  { 830,	3,	0,	26,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #830 = SwRxSpImmX16
  { 831,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x3ULL, NULL, ImplicitList4, OperandInfo5 },  // Inst #831 = TAILCALL
  { 832,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo73 },  // Inst #832 = TAILCALL64_R
  { 833,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo36 },  // Inst #833 = TAILCALL_R
  { 834,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #834 = TEQ
  { 835,	0,	0,	0,	4,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0 },  // Inst #835 = TRAP
  { 836,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #836 = TRUNC_L_D64
  { 837,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #837 = TRUNC_L_S
  { 838,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #838 = TRUNC_W_D32
  { 839,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #839 = TRUNC_W_D64
  { 840,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #840 = TRUNC_W_S
  { 841,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo9 },  // Inst #841 = UDIV
  { 842,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo95 },  // Inst #842 = WRDSP
  { 843,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #843 = WSBH
  { 844,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #844 = XOR
  { 845,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo14 },  // Inst #845 = XOR64
  { 846,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #846 = XOR_MM
  { 847,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #847 = XORi
  { 848,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo15 },  // Inst #848 = XORi64
  { 849,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo12 },  // Inst #849 = XORi_MM
  { 850,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #850 = XorRxRxRy16
};

extern const char MipsInstrNameData[] = {
  /* 0 */ 'P', 's', 'e', 'u', 'd', 'o', 'L', 'D', 'C', '1', 0,
  /* 11 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'D', 'C', '1', 0,
  /* 22 */ 'C', 'F', 'C', '1', 0,
  /* 27 */ 'D', 'M', 'F', 'C', '1', 0,
  /* 33 */ 'C', 'T', 'C', '1', 0,
  /* 38 */ 'D', 'M', 'T', 'C', '1', 0,
  /* 44 */ 'L', 'W', 'C', '1', 0,
  /* 49 */ 'S', 'W', 'C', '1', 0,
  /* 54 */ 'L', 'D', 'X', 'C', '1', 0,
  /* 60 */ 'S', 'D', 'X', 'C', '1', 0,
  /* 66 */ 'L', 'U', 'X', 'C', '1', 0,
  /* 72 */ 'S', 'U', 'X', 'C', '1', 0,
  /* 78 */ 'L', 'W', 'X', 'C', '1', 0,
  /* 84 */ 'S', 'W', 'X', 'C', '1', 0,
  /* 90 */ 'D', 'S', 'R', 'A', '3', '2', 0,
  /* 97 */ 'F', 'S', 'U', 'B', '_', 'D', '3', '2', 0,
  /* 106 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '3', '2', 0,
  /* 116 */ 'F', 'A', 'D', 'D', '_', 'D', '3', '2', 0,
  /* 125 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '3', '2', 0,
  /* 135 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '3', '2', 0,
  /* 145 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 156 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 166 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 176 */ 'C', '_', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 185 */ 'C', '_', 'S', 'F', '_', 'D', '3', '2', 0,
  /* 194 */ 'M', 'O', 'V', 'F', '_', 'D', '3', '2', 0,
  /* 203 */ 'C', '_', 'F', '_', 'D', '3', '2', 0,
  /* 211 */ 'F', 'N', 'E', 'G', '_', 'D', '3', '2', 0,
  /* 220 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '3', '2', 0,
  /* 231 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '3', '2', 0,
  /* 242 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '3', '2', 0,
  /* 252 */ 'F', 'M', 'U', 'L', '_', 'D', '3', '2', 0,
  /* 261 */ 'C', '_', 'U', 'N', '_', 'D', '3', '2', 0,
  /* 270 */ 'F', 'C', 'M', 'P', '_', 'D', '3', '2', 0,
  /* 279 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 289 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 299 */ 'C', '_', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 308 */ 'F', 'A', 'B', 'S', '_', 'D', '3', '2', 0,
  /* 317 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '3', '2', 0,
  /* 327 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '3', '2', 0,
  /* 337 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 347 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 357 */ 'C', '_', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 366 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '3', '2', 0,
  /* 376 */ 'M', 'O', 'V', 'T', '_', 'D', '3', '2', 0,
  /* 385 */ 'F', 'D', 'I', 'V', '_', 'D', '3', '2', 0,
  /* 394 */ 'F', 'M', 'O', 'V', '_', 'D', '3', '2', 0,
  /* 403 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '3', '2', 0,
  /* 415 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '3', '2', 0,
  /* 427 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '3', '2', 0,
  /* 438 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '3', '2', 0,
  /* 450 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '3', '2', 0,
  /* 460 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', 0,
  /* 469 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 489 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 509 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 530 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 550 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 566 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 586 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 606 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 625 */ 'D', 'S', 'L', 'L', '3', '2', 0,
  /* 632 */ 'D', 'S', 'R', 'L', '3', '2', 0,
  /* 639 */ 'F', 'C', 'M', 'P', '_', 'S', '3', '2', 0,
  /* 648 */ 'D', 'S', 'L', 'L', '6', '4', '_', '3', '2', 0,
  /* 658 */ 'M', 'I', 'P', 'S', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', '3', '2', 0,
  /* 674 */ 'L', 'w', 'C', 'o', 'n', 's', 't', 'a', 'n', 't', '3', '2', 0,
  /* 687 */ 'L', 'D', 'C', '1', '6', '4', 0,
  /* 694 */ 'S', 'D', 'C', '1', '6', '4', 0,
  /* 701 */ 'L', 'D', 'X', 'C', '1', '6', '4', 0,
  /* 709 */ 'S', 'D', 'X', 'C', '1', '6', '4', 0,
  /* 717 */ 'L', 'U', 'X', 'C', '1', '6', '4', 0,
  /* 725 */ 'S', 'U', 'X', 'C', '1', '6', '4', 0,
  /* 733 */ 'S', 'E', 'B', '6', '4', 0,
  /* 739 */ 'L', 'B', '6', '4', 0,
  /* 744 */ 'S', 'B', '6', '4', 0,
  /* 749 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '6', '4', 0,
  /* 760 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '6', '4', 0,
  /* 772 */ 'A', 'N', 'D', '6', '4', 0,
  /* 778 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'D', '6', '4', 0,
  /* 791 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'D', '6', '4', 0,
  /* 804 */ 'F', 'S', 'U', 'B', '_', 'D', '6', '4', 0,
  /* 813 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '6', '4', 0,
  /* 823 */ 'F', 'A', 'D', 'D', '_', 'D', '6', '4', 0,
  /* 832 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '6', '4', 0,
  /* 842 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '6', '4', 0,
  /* 852 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 863 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 873 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 883 */ 'C', '_', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 892 */ 'C', '_', 'S', 'F', '_', 'D', '6', '4', 0,
  /* 901 */ 'M', 'O', 'V', 'F', '_', 'D', '6', '4', 0,
  /* 910 */ 'C', '_', 'F', '_', 'D', '6', '4', 0,
  /* 918 */ 'F', 'N', 'E', 'G', '_', 'D', '6', '4', 0,
  /* 927 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '6', '4', 0,
  /* 938 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '6', '4', 0,
  /* 949 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '6', '4', 0,
  /* 959 */ 'F', 'M', 'U', 'L', '_', 'D', '6', '4', 0,
  /* 968 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'D', '6', '4', 0,
  /* 980 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'D', '6', '4', 0,
  /* 992 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1003 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1015 */ 'C', 'V', 'T', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1025 */ 'C', '_', 'U', 'N', '_', 'D', '6', '4', 0,
  /* 1034 */ 'F', 'C', 'M', 'P', '_', 'D', '6', '4', 0,
  /* 1043 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1053 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1063 */ 'C', '_', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1072 */ 'F', 'A', 'B', 'S', '_', 'D', '6', '4', 0,
  /* 1081 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '6', '4', 0,
  /* 1091 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '6', '4', 0,
  /* 1101 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1111 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1121 */ 'C', '_', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1130 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '6', '4', 0,
  /* 1140 */ 'M', 'O', 'V', 'T', '_', 'D', '6', '4', 0,
  /* 1149 */ 'F', 'D', 'I', 'V', '_', 'D', '6', '4', 0,
  /* 1158 */ 'F', 'M', 'O', 'V', '_', 'D', '6', '4', 0,
  /* 1167 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1179 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1191 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1202 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1214 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1224 */ 'B', 'N', 'E', '6', '4', 0,
  /* 1230 */ 'B', 'u', 'i', 'l', 'd', 'P', 'a', 'i', 'r', 'F', '6', '4', 0,
  /* 1243 */ 'E', 'x', 't', 'r', 'a', 'c', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', '6', '4', 0,
  /* 1261 */ 'S', 'E', 'H', '6', '4', 0,
  /* 1267 */ 'L', 'H', '6', '4', 0,
  /* 1272 */ 'S', 'H', '6', '4', 0,
  /* 1277 */ 'M', 'F', 'H', 'I', '6', '4', 0,
  /* 1284 */ 'M', 'T', 'H', 'I', '6', '4', 0,
  /* 1291 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'I', '6', '4', 0,
  /* 1304 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'I', '6', '4', 0,
  /* 1317 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 1337 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 1357 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 1378 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 1398 */ 'M', 'O', 'V', 'F', '_', 'I', '6', '4', 0,
  /* 1407 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'I', '6', '4', 0,
  /* 1418 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'I', '6', '4', 0,
  /* 1429 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 1445 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 1465 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 1485 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 1504 */ 'M', 'O', 'V', 'T', '_', 'I', '6', '4', 0,
  /* 1513 */ 'L', 'W', 'L', '6', '4', 0,
  /* 1519 */ 'S', 'W', 'L', '6', '4', 0,
  /* 1525 */ 'M', 'F', 'L', 'O', '6', '4', 0,
  /* 1532 */ 'M', 'T', 'L', 'O', '6', '4', 0,
  /* 1539 */ 'D', 'M', 'F', 'C', '0', '_', '3', 'O', 'P', '6', '4', 0,
  /* 1551 */ 'D', 'M', 'T', 'C', '0', '_', '3', 'O', 'P', '6', '4', 0,
  /* 1563 */ 'D', 'M', 'F', 'C', '2', '_', '3', 'O', 'P', '6', '4', 0,
  /* 1575 */ 'D', 'M', 'T', 'C', '2', '_', '3', 'O', 'P', '6', '4', 0,
  /* 1587 */ 'B', 'E', 'Q', '6', '4', 0,
  /* 1593 */ 'J', 'R', '6', '4', 0,
  /* 1598 */ 'J', 'A', 'L', 'R', '6', '4', 0,
  /* 1605 */ 'N', 'O', 'R', '6', '4', 0,
  /* 1611 */ 'X', 'O', 'R', '6', '4', 0,
  /* 1617 */ 'R', 'D', 'H', 'W', 'R', '6', '4', 0,
  /* 1625 */ 'L', 'W', 'R', '6', '4', 0,
  /* 1631 */ 'S', 'W', 'R', '6', '4', 0,
  /* 1637 */ 'S', 'L', 'T', '6', '4', 0,
  /* 1643 */ 'L', 'W', '6', '4', 0,
  /* 1648 */ 'S', 'W', '6', '4', 0,
  /* 1653 */ 'B', 'G', 'E', 'Z', '6', '4', 0,
  /* 1660 */ 'B', 'L', 'E', 'Z', '6', '4', 0,
  /* 1667 */ 'B', 'G', 'T', 'Z', '6', '4', 0,
  /* 1674 */ 'B', 'L', 'T', 'Z', '6', '4', 0,
  /* 1681 */ 'S', 'L', 'L', '6', '4', '_', '6', '4', 0,
  /* 1690 */ 'A', 'N', 'D', 'i', '6', '4', 0,
  /* 1697 */ 'X', 'O', 'R', 'i', '6', '4', 0,
  /* 1704 */ 'S', 'L', 'T', 'i', '6', '4', 0,
  /* 1711 */ 'L', 'U', 'i', '6', '4', 0,
  /* 1717 */ 'M', 'I', 'P', 'S', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', '6', '4', 0,
  /* 1733 */ 'L', 'B', 'u', '6', '4', 0,
  /* 1739 */ 'L', 'H', 'u', '6', '4', 0,
  /* 1745 */ 'S', 'L', 'T', 'u', '6', '4', 0,
  /* 1752 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', '6', '4', 0,
  /* 1764 */ 'S', 'L', 'T', 'i', 'u', '6', '4', 0,
  /* 1772 */ 'M', 'o', 'v', 'e', 'R', '3', '2', '1', '6', 0,
  /* 1782 */ 'R', 'e', 't', 'R', 'A', '1', '6', 0,
  /* 1790 */ 'R', 'e', 's', 't', 'o', 'r', 'e', 'R', 'a', 'F', '1', '6', 0,
  /* 1803 */ 'S', 'a', 'v', 'e', 'R', 'a', 'F', '1', '6', 0,
  /* 1813 */ 'S', 'a', 'v', 'e', 'D', 'e', 'c', 'S', 'p', 'F', '1', '6', 0,
  /* 1826 */ 'R', 'e', 's', 't', 'o', 'r', 'e', 'I', 'n', 'c', 'S', 'p', 'F', '1', '6', 0,
  /* 1842 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 1862 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 1882 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1903 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1923 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1939 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1959 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1979 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1998 */ 'M', 'o', 'v', 'e', '3', '2', 'R', '1', '6', 0,
  /* 2008 */ 'S', 'r', 'a', 'X', '1', '6', 0,
  /* 2015 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'C', 'm', 'p', 'i', 'X', '1', '6', 0,
  /* 2030 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'C', 'm', 'p', 'i', 'X', '1', '6', 0,
  /* 2045 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'i', 'X', '1', '6', 0,
  /* 2060 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'i', 'X', '1', '6', 0,
  /* 2075 */ 'S', 'l', 'l', 'X', '1', '6', 0,
  /* 2082 */ 'S', 'r', 'l', 'X', '1', '6', 0,
  /* 2089 */ 'L', 'b', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2105 */ 'S', 'b', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2121 */ 'L', 'h', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2137 */ 'S', 'h', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2153 */ 'L', 'b', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2170 */ 'L', 'h', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2187 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2206 */ 'L', 'w', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2222 */ 'S', 'w', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2238 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'P', 'c', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2254 */ 'A', 'd', 'd', 'i', 'u', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2268 */ 'L', 'w', 'R', 'x', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2281 */ 'S', 'w', 'R', 'x', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2294 */ 'S', 'l', 't', 'i', 'C', 'C', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2309 */ 'S', 'l', 't', 'i', 'u', 'C', 'C', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2325 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2336 */ 'C', 'm', 'p', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2349 */ 'S', 'l', 't', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2362 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2376 */ 'S', 'l', 't', 'i', 'u', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2390 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2406 */ 'B', 'n', 'e', 'z', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2419 */ 'B', 'e', 'q', 'z', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2432 */ 'B', 'i', 'm', 'm', 'X', '1', '6', 0,
  /* 2440 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'C', 'm', 'p', 'X', '1', '6', 0,
  /* 2454 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'C', 'm', 'p', 'X', '1', '6', 0,
  /* 2468 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'X', '1', '6', 0,
  /* 2482 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'X', '1', '6', 0,
  /* 2496 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'i', 'u', 'X', '1', '6', 0,
  /* 2512 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'i', 'u', 'X', '1', '6', 0,
  /* 2528 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'u', 'X', '1', '6', 0,
  /* 2543 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'u', 'X', '1', '6', 0,
  /* 2558 */ 'B', 't', 'n', 'e', 'z', 'X', '1', '6', 0,
  /* 2567 */ 'B', 't', 'e', 'q', 'z', 'X', '1', '6', 0,
  /* 2576 */ 'J', 'r', 'c', 'R', 'a', '1', '6', 0,
  /* 2584 */ 'J', 'r', 'R', 'a', '1', '6', 0,
  /* 2591 */ 'J', 'u', 'm', 'p', 'L', 'i', 'n', 'k', 'R', 'e', 'g', '1', '6', 0,
  /* 2605 */ 'M', 'f', 'h', 'i', '1', '6', 0,
  /* 2612 */ 'B', 'r', 'e', 'a', 'k', '1', '6', 0,
  /* 2620 */ 'J', 'a', 'l', '1', '6', 0,
  /* 2626 */ 'A', 'd', 'd', 'i', 'u', 'S', 'p', 'I', 'm', 'm', '1', '6', 0,
  /* 2639 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2649 */ 'C', 'm', 'p', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2661 */ 'S', 'l', 't', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2673 */ 'S', 'l', 't', 'i', 'u', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2686 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2701 */ 'B', 'n', 'e', 'z', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2713 */ 'B', 'e', 'q', 'z', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2725 */ 'M', 'f', 'l', 'o', '1', '6', 0,
  /* 2732 */ 'J', 'r', 'c', 'R', 'x', '1', '6', 0,
  /* 2740 */ 'S', 'l', 't', 'C', 'C', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2752 */ 'S', 'l', 't', 'u', 'C', 'C', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2765 */ 'N', 'e', 'g', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2775 */ 'C', 'm', 'p', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2785 */ 'S', 'l', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2795 */ 'M', 'u', 'l', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2806 */ 'N', 'o', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2816 */ 'S', 'l', 't', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2827 */ 'M', 'u', 'l', 't', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2839 */ 'D', 'i', 'v', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2850 */ 'S', 'r', 'a', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2861 */ 'D', 'i', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2871 */ 'S', 'l', 'l', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2882 */ 'S', 'r', 'l', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2893 */ 'A', 'n', 'd', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2905 */ 'O', 'r', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2916 */ 'X', 'o', 'r', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2928 */ 'M', 'u', 'l', 't', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2941 */ 'S', 'u', 'b', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2954 */ 'A', 'd', 'd', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2967 */ 'S', 'l', 't', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2980 */ 'M', 'u', 'l', 't', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2994 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '1', '2', '8', 0,
  /* 3006 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '1', '2', '8', 0,
  /* 3019 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 3038 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 3057 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 3077 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 3096 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 3111 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 3130 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 3149 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 3167 */ 'L', 'W', 'C', '1', '_', 'P', '8', 0,
  /* 3175 */ 'S', 'W', 'C', '1', '_', 'P', '8', 0,
  /* 3183 */ 'L', 'W', 'X', 'C', '1', '_', 'P', '8', 0,
  /* 3192 */ 'S', 'W', 'X', 'C', '1', '_', 'P', '8', 0,
  /* 3201 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3224 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3247 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3271 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3294 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3313 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3336 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3359 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3381 */ 'L', 'D', 'C', '1', '6', '4', '_', 'P', '8', 0,
  /* 3391 */ 'S', 'D', 'C', '1', '6', '4', '_', 'P', '8', 0,
  /* 3401 */ 'L', 'D', 'X', 'C', '1', '6', '4', '_', 'P', '8', 0,
  /* 3412 */ 'S', 'D', 'X', 'C', '1', '6', '4', '_', 'P', '8', 0,
  /* 3423 */ 'L', 'B', '6', '4', '_', 'P', '8', 0,
  /* 3431 */ 'S', 'B', '6', '4', '_', 'P', '8', 0,
  /* 3439 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '6', '4', '_', 'P', '8', 0,
  /* 3453 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '6', '4', '_', 'P', '8', 0,
  /* 3468 */ 'L', 'H', '6', '4', '_', 'P', '8', 0,
  /* 3476 */ 'S', 'H', '6', '4', '_', 'P', '8', 0,
  /* 3484 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3507 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3530 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3554 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3577 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3596 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3619 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3642 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3664 */ 'L', 'W', 'L', '6', '4', '_', 'P', '8', 0,
  /* 3673 */ 'S', 'W', 'L', '6', '4', '_', 'P', '8', 0,
  /* 3682 */ 'L', 'W', 'R', '6', '4', '_', 'P', '8', 0,
  /* 3691 */ 'S', 'W', 'R', '6', '4', '_', 'P', '8', 0,
  /* 3700 */ 'L', 'W', '6', '4', '_', 'P', '8', 0,
  /* 3708 */ 'S', 'W', '6', '4', '_', 'P', '8', 0,
  /* 3716 */ 'L', 'B', 'u', '6', '4', '_', 'P', '8', 0,
  /* 3725 */ 'L', 'H', 'u', '6', '4', '_', 'P', '8', 0,
  /* 3734 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3757 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3780 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3804 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3827 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3846 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3869 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3892 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3914 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '1', '2', '8', '_', 'P', '8', 0,
  /* 3929 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '1', '2', '8', '_', 'P', '8', 0,
  /* 3945 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', '_', 'P', '8', 0,
  /* 3967 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', '_', 'P', '8', 0,
  /* 3989 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4012 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4034 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4052 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4074 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4096 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4117 */ 'L', 'B', '_', 'P', '8', 0,
  /* 4123 */ 'S', 'B', '_', 'P', '8', 0,
  /* 4129 */ 'S', 'C', '_', 'P', '8', 0,
  /* 4135 */ 'S', 'C', 'D', '_', 'P', '8', 0,
  /* 4142 */ 'L', 'L', 'D', '_', 'P', '8', 0,
  /* 4149 */ 'S', 'D', '_', 'P', '8', 0,
  /* 4155 */ 'L', 'H', '_', 'P', '8', 0,
  /* 4161 */ 'S', 'H', '_', 'P', '8', 0,
  /* 4167 */ 'L', 'D', 'L', '_', 'P', '8', 0,
  /* 4174 */ 'S', 'D', 'L', '_', 'P', '8', 0,
  /* 4181 */ 'L', 'L', '_', 'P', '8', 0,
  /* 4187 */ 'L', 'W', 'L', '_', 'P', '8', 0,
  /* 4194 */ 'S', 'W', 'L', '_', 'P', '8', 0,
  /* 4201 */ 'L', 'B', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4210 */ 'S', 'B', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4219 */ 'L', 'H', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4228 */ 'S', 'H', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4237 */ 'L', 'W', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4246 */ 'S', 'W', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4255 */ 'L', 'B', 'u', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4265 */ 'L', 'H', 'u', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4275 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '6', '4', 'D', 'S', 'P', '_', 'P', '8', 0,
  /* 4292 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '6', '4', 'D', 'S', 'P', '_', 'P', '8', 0,
  /* 4310 */ 'L', 'O', 'A', 'D', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', '_', 'P', '8', 0,
  /* 4328 */ 'S', 'T', 'O', 'R', 'E', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', '_', 'P', '8', 0,
  /* 4347 */ 'L', 'D', 'R', '_', 'P', '8', 0,
  /* 4354 */ 'S', 'D', 'R', '_', 'P', '8', 0,
  /* 4361 */ 'L', 'W', 'R', '_', 'P', '8', 0,
  /* 4368 */ 'S', 'W', 'R', '_', 'P', '8', 0,
  /* 4375 */ 'L', 'W', '_', 'P', '8', 0,
  /* 4381 */ 'S', 'W', '_', 'P', '8', 0,
  /* 4387 */ 'L', 'B', 'u', '_', 'P', '8', 0,
  /* 4394 */ 'L', 'H', 'u', '_', 'P', '8', 0,
  /* 4401 */ 'L', 'W', 'u', '_', 'P', '8', 0,
  /* 4408 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', 0,
  /* 4423 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', 0,
  /* 4439 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', 0,
  /* 4454 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', 0,
  /* 4470 */ 'D', 'S', 'R', 'A', 0,
  /* 4475 */ 'R', 'e', 't', 'R', 'A', 0,
  /* 4481 */ 'S', 'E', 'B', 0,
  /* 4485 */ 'L', 'B', 0,
  /* 4488 */ 'S', 'H', 'R', 'A', '_', 'Q', 'B', 0,
  /* 4496 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 4509 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 4521 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 4538 */ 'S', 'U', 'B', 'U', 'H', '_', 'Q', 'B', 0,
  /* 4547 */ 'A', 'D', 'D', 'U', 'H', '_', 'Q', 'B', 0,
  /* 4556 */ 'P', 's', 'e', 'u', 'd', 'o', 'P', 'I', 'C', 'K', '_', 'Q', 'B', 0,
  /* 4570 */ 'S', 'H', 'L', 'L', '_', 'Q', 'B', 0,
  /* 4578 */ 'R', 'E', 'P', 'L', '_', 'Q', 'B', 0,
  /* 4586 */ 'S', 'H', 'R', 'L', '_', 'Q', 'B', 0,
  /* 4594 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 4607 */ 'C', 'M', 'P', 'G', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 4619 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 4636 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'Q', 'B', 0,
  /* 4646 */ 'S', 'U', 'B', 'U', 'H', '_', 'R', '_', 'Q', 'B', 0,
  /* 4657 */ 'A', 'D', 'D', 'U', 'H', '_', 'R', '_', 'Q', 'B', 0,
  /* 4668 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'Q', 'B', 0,
  /* 4679 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'Q', 'B', 0,
  /* 4689 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'Q', 'B', 0,
  /* 4699 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'Q', 'B', 0,
  /* 4709 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 4722 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 4734 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 4751 */ 'S', 'U', 'B', 'U', '_', 'Q', 'B', 0,
  /* 4759 */ 'A', 'D', 'D', 'U', '_', 'Q', 'B', 0,
  /* 4767 */ 'S', 'H', 'R', 'A', 'V', '_', 'Q', 'B', 0,
  /* 4776 */ 'S', 'H', 'L', 'L', 'V', '_', 'Q', 'B', 0,
  /* 4785 */ 'R', 'E', 'P', 'L', 'V', '_', 'Q', 'B', 0,
  /* 4794 */ 'S', 'H', 'R', 'L', 'V', '_', 'Q', 'B', 0,
  /* 4803 */ 'R', 'A', 'D', 'D', 'U', '_', 'W', '_', 'Q', 'B', 0,
  /* 4814 */ 'S', 'B', 0,
  /* 4817 */ 'M', 'O', 'D', 'S', 'U', 'B', 0,
  /* 4824 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 0,
  /* 4835 */ 'L', 'D', '_', 'B', 0,
  /* 4840 */ 'S', 'T', '_', 'B', 0,
  /* 4845 */ 'S', 'Y', 'N', 'C', 0,
  /* 4850 */ 'A', 'D', 'D', 'S', 'C', 0,
  /* 4856 */ 'A', 'D', 'D', 'W', 'C', 0,
  /* 4862 */ 'S', 'C', 'D', 0,
  /* 4866 */ 'D', 'A', 'D', 'D', 0,
  /* 4871 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 0,
  /* 4882 */ 'D', 'S', 'H', 'D', 0,
  /* 4887 */ 'L', 'L', 'D', 0,
  /* 4891 */ 'A', 'N', 'D', 0,
  /* 4895 */ 'P', 'R', 'E', 'P', 'E', 'N', 'D', 0,
  /* 4903 */ 'A', 'P', 'P', 'E', 'N', 'D', 0,
  /* 4910 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4923 */ 'S', 'D', 0,
  /* 4926 */ 'L', 'D', '_', 'D', 0,
  /* 4931 */ 'S', 'T', '_', 'D', 0,
  /* 4936 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 4949 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4956 */ 'B', 'N', 'E', 0,
  /* 4960 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4970 */ 'B', 'C', '1', 'F', 0,
  /* 4975 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 4988 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 5003 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 5017 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 5031 */ 'D', 'S', 'B', 'H', 0,
  /* 5036 */ 'W', 'S', 'B', 'H', 0,
  /* 5041 */ 'S', 'E', 'H', 0,
  /* 5045 */ 'L', 'H', 0,
  /* 5048 */ 'S', 'H', 'R', 'A', '_', 'P', 'H', 0,
  /* 5056 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5069 */ 'P', 'R', 'E', 'C', 'R', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5081 */ 'P', 'R', 'E', 'C', 'R', 'Q', 'U', '_', 'S', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5097 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'L', 'E', '_', 'P', 'H', 0,
  /* 5113 */ 'S', 'U', 'B', 'Q', 'H', '_', 'P', 'H', 0,
  /* 5122 */ 'A', 'D', 'D', 'Q', 'H', '_', 'P', 'H', 0,
  /* 5131 */ 'P', 's', 'e', 'u', 'd', 'o', 'P', 'I', 'C', 'K', '_', 'P', 'H', 0,
  /* 5145 */ 'S', 'H', 'L', 'L', '_', 'P', 'H', 0,
  /* 5153 */ 'R', 'E', 'P', 'L', '_', 'P', 'H', 0,
  /* 5161 */ 'S', 'H', 'R', 'L', '_', 'P', 'H', 0,
  /* 5169 */ 'P', 'A', 'C', 'K', 'R', 'L', '_', 'P', 'H', 0,
  /* 5179 */ 'M', 'U', 'L', '_', 'P', 'H', 0,
  /* 5186 */ 'S', 'U', 'B', 'Q', '_', 'P', 'H', 0,
  /* 5194 */ 'A', 'D', 'D', 'Q', '_', 'P', 'H', 0,
  /* 5202 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'E', 'Q', '_', 'P', 'H', 0,
  /* 5218 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'P', 'H', 0,
  /* 5228 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'P', 'H', 0,
  /* 5239 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'P', 'H', 0,
  /* 5250 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'P', 'H', 0,
  /* 5261 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'P', 'H', 0,
  /* 5272 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'P', 'H', 0,
  /* 5282 */ 'M', 'U', 'L', '_', 'S', '_', 'P', 'H', 0,
  /* 5291 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 5301 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 5311 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 5321 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 5331 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'P', 'H', 0,
  /* 5341 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'P', 'H', 0,
  /* 5351 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'P', 'H', 0,
  /* 5362 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'L', 'T', '_', 'P', 'H', 0,
  /* 5378 */ 'S', 'U', 'B', 'U', '_', 'P', 'H', 0,
  /* 5386 */ 'A', 'D', 'D', 'U', '_', 'P', 'H', 0,
  /* 5394 */ 'S', 'H', 'R', 'A', 'V', '_', 'P', 'H', 0,
  /* 5403 */ 'S', 'H', 'L', 'L', 'V', '_', 'P', 'H', 0,
  /* 5412 */ 'R', 'E', 'P', 'L', 'V', '_', 'P', 'H', 0,
  /* 5421 */ 'S', 'H', 'R', 'L', 'V', '_', 'P', 'H', 0,
  /* 5430 */ 'D', 'P', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 5439 */ 'M', 'U', 'L', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 5450 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 5464 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 5478 */ 'D', 'P', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5487 */ 'D', 'P', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5499 */ 'M', 'U', 'L', 'S', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5513 */ 'D', 'P', 'S', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5525 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5538 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5551 */ 'D', 'P', 'A', 'X', '_', 'W', '_', 'P', 'H', 0,
  /* 5561 */ 'D', 'P', 'S', 'X', '_', 'W', '_', 'P', 'H', 0,
  /* 5571 */ 'S', 'H', 0,
  /* 5574 */ 'L', 'D', '_', 'H', 0,
  /* 5579 */ 'E', 'X', 'T', 'R', '_', 'S', '_', 'H', 0,
  /* 5588 */ 'E', 'X', 'T', 'R', 'V', '_', 'S', '_', 'H', 0,
  /* 5598 */ 'S', 'T', '_', 'H', 0,
  /* 5603 */ 'D', 'I', 0,
  /* 5606 */ 'E', 'I', 0,
  /* 5609 */ 'M', 'F', 'H', 'I', 0,
  /* 5614 */ 'P', 'H', 'I', 0,
  /* 5618 */ 'M', 'T', 'H', 'I', 0,
  /* 5623 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'I', 0,
  /* 5634 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'I', 0,
  /* 5645 */ 'M', 'O', 'V', 'F', '_', 'I', 0,
  /* 5652 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'I', 0,
  /* 5661 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'I', 0,
  /* 5670 */ 'M', 'O', 'V', 'T', '_', 'I', 0,
  /* 5677 */ 'J', 0,
  /* 5679 */ 'B', 'R', 'E', 'A', 'K', 0,
  /* 5685 */ 'J', 'A', 'L', 0,
  /* 5689 */ 'B', 'G', 'E', 'Z', 'A', 'L', 0,
  /* 5696 */ 'B', 'L', 'T', 'Z', 'A', 'L', 0,
  /* 5703 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5718 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5732 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5747 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5758 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5769 */ 'L', 'D', 'L', 0,
  /* 5773 */ 'S', 'D', 'L', 0,
  /* 5777 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5786 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5799 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5808 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 5821 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 5834 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 5846 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 5860 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 0,
  /* 5869 */ 'S', 'Y', 'S', 'C', 'A', 'L', 'L', 0,
  /* 5877 */ 'K', 'I', 'L', 'L', 0,
  /* 5882 */ 'D', 'S', 'L', 'L', 0,
  /* 5887 */ 'D', 'S', 'R', 'L', 0,
  /* 5892 */ 'M', 'U', 'L', 0,
  /* 5896 */ 'L', 'W', 'L', 0,
  /* 5900 */ 'S', 'W', 'L', 0,
  /* 5904 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'L', 0,
  /* 5920 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'S', '_', 'L', 0,
  /* 5934 */ 'S', 'R', 'A', '_', 'M', 'M', 0,
  /* 5941 */ 'L', 'B', '_', 'M', 'M', 0,
  /* 5947 */ 'S', 'B', '_', 'M', 'M', 0,
  /* 5953 */ 'S', 'U', 'B', '_', 'M', 'M', 0,
  /* 5960 */ 'A', 'D', 'D', '_', 'M', 'M', 0,
  /* 5967 */ 'A', 'N', 'D', '_', 'M', 'M', 0,
  /* 5974 */ 'L', 'H', '_', 'M', 'M', 0,
  /* 5980 */ 'S', 'H', '_', 'M', 'M', 0,
  /* 5986 */ 'S', 'L', 'L', '_', 'M', 'M', 0,
  /* 5993 */ 'S', 'R', 'L', '_', 'M', 'M', 0,
  /* 6000 */ 'M', 'U', 'L', '_', 'M', 'M', 0,
  /* 6007 */ 'L', 'W', 'L', '_', 'M', 'M', 0,
  /* 6014 */ 'S', 'W', 'L', '_', 'M', 'M', 0,
  /* 6021 */ 'N', 'O', 'R', '_', 'M', 'M', 0,
  /* 6028 */ 'X', 'O', 'R', '_', 'M', 'M', 0,
  /* 6035 */ 'R', 'O', 'T', 'R', '_', 'M', 'M', 0,
  /* 6043 */ 'L', 'W', 'R', '_', 'M', 'M', 0,
  /* 6050 */ 'S', 'W', 'R', '_', 'M', 'M', 0,
  /* 6057 */ 'S', 'L', 'T', '_', 'M', 'M', 0,
  /* 6064 */ 'M', 'U', 'L', 'T', '_', 'M', 'M', 0,
  /* 6072 */ 'S', 'R', 'A', 'V', '_', 'M', 'M', 0,
  /* 6080 */ 'S', 'L', 'L', 'V', '_', 'M', 'M', 0,
  /* 6088 */ 'S', 'R', 'L', 'V', '_', 'M', 'M', 0,
  /* 6096 */ 'R', 'O', 'T', 'R', 'V', '_', 'M', 'M', 0,
  /* 6105 */ 'L', 'W', '_', 'M', 'M', 0,
  /* 6111 */ 'S', 'W', '_', 'M', 'M', 0,
  /* 6117 */ 'A', 'D', 'D', 'i', '_', 'M', 'M', 0,
  /* 6125 */ 'A', 'N', 'D', 'i', '_', 'M', 'M', 0,
  /* 6133 */ 'X', 'O', 'R', 'i', '_', 'M', 'M', 0,
  /* 6141 */ 'S', 'L', 'T', 'i', '_', 'M', 'M', 0,
  /* 6149 */ 'L', 'U', 'i', '_', 'M', 'M', 0,
  /* 6156 */ 'L', 'B', 'u', '_', 'M', 'M', 0,
  /* 6163 */ 'S', 'U', 'B', 'u', '_', 'M', 'M', 0,
  /* 6171 */ 'A', 'D', 'D', 'u', '_', 'M', 'M', 0,
  /* 6179 */ 'L', 'H', 'u', '_', 'M', 'M', 0,
  /* 6186 */ 'S', 'L', 'T', 'u', '_', 'M', 'M', 0,
  /* 6194 */ 'M', 'U', 'L', 'T', 'u', '_', 'M', 'M', 0,
  /* 6203 */ 'A', 'D', 'D', 'i', 'u', '_', 'M', 'M', 0,
  /* 6212 */ 'S', 'L', 'T', 'i', 'u', '_', 'M', 'M', 0,
  /* 6221 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 6231 */ 'D', 'I', 'N', 'S', 'M', 0,
  /* 6237 */ 'D', 'E', 'X', 'T', 'M', 0,
  /* 6243 */ 'B', 'A', 'L', 'I', 'G', 'N', 0,
  /* 6250 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 6267 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 6283 */ 'D', 'C', 'L', 'O', 0,
  /* 6288 */ 'M', 'F', 'L', 'O', 0,
  /* 6293 */ 'S', 'H', 'I', 'L', 'O', 0,
  /* 6299 */ 'M', 'T', 'L', 'O', 0,
  /* 6304 */ 'T', 'R', 'A', 'P', 0,
  /* 6309 */ 'E', 'X', 'T', 'P', 'D', 'P', 0,
  /* 6316 */ 'M', 'T', 'H', 'L', 'I', 'P', 0,
  /* 6323 */ 'M', 'F', 'C', '0', '_', '3', 'O', 'P', 0,
  /* 6332 */ 'M', 'T', 'C', '0', '_', '3', 'O', 'P', 0,
  /* 6341 */ 'M', 'F', 'C', '2', '_', '3', 'O', 'P', 0,
  /* 6350 */ 'M', 'T', 'C', '2', '_', '3', 'O', 'P', 0,
  /* 6359 */ 'N', 'O', 'P', 0,
  /* 6363 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '6', '4', 'D', 'S', 'P', 0,
  /* 6377 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '6', '4', 'D', 'S', 'P', 0,
  /* 6392 */ 'R', 'D', 'D', 'S', 'P', 0,
  /* 6398 */ 'W', 'R', 'D', 'S', 'P', 0,
  /* 6404 */ 'M', 'S', 'U', 'B', '_', 'D', 'S', 'P', 0,
  /* 6413 */ 'M', 'A', 'D', 'D', '_', 'D', 'S', 'P', 0,
  /* 6422 */ 'L', 'O', 'A', 'D', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', 0,
  /* 6437 */ 'S', 'T', 'O', 'R', 'E', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', 0,
  /* 6453 */ 'M', 'F', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 6462 */ 'M', 'T', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 6471 */ 'M', 'F', 'L', 'O', '_', 'D', 'S', 'P', 0,
  /* 6480 */ 'M', 'T', 'L', 'O', '_', 'D', 'S', 'P', 0,
  /* 6489 */ 'M', 'U', 'L', 'T', '_', 'D', 'S', 'P', 0,
  /* 6498 */ 'M', 'S', 'U', 'B', 'U', '_', 'D', 'S', 'P', 0,
  /* 6508 */ 'M', 'A', 'D', 'D', 'U', '_', 'D', 'S', 'P', 0,
  /* 6518 */ 'M', 'U', 'L', 'T', 'U', '_', 'D', 'S', 'P', 0,
  /* 6528 */ 'E', 'X', 'T', 'P', 0,
  /* 6533 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 6548 */ 'B', 'E', 'Q', 0,
  /* 6552 */ 'T', 'E', 'Q', 0,
  /* 6556 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6571 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6585 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6600 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6611 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6622 */ 'B', 'A', 'L', '_', 'B', 'R', 0,
  /* 6629 */ 'L', 'D', 'R', 0,
  /* 6633 */ 'S', 'D', 'R', 0,
  /* 6637 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 6650 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 6663 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 6675 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 6689 */ 'J', 'R', 0,
  /* 6692 */ 'J', 'A', 'L', 'R', 0,
  /* 6697 */ 'N', 'O', 'R', 0,
  /* 6701 */ 'X', 'O', 'R', 0,
  /* 6705 */ 'D', 'R', 'O', 'T', 'R', 0,
  /* 6711 */ 'R', 'D', 'H', 'W', 'R', 0,
  /* 6717 */ 'L', 'W', 'R', 0,
  /* 6721 */ 'S', 'W', 'R', 0,
  /* 6725 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '6', '4', '_', 'R', 0,
  /* 6738 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '_', 'R', 0,
  /* 6749 */ 'D', 'I', 'N', 'S', 0,
  /* 6754 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 6771 */ 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'S', 0,
  /* 6781 */ 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'S', 0,
  /* 6791 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'S', 0,
  /* 6802 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'S', 0,
  /* 6813 */ 'F', 'S', 'U', 'B', '_', 'S', 0,
  /* 6820 */ 'N', 'M', 'S', 'U', 'B', '_', 'S', 0,
  /* 6828 */ 'F', 'A', 'D', 'D', '_', 'S', 0,
  /* 6835 */ 'N', 'M', 'A', 'D', 'D', '_', 'S', 0,
  /* 6843 */ 'C', '_', 'N', 'G', 'E', '_', 'S', 0,
  /* 6851 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'S', 0,
  /* 6860 */ 'C', '_', 'O', 'L', 'E', '_', 'S', 0,
  /* 6868 */ 'C', '_', 'U', 'L', 'E', '_', 'S', 0,
  /* 6876 */ 'C', '_', 'L', 'E', '_', 'S', 0,
  /* 6883 */ 'C', '_', 'S', 'F', '_', 'S', 0,
  /* 6890 */ 'M', 'O', 'V', 'F', '_', 'S', 0,
  /* 6897 */ 'C', '_', 'F', '_', 'S', 0,
  /* 6903 */ 'F', 'N', 'E', 'G', '_', 'S', 0,
  /* 6910 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'S', 0,
  /* 6919 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'S', 0,
  /* 6928 */ 'C', '_', 'N', 'G', 'L', '_', 'S', 0,
  /* 6936 */ 'F', 'M', 'U', 'L', '_', 'S', 0,
  /* 6943 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'S', 0,
  /* 6953 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'S', 0,
  /* 6963 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'S', 0,
  /* 6972 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'S', 0,
  /* 6982 */ 'C', 'V', 'T', '_', 'L', '_', 'S', 0,
  /* 6990 */ 'C', '_', 'U', 'N', '_', 'S', 0,
  /* 6997 */ 'C', '_', 'S', 'E', 'Q', '_', 'S', 0,
  /* 7005 */ 'C', '_', 'U', 'E', 'Q', '_', 'S', 0,
  /* 7013 */ 'C', '_', 'E', 'Q', '_', 'S', 0,
  /* 7020 */ 'F', 'A', 'B', 'S', '_', 'S', 0,
  /* 7027 */ 'C', '_', 'N', 'G', 'T', '_', 'S', 0,
  /* 7035 */ 'C', '_', 'O', 'L', 'T', '_', 'S', 0,
  /* 7043 */ 'C', '_', 'U', 'L', 'T', '_', 'S', 0,
  /* 7051 */ 'C', '_', 'L', 'T', '_', 'S', 0,
  /* 7058 */ 'F', 'S', 'Q', 'R', 'T', '_', 'S', 0,
  /* 7066 */ 'M', 'O', 'V', 'T', '_', 'S', 0,
  /* 7073 */ 'F', 'D', 'I', 'V', '_', 'S', 0,
  /* 7080 */ 'F', 'M', 'O', 'V', '_', 'S', 0,
  /* 7087 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'S', 0,
  /* 7097 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'S', 0,
  /* 7107 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'S', 0,
  /* 7116 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'S', 0,
  /* 7126 */ 'C', 'V', 'T', '_', 'W', '_', 'S', 0,
  /* 7134 */ 'B', 'C', '1', 'T', 0,
  /* 7139 */ 'D', 'E', 'R', 'E', 'T', 0,
  /* 7145 */ 'S', 'L', 'T', 0,
  /* 7149 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'M', 'U', 'L', 'T', 0,
  /* 7161 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 0,
  /* 7172 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 7187 */ 'D', 'E', 'X', 'T', 0,
  /* 7192 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 'U', 0,
  /* 7204 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 'U', 0,
  /* 7216 */ 'D', 'I', 'N', 'S', 'U', 0,
  /* 7222 */ 'D', 'E', 'X', 'T', 'U', 0,
  /* 7228 */ 'D', 'S', 'R', 'A', 'V', 0,
  /* 7234 */ 'B', 'I', 'T', 'R', 'E', 'V', 0,
  /* 7241 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'S', 'D', 'I', 'V', 0,
  /* 7253 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'D', 'I', 'V', 0,
  /* 7264 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'U', 'D', 'I', 'V', 0,
  /* 7276 */ 'P', 's', 'e', 'u', 'd', 'o', 'U', 'D', 'I', 'V', 0,
  /* 7287 */ 'D', 'S', 'L', 'L', 'V', 0,
  /* 7293 */ 'D', 'S', 'R', 'L', 'V', 0,
  /* 7299 */ 'S', 'H', 'I', 'L', 'O', 'V', 0,
  /* 7306 */ 'E', 'X', 'T', 'P', 'D', 'P', 'V', 0,
  /* 7314 */ 'E', 'X', 'T', 'P', 'V', 0,
  /* 7320 */ 'D', 'R', 'O', 'T', 'R', 'V', 0,
  /* 7327 */ 'I', 'N', 'S', 'V', 0,
  /* 7332 */ 'L', 'W', 0,
  /* 7335 */ 'S', 'W', 0,
  /* 7338 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'W', 0,
  /* 7354 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'W', 0,
  /* 7370 */ 'L', 'D', '_', 'W', 0,
  /* 7375 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'P', 'H', '_', 'W', 0,
  /* 7390 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'P', 'H', '_', 'W', 0,
  /* 7402 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'R', '_', 'P', 'H', '_', 'W', 0,
  /* 7419 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'R', 'S', '_', 'P', 'H', '_', 'W', 0,
  /* 7434 */ 'S', 'U', 'B', 'Q', 'H', '_', 'W', 0,
  /* 7442 */ 'A', 'D', 'D', 'Q', 'H', '_', 'W', 0,
  /* 7450 */ 'D', 'P', 'A', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', 0,
  /* 7462 */ 'D', 'P', 'S', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', 0,
  /* 7474 */ 'E', 'X', 'T', 'R', '_', 'W', 0,
  /* 7481 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'W', 0,
  /* 7490 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'W', 0,
  /* 7500 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'W', 0,
  /* 7510 */ 'E', 'X', 'T', 'R', '_', 'R', '_', 'W', 0,
  /* 7519 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'W', 0,
  /* 7529 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', '_', 'W', 0,
  /* 7539 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'W', 0,
  /* 7549 */ 'E', 'X', 'T', 'R', '_', 'R', 'S', '_', 'W', 0,
  /* 7559 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', 'S', '_', 'W', 0,
  /* 7570 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'W', 0,
  /* 7579 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'W', 0,
  /* 7588 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'W', 0,
  /* 7597 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'W', 0,
  /* 7606 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'W', 0,
  /* 7615 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'S', '_', 'W', 0,
  /* 7629 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'W', 0,
  /* 7639 */ 'S', 'T', '_', 'W', 0,
  /* 7644 */ 'E', 'X', 'T', 'R', 'V', '_', 'W', 0,
  /* 7652 */ 'L', 'H', 'X', 0,
  /* 7656 */ 'L', 'B', 'U', 'X', 0,
  /* 7661 */ 'L', 'W', 'X', 0,
  /* 7665 */ 'C', 'O', 'P', 'Y', 0,
  /* 7670 */ 'B', 'G', 'E', 'Z', 0,
  /* 7675 */ 'B', 'L', 'E', 'Z', 0,
  /* 7680 */ 'D', 'C', 'L', 'Z', 0,
  /* 7685 */ 'B', 'G', 'T', 'Z', 0,
  /* 7690 */ 'B', 'L', 'T', 'Z', 0,
  /* 7695 */ 'S', 'e', 'l', 'B', 'n', 'e', 'Z', 0,
  /* 7703 */ 'S', 'e', 'l', 'B', 'e', 'q', 'Z', 0,
  /* 7711 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', '3', '2', 'R', 'e', 'g', 0,
  /* 7724 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', '3', '2', 'R', 'e', 'g', 0,
  /* 7738 */ 'D', 'A', 'D', 'D', 'i', 0,
  /* 7744 */ 'A', 'N', 'D', 'i', 0,
  /* 7749 */ 'X', 'O', 'R', 'i', 0,
  /* 7754 */ 'S', 'L', 'T', 'i', 0,
  /* 7759 */ 'L', 'U', 'i', 0,
  /* 7763 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'C', 'm', 'p', 'i', 0,
  /* 7777 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'C', 'm', 'p', 'i', 0,
  /* 7791 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'i', 0,
  /* 7805 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'i', 0,
  /* 7819 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', '3', '2', 'I', 'm', 'm', 0,
  /* 7833 */ 'J', 'A', 'L', 'R', '6', '4', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 7846 */ 'J', 'A', 'L', 'R', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 7857 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'C', 'm', 'p', 0,
  /* 7870 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'C', 'm', 'p', 0,
  /* 7883 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 0,
  /* 7896 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 0,
  /* 7909 */ 'L', 'B', 'u', 0,
  /* 7913 */ 'D', 'S', 'U', 'B', 'u', 0,
  /* 7919 */ 'D', 'A', 'D', 'D', 'u', 0,
  /* 7925 */ 'L', 'H', 'u', 0,
  /* 7929 */ 'S', 'L', 'T', 'u', 0,
  /* 7934 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'M', 'U', 'L', 'T', 'u', 0,
  /* 7947 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 'u', 0,
  /* 7959 */ 'L', 'W', 'u', 0,
  /* 7963 */ 'D', 'A', 'D', 'D', 'i', 'u', 0,
  /* 7970 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', 0,
  /* 7980 */ 'S', 'L', 'T', 'i', 'u', 0,
  /* 7986 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'i', 'u', 0,
  /* 8001 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'i', 'u', 0,
  /* 8016 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'u', 0,
  /* 8030 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'u', 0,
};

extern const unsigned MipsInstrNameIndices[] = {
    5614U, 6221U, 5786U, 5799U, 5777U, 5877U, 4988U, 5003U, 
    4975U, 5017U, 6754U, 4960U, 4936U, 7665U, 4949U, 7172U, 
    4910U, 5321U, 4679U, 7606U, 4867U, 5122U, 5239U, 7500U, 
    7442U, 5194U, 5301U, 7588U, 4850U, 4547U, 4657U, 5386U, 
    4759U, 5341U, 4699U, 4856U, 5960U, 7739U, 6117U, 7964U, 
    6203U, 7920U, 6171U, 6250U, 6533U, 4891U, 772U, 5967U, 
    7744U, 1690U, 6125U, 4903U, 1939U, 3846U, 566U, 3313U, 
    1445U, 3596U, 3111U, 4052U, 1862U, 3757U, 489U, 3224U, 
    1337U, 3507U, 3038U, 3967U, 1903U, 3804U, 530U, 3271U, 
    1378U, 3554U, 3077U, 4012U, 1882U, 3780U, 509U, 3247U, 
    1357U, 3530U, 3057U, 3989U, 1979U, 3892U, 606U, 3359U, 
    1485U, 3642U, 3149U, 4096U, 1842U, 3734U, 469U, 3201U, 
    1317U, 3484U, 3019U, 3945U, 1959U, 3869U, 586U, 3336U, 
    1465U, 3619U, 3130U, 4074U, 1923U, 3827U, 550U, 3294U, 
    1429U, 3577U, 3096U, 4034U, 2362U, 2238U, 2686U, 2390U, 
    2187U, 2626U, 2254U, 2954U, 2893U, 4483U, 6243U, 6622U, 
    4970U, 7134U, 6548U, 1587U, 7670U, 1653U, 5689U, 7685U, 
    1667U, 7234U, 7675U, 1660U, 7690U, 1674U, 5696U, 4956U, 
    1224U, 460U, 6267U, 5679U, 2713U, 2419U, 2432U, 2701U, 
    2406U, 2612U, 2454U, 2030U, 2482U, 2060U, 2512U, 2543U, 
    2567U, 2440U, 2015U, 2468U, 2045U, 2496U, 2528U, 2558U, 
    1230U, 992U, 6963U, 427U, 1191U, 7107U, 22U, 6284U, 
    7681U, 4594U, 4496U, 4709U, 4607U, 4509U, 4722U, 4625U, 
    4527U, 4740U, 5208U, 5103U, 5368U, 33U, 6771U, 7344U, 
    5910U, 6781U, 7360U, 1015U, 6982U, 317U, 1081U, 5926U, 
    7621U, 450U, 1214U, 7126U, 299U, 1063U, 7013U, 203U, 
    910U, 6897U, 176U, 883U, 6876U, 357U, 1121U, 7051U, 
    135U, 842U, 6843U, 145U, 852U, 6851U, 242U, 949U, 
    6928U, 327U, 1091U, 7027U, 156U, 863U, 6860U, 337U, 
    1101U, 7035U, 279U, 1043U, 6997U, 185U, 892U, 6883U, 
    289U, 1053U, 7005U, 166U, 873U, 6868U, 347U, 1111U, 
    7043U, 261U, 1025U, 6990U, 2775U, 2649U, 2336U, 676U, 
    4866U, 7738U, 7963U, 7919U, 6283U, 7680U, 7139U, 7187U, 
    6237U, 7222U, 5603U, 6749U, 6231U, 7216U, 1539U, 27U, 
    1563U, 1551U, 38U, 1575U, 7155U, 7940U, 5450U, 5525U, 
    7450U, 5487U, 5747U, 6600U, 5551U, 5430U, 5464U, 5538U, 
    7462U, 5513U, 5758U, 6611U, 5561U, 5478U, 6705U, 7320U, 
    5031U, 7247U, 4882U, 5882U, 625U, 648U, 7287U, 4470U, 
    90U, 7228U, 5887U, 632U, 7293U, 7913U, 7270U, 2861U, 
    2839U, 5606U, 7140U, 7188U, 6528U, 6309U, 7306U, 7314U, 
    7559U, 7529U, 5588U, 7644U, 7549U, 7510U, 5579U, 7474U, 
    1243U, 308U, 1072U, 7020U, 116U, 823U, 6828U, 270U, 
    1034U, 639U, 385U, 1149U, 7073U, 1003U, 6972U, 438U, 
    1202U, 7116U, 394U, 1158U, 7080U, 252U, 959U, 6936U, 
    211U, 918U, 6903U, 366U, 1130U, 7058U, 97U, 804U, 
    6813U, 6750U, 7327U, 5677U, 5685U, 6692U, 1598U, 7833U, 
    7846U, 6689U, 1593U, 2620U, 2584U, 2576U, 2732U, 2591U, 
    4485U, 739U, 3423U, 7656U, 5941U, 4201U, 4117U, 7909U, 
    1733U, 3716U, 6156U, 4255U, 4387U, 4888U, 6U, 687U, 
    3381U, 5769U, 4167U, 6629U, 4347U, 54U, 701U, 3401U, 
    4835U, 4926U, 5574U, 4143U, 7370U, 7970U, 1752U, 5045U, 
    1267U, 3468U, 7652U, 5974U, 4219U, 4155U, 7925U, 1739U, 
    3725U, 6179U, 4265U, 4394U, 5866U, 4887U, 4142U, 4181U, 
    2994U, 3914U, 749U, 6363U, 4275U, 3439U, 6422U, 4310U, 
    66U, 717U, 7759U, 1711U, 6149U, 7332U, 1643U, 3700U, 
    44U, 3167U, 5896U, 1513U, 3664U, 6007U, 4187U, 6717U, 
    1625U, 3682U, 6043U, 4361U, 7661U, 78U, 3183U, 6105U, 
    4237U, 4375U, 7959U, 4401U, 2089U, 2153U, 2121U, 2170U, 
    2639U, 2325U, 7819U, 7724U, 7711U, 674U, 2206U, 2268U, 
    4877U, 7210U, 6508U, 126U, 833U, 6413U, 6836U, 5808U, 
    6637U, 5834U, 6663U, 6323U, 28U, 6341U, 5609U, 1277U, 
    6453U, 6288U, 1525U, 6471U, 658U, 1717U, 4817U, 194U, 
    901U, 5645U, 1398U, 6890U, 778U, 5623U, 1291U, 6791U, 
    220U, 927U, 5652U, 1407U, 6910U, 376U, 1140U, 5670U, 
    1504U, 7066U, 791U, 5634U, 1304U, 6802U, 231U, 938U, 
    5661U, 1418U, 6919U, 4830U, 7198U, 6498U, 107U, 814U, 
    6404U, 6821U, 6332U, 39U, 6350U, 5618U, 1284U, 6462U, 
    6316U, 6299U, 1532U, 6480U, 5892U, 5846U, 6675U, 5703U, 
    6556U, 5261U, 7539U, 5311U, 7597U, 5499U, 5439U, 7156U, 
    6518U, 6489U, 6064U, 7941U, 6194U, 6000U, 5179U, 5282U, 
    2605U, 2725U, 1998U, 1772U, 2795U, 2928U, 2827U, 2980U, 
    125U, 832U, 6835U, 106U, 813U, 6820U, 6359U, 6697U, 
    1605U, 6021U, 2765U, 2806U, 6698U, 1606U, 6022U, 7750U, 
    1698U, 6134U, 2905U, 5169U, 5137U, 4562U, 5732U, 4423U, 
    6585U, 4454U, 5821U, 6650U, 5718U, 4408U, 6571U, 4439U, 
    5081U, 7390U, 5056U, 7419U, 5069U, 7375U, 7402U, 4895U, 
    4619U, 4521U, 4734U, 5202U, 5097U, 5362U, 7338U, 5904U, 
    7354U, 5920U, 7615U, 7149U, 7934U, 7241U, 7264U, 0U, 
    4871U, 7204U, 4824U, 7192U, 7161U, 7947U, 5131U, 4556U, 
    11U, 7253U, 7276U, 4803U, 6392U, 6711U, 1617U, 5412U, 
    4785U, 5153U, 4578U, 7141U, 6706U, 7321U, 6096U, 6035U, 
    980U, 6953U, 415U, 1179U, 7097U, 1826U, 1790U, 4475U, 
    1782U, 4814U, 744U, 3431U, 5947U, 4210U, 4123U, 4853U, 
    4862U, 4135U, 4129U, 4923U, 17U, 694U, 3391U, 7248U, 
    5773U, 4174U, 6633U, 4354U, 60U, 709U, 3412U, 4149U, 
    4481U, 733U, 5041U, 1261U, 5571U, 1272U, 3476U, 6293U, 
    7299U, 5403U, 4776U, 5351U, 7629U, 5145U, 4570U, 5272U, 
    7570U, 5394U, 4767U, 5250U, 4668U, 7519U, 5048U, 4488U, 
    5218U, 4636U, 7481U, 5421U, 4794U, 5161U, 4586U, 5980U, 
    4228U, 4161U, 5883U, 649U, 1681U, 7288U, 6080U, 5986U, 
    7145U, 1637U, 6057U, 7754U, 1704U, 6141U, 7980U, 1764U, 
    6212U, 7929U, 1745U, 6186U, 4471U, 7229U, 6072U, 5934U, 
    5888U, 7294U, 6088U, 5993U, 3006U, 3929U, 760U, 6377U, 
    4292U, 3453U, 6437U, 4328U, 4840U, 4931U, 5598U, 7639U, 
    4820U, 5113U, 5228U, 7490U, 7434U, 5186U, 5291U, 7579U, 
    4538U, 4646U, 5378U, 4751U, 5331U, 4689U, 5953U, 7914U, 
    6163U, 72U, 725U, 7335U, 1648U, 3708U, 49U, 3175U, 
    5900U, 1519U, 3673U, 6014U, 4194U, 6721U, 1631U, 3691U, 
    6050U, 4368U, 84U, 3192U, 6111U, 4246U, 4381U, 4845U, 
    5869U, 1813U, 1803U, 2105U, 7703U, 7695U, 7870U, 7777U, 
    7896U, 7805U, 8001U, 8030U, 7857U, 7763U, 7883U, 7791U, 
    7986U, 8016U, 2137U, 2075U, 2871U, 2740U, 2785U, 2294U, 
    2661U, 2349U, 2309U, 2673U, 2376U, 2752U, 2816U, 2967U, 
    2008U, 2850U, 2082U, 2882U, 2941U, 2222U, 2281U, 5860U, 
    6725U, 6738U, 6552U, 6304U, 968U, 6943U, 403U, 1167U, 
    7087U, 7271U, 6398U, 5036U, 6701U, 1611U, 6028U, 7749U, 
    1697U, 6133U, 2916U, 
};

static inline void InitMipsMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, 851);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct MipsGenInstrInfo : public TargetInstrInfo {
  explicit MipsGenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc MipsInsts[];
extern const unsigned MipsInstrNameIndices[];
extern const char MipsInstrNameData[];
MipsGenInstrInfo::MipsGenInstrInfo(int SO, int DO)
  : TargetInstrInfo(SO, DO) {
  InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, 851);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {namespace Mips {
namespace OpName { 
enum {
OPERAND_LAST
};
} // End namespace OpName
} // End namespace Mips
} // End namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM
#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {namespace Mips {
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // End namespace Mips
} // End namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS
#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace Mips {

enum Arch {
	Arch_se,
	Arch_micromips
};

// Std2MicroMips
int Std2MicroMips(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Std2MicroMipsTable[][3] = {
  { Mips::ADD, Mips::ADD, Mips::ADD_MM },
  { Mips::ADDi, Mips::ADDi, Mips::ADDi_MM },
  { Mips::ADDiu, Mips::ADDiu, Mips::ADDiu_MM },
  { Mips::ADDu, Mips::ADDu, Mips::ADDu_MM },
  { Mips::AND, Mips::AND, Mips::AND_MM },
  { Mips::ANDi, Mips::ANDi, Mips::ANDi_MM },
  { Mips::LB, Mips::LB, Mips::LB_MM },
  { Mips::LB_P8, Mips::LB_P8, Mips::LB_MM_P8 },
  { Mips::LBu, Mips::LBu, Mips::LBu_MM },
  { Mips::LBu_P8, Mips::LBu_P8, Mips::LBu_MM_P8 },
  { Mips::LH, Mips::LH, Mips::LH_MM },
  { Mips::LH_P8, Mips::LH_P8, Mips::LH_MM_P8 },
  { Mips::LHu, Mips::LHu, Mips::LHu_MM },
  { Mips::LHu_P8, Mips::LHu_P8, Mips::LHu_MM_P8 },
  { Mips::LW, Mips::LW, Mips::LW_MM },
  { Mips::LW_P8, Mips::LW_P8, Mips::LW_MM_P8 },
  { Mips::MUL, Mips::MUL, Mips::MUL_MM },
  { Mips::MULT, Mips::MULT, Mips::MULT_MM },
  { Mips::MULTu, Mips::MULTu, Mips::MULTu_MM },
  { Mips::NOR, Mips::NOR, Mips::NOR_MM },
  { Mips::OR, Mips::OR, Mips::OR_MM },
  { Mips::ORi, Mips::ORi, Mips::ORi_MM },
  { Mips::ROTR, Mips::ROTR, Mips::ROTR_MM },
  { Mips::ROTRV, Mips::ROTRV, Mips::ROTRV_MM },
  { Mips::SB, Mips::SB, Mips::SB_MM },
  { Mips::SB_P8, Mips::SB_P8, Mips::SB_MM_P8 },
  { Mips::SH, Mips::SH, Mips::SH_MM },
  { Mips::SH_P8, Mips::SH_P8, Mips::SH_MM_P8 },
  { Mips::SLL, Mips::SLL, Mips::SLL_MM },
  { Mips::SLLV, Mips::SLLV, Mips::SLLV_MM },
  { Mips::SLT, Mips::SLT, Mips::SLT_MM },
  { Mips::SLTi, Mips::SLTi, Mips::SLTi_MM },
  { Mips::SLTiu, Mips::SLTiu, Mips::SLTiu_MM },
  { Mips::SLTu, Mips::SLTu, Mips::SLTu_MM },
  { Mips::SRA, Mips::SRA, Mips::SRA_MM },
  { Mips::SRAV, Mips::SRAV, Mips::SRAV_MM },
  { Mips::SRL, Mips::SRL, Mips::SRL_MM },
  { Mips::SRLV, Mips::SRLV, Mips::SRLV_MM },
  { Mips::SUB, Mips::SUB, Mips::SUB_MM },
  { Mips::SUBu, Mips::SUBu, Mips::SUBu_MM },
  { Mips::SW, Mips::SW, Mips::SW_MM },
  { Mips::SW_P8, Mips::SW_P8, Mips::SW_MM_P8 },
  { Mips::XOR, Mips::XOR, Mips::XOR_MM },
  { Mips::XORi, Mips::XORi, Mips::XORi_MM },
}; // End of Std2MicroMipsTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 44;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == Std2MicroMipsTable[mid][0]) {
      break;
    }
    if (Opcode < Std2MicroMipsTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_se)
    return Std2MicroMipsTable[mid][1];
  if (inArch == Arch_micromips)
    return Std2MicroMipsTable[mid][2];
  return -1;}

} // End Mips namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

